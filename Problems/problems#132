
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="gdge5h6dc7f58fadh4982h5a419hg4e1"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="n6itrea93m8j"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='gdge5h6dc7f58fadh4982h5a419hg4e1'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Beta Round #96 (Div. 1)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Лента Тьюринга</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>INTERCAL — самый старый эзотерический язык программирования. Одна из его многих странностей — метод символьного вывода, известный как лента Тьюринга. Он преобразует массив беззнаковых 8-битных целых чисел в последовательность символов по следующему алгоритму.</p><p>Числа массива обрабатываются по одному, начиная с первого. Обработка <span class="tex-span"><i>i</i></span>-ого числа состоит из трех шагов:</p><p>1. 8-битная двоичная запись ASCII-кода предыдущего напечатанного символа отображается зеркально. При обработке первого числа массива результат этого шага считается равным нулю.</p><p>2. Из результата предыдущего шага вычитается <span class="tex-span"><i>i</i></span>-ое число массива по модулю 256.</p><p>3. Двоичная запись результата предыдущего шага отображается зеркально, чтобы получить ASCII-код очередного (<span class="tex-span"><i>i</i></span>-ого) символа для печати.</p><p>Дан текст, напечатанный этим способом. Восстановите оригинальный массив.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке входных данных задана строка <span class="tex-span"><i>text</i></span> — сообщение, напечатанное описанным способом. Строка <span class="tex-span"><i>text</i></span> содержит от 1 до 100 символов, включительно. ASCII-код каждого символа будет от 32 (пробел) до 126 (тильда), включительно.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите исходный массив, который использовался для печати <span class="tex-span"><i>text</i></span>, по одному элементу на строку.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>Hello, World!<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>238<br />108<br />112<br />0<br />64<br />194<br />48<br />26<br />244<br />168<br />24<br />16<br />162<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Рассмотрим начало примера. Первый символ — «<span class="tex-font-style-tt">H</span>», ASCII-код <span class="tex-span">72 = 01001000<sub class="lower-index">2</sub></span>. Его зеркальное отображение <span class="tex-span">00010010<sub class="lower-index">2</sub> = 18</span>, и это число должно стать результатом второго шага обработки. Результатом первого шага обработки считается 0, поэтому первое число массива должно быть равно <span class="tex-span">(0 - 18)</span> mod <span class="tex-span">256 = 238</span>, где <span class="tex-span"><i>a</i></span> mod <span class="tex-span"><i>b</i></span> — остаток от деления <span class="tex-span"><i>a</i></span> на <span class="tex-span"><i>b</i></span>.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Piet</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Piet — один из самых известных визуальных эзотерических языков программирования. Программы на нем составляются из разноцветных блоков пикселей и интерпретируются по довольно сложным правилам. В этой задаче мы рассмотрим подмножество языка Piet с упрощенными правилами.</p><p>Программа будет прямоугольным изображением, состоящим из цветных и черных пикселей. Цвет каждого пикселя будет задаваться целым числом от 0 до 9. Цвет 0 соответствует черному цвету. Блок пикселей определяется как прямоугольник, состоящий из пикселей одного цвета (не черного). Гарантируется, что все связные множества цветных пикселей будут образовывать прямоугольные блоки. Группы черных пикселей могут иметь произвольную форму.</p><p>В процессе интерпретации программы по ней двигается счетчик инструкций, состоящий из трех частей: </p><p><ul></ul></p><p><li> указателя на текущий блок (англ. block pointer, далее BP); текущий пиксель в блоке не выделяется;</li></p><p><li> указателя направления (англ. direction pointer, далее DP), который может указывать вверх, вниз, влево и вправо;</li></p><p><li> указателя выбора блоков (англ. block chooser, далее CP), который может указывать влево или вправо относительно DP (в абсолютных направлениях — отличаться от DP на 90 градусов против или по часовой стрелке, соответственно).</li></p><p>Изначально BP указывает на блок, которому принадлежит верхний левый пиксель программы, DP указывает вправо, а CP — влево относительно DP (см. оранжевый квадрат на рисунке ниже).</p><p>Один шаг изменения состояния счетчика происходит следующим образом. Для текущего блока находится его край в направлении DP. Из всех пикселей края выбирается крайний в направлении CP. Затем BP пытается переместиться из этого пикселя в соседний в направлении DP. Если соседний пиксель принадлежит цветному блоку (цвета, отличного от 0), этот блок становится текущим, а два других указателя сохраняют свои значения. Если же соседний пиксель имеет черный цвет (0) или находится за пределами программы, текущий блок остается прежним, а меняются направления двух других указателей следующим образом. Если CP указывал влево, теперь он указывает вправо, а DP не меняется. Если CP указывал вправо, то теперь он указывает влево, а DP поворачивается на 90 градусов по часовой стрелке.</p><p>Таким образом, текущий блок никогда не будет черного цвета. Гарантируется, что верхний левый блок программы не будет черным.</p><p>Вам дана программа на Piet. Определите, какой блок программы будет текущим через <span class="tex-span"><i>n</i></span> шагов.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных содержится два целых числа <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>m</i> ≤ 50</span>) и <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 5·10<sup class="upper-index">7</sup></span>). Следующие <span class="tex-span"><i>m</i></span> строк содержат строки программы. Все строки программы имеют одинаковую длину от 1 до 50 и состоят из символов <span class="tex-font-style-tt">0-9</span>. Первый символ первой строки будет не равен 0.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите цвет блока, который будет текущим через <span class="tex-span"><i>n</i></span> шагов интерпретации программы.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 10<br />12<br />43<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 12<br />1423<br />6624<br />6625<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5 9<br />10345<br />23456<br />34567<br />45678<br />56789<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере счетчик инструкций изменяется следующим образом. После первого шага блок 2 становится текущим блоком и остается им еще два шага. После шага 4 текущим становится блок 3, после шага 7 — блок 4, и, наконец, после шага 10 указатель текущего блока возвращается в блок 1.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/365621543dad33ef7ba9d60442979d5472a10353.png" /> </center></p><p>Последовательность состояний счетчика инструкций изображена на рисунке: стрелки обходятся по часовой стрелке, основная стрелка соответствует DP, боковая — CP.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Черепашка Logo</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>У многих язык Logo ассоциируется прежде всего с черепашьей графикой. Черепашка двигается на прямой и управляется командами «<span class="tex-font-style-tt">T</span>» («развернись на 180 градусов») и «<span class="tex-font-style-tt">F</span>» («ползи вперед на расстояние 1»).</p><p>Задан список команд, которые будут поданы черепашке последовательно. В нем нужно изменить ровно <span class="tex-span"><i>n</i></span> команд (одну команду можно изменять несколько раз). На какое максимальное расстояние от начального положения может уползти черепашка после выполнения <span class="tex-font-style-bf">всех</span> команд измененного списка?</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных содержится строка <span class="tex-span"><i>commands</i></span> — исходный список команд. Строка <span class="tex-span"><i>commands</i></span> содержит от 1 до 100 символов, включительно, и состоит только из символов «<span class="tex-font-style-tt">T</span>» и «<span class="tex-font-style-tt">F</span>».</p><p>Во второй строке содержится целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 50</span>) — количество команд, которые нужно изменить в списке. </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите максимальное возможное расстояние между начальным и конечным положением черепашки. Конечное положение черепашки — это ее положением после выполнения <span class="tex-font-style-bf">всех</span> команд измененного списка.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>FT<br />1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>FFFTFFF<br />2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере стоит изменить вторую команду («<span class="tex-font-style-tt">T</span>») на «<span class="tex-font-style-tt">F</span>» — тогда черепашка уползет на расстояние 2.</p><p>Во втором примере обязательно изменить две команды. Одним из способов уползти на максимальное расстояние 6 будет изменить четвертую команду и первую либо последнюю.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Константы на языке Шекспира</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Shakespeare — известный эзотерический язык, в котором программы имеют вид пьес Шекспира, а числа задаются комбинациями цветистых эпитетов. В этой задаче мы подробнее рассмотрим механизм задания чисел на этом языке.</p><p>Любая константа на Shakespeare формируется из неотрицательных степеней двойки при помощи арифметических действий. Для простоты разрешим использовать только сложение и вычитание и будем искать представление заданного числа, которое потребует минимального количества действий.</p><p>Задано натуральное число <span class="tex-span"><i>n</i></span>. Надо представить его в виде <span class="tex-span"><i>n</i> = <i>a</i><sub class="lower-index">1</sub> + <i>a</i><sub class="lower-index">2</sub> + ... + <i>a</i><sub class="lower-index"><i>m</i></sub></span>, где каждой <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> — это степень числа 2, взятая со знаком плюс или минус. Найдите такое преставление, что <span class="tex-span"><i>m</i></span> — минимально.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Единственная строка содержит целое положительное число <span class="tex-span"><i>n</i></span>, записанное в двоичной системе счисления. Длина заданного числа не превосходит <span class="tex-span">10<sup class="upper-index">6</sup></span>. Гарантируется, что первая цифра числа равна 1.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите искомое минимальное <span class="tex-span"><i>m</i></span>. Далее выведите <span class="tex-span"><i>m</i></span> строк. Каждая строка должны иметь вид «<span class="tex-font-style-tt">+2^x</span>» или «<span class="tex-font-style-tt">-2^x</span>», где <span class="tex-span"><i>x</i></span> — это показатель соответствующей степени двойки. Порядок вывода строк не имеет значения.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>1111<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />+2^4<br />-2^0<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1010011<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br />+2^0<br />+2^1<br />+2^4<br />+2^6<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Биты старой Англии</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Еще одна характерная черта языка Shakespeare — то, что переменные называются именами персонажей пьес Шекспира, а все действия над ними (изменение значений, вывод на печать и так далее) производятся в виде диалога с другими персонажами. Кроме того, новые значения переменных задаются довольно громоздко, поэтому их использование обычно стараются свести к минимуму.</p><p>Нам нужно вывести на печать заданную последовательность <span class="tex-span"><i>n</i></span> натуральных чисел. Для этого у нас есть <span class="tex-span"><i>m</i></span> персонажей-переменных и два вида действий над ними:</p><p><ul> <li> <span class="tex-font-style-tt">variable=integer</span> </li><li> <span class="tex-font-style-tt">print(variable)</span> </li></ul></p><p>В качестве <span class="tex-font-style-tt">variable</span> может выступать любая из <span class="tex-span"><i>m</i></span> переменных. Переменные обозначаются строчными латинскими буквами от «<span class="tex-font-style-tt">a</span>» до «<span class="tex-font-style-tt">z</span>» включительно. В качестве <span class="tex-font-style-tt">integer</span> может выступать любое натуральное число.</p><p>Будем считать штрафом за использование первого типа действия количество установленных бит в числе <span class="tex-font-style-tt">integer</span>. Штраф за использование второго типа действия — 0. Найдите и выведите программу, в которой суммарный штраф будет минимален.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны целые числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 250</span>, <span class="tex-span">1 ≤ <i>m</i> ≤ 26</span>). Вторая строка содержит последовательность чисел для вывода. Все ее элементы — натуральные числа от <span class="tex-span">1</span> до <span class="tex-span">10<sup class="upper-index">9</sup></span>, включительно. Последовательность надо выводить в заданном порядке (слева направо).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите количество строк и цену в оптимальной программе. Далее выведите саму программу, по одной команде на строку. Если таких программ несколько, то выведите любую (надо минимизировать только цену).</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>7 2<br />1 2 2 4 2 1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>11 4<br />b=1<br />print(b)<br />a=2<br />print(a)<br />print(a)<br />b=4<br />print(b)<br />print(a)<br />b=1<br />print(b)<br />print(a)<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>6 3<br />1 2 3 1 2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>9 4<br />c=1<br />print(c)<br />b=2<br />print(b)<br />a=3<br />print(a)<br />print(c)<br />print(b)<br />print(a)<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
