
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="39e151a72bd124ec390bba8b3h4ea6e1"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="12tuzwtk4z7ea"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='39e151a72bd124ec390bba8b3h4ea6e1'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Beta Round #92 (Div. 1 Only)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Перестановка на простоту</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 second</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Дана строка <span class="tex-span"><i>s</i></span>, состоящая из строчных букв латинского алфавита. Будем обозначать длину строки <span class="tex-span">|<i>s</i>|</span>. Нумерация символов в этой строке начинается с <span class="tex-span">1</span>. </p><p>Определите, возможно ли в строке <span class="tex-span"><i>s</i></span> так переставить символы, чтобы для любого простого числа <span class="tex-span"><i>p</i> ≤ |<i>s</i>|</span> и для любого целого <span class="tex-span"><i>i</i></span> в диапазоне от <span class="tex-span">1</span> до <span class="tex-span">|<i>s</i>| / <i>p</i></span> (включительно) выполнялось условие <span class="tex-span"><i>s</i><sub class="lower-index"><i>p</i></sub> = <i>s</i><sub class="lower-index"><i>p</i> × <i>i</i></sub></span>. В случае положительного ответа найдите один из способов так переставить символы.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке записана исходная строка <span class="tex-span"><i>s</i></span>, состоящая из строчных букв латинского алфавита (<span class="tex-span">1 ≤ |<i>s</i>| ≤ 1000</span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если в строке можно переставить символы так, чтобы выполнялись перечисленные выше условия, то выведите в первой строке «<span class="tex-font-style-tt">YES</span>» (без кавычек) и во второй — одну из возможных получившихся строк. Если такая перестановка невозможна, выведите одну строку «<span class="tex-font-style-tt">NO</span>».</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>abc<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br />abc<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>abcd<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>xxxyxxx<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br />xxxxxxy<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере подойдет любая из шести возможных строк «abc», «acb», «bac», «bca», «cab» или «cba».</p><p>Во втором примере никакая перестановка букв не будет выполнять условие при <span class="tex-span"><i>p</i> = 2</span> (<span class="tex-span"><i>s</i><sub class="lower-index">2</sub> = <i>s</i><sub class="lower-index">4</sub></span>).</p><p>Третий тест — подойдет любая строка, в которой символ «y» не стоит на позиции 2, 3, 4, 6.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Клетки</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>0.5 second</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Дано бесконечное клетчатое поле. Требуется попасть из клетки (<span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span>; <span class="tex-span"><i>y</i><sub class="lower-index">1</sub></span>) в клетку (<span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span>; <span class="tex-span"><i>y</i><sub class="lower-index">2</sub></span>), но не обязательно по кратчайшему пути. Двигаться по клеткам поля можно в четырех направлениях. То есть, находясь в некоторой клетке, можно перейти в любую соседнюю по стороне. </p><p>Клетка (<span class="tex-span"><i>x</i></span>; <span class="tex-span"><i>y</i></span>) считается плохой, если выполняется хотя бы одно из двух условий:</p><p><ul></ul></p><p><li> <span class="tex-span">|<i>x</i> + <i>y</i>| ≡ 0</span> <span class="tex-span">(<i>mod</i> 2<i>a</i>)</span>,</li></p><p><li> <span class="tex-span">|<i>x</i> - <i>y</i>| ≡ 0</span> <span class="tex-span">(<i>mod</i> 2<i>b</i>)</span>.</li></p><p> </p><p>Требуется узнать, какое наименьшее количество плохих клеток придется посетить по пути из (<span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span>; <span class="tex-span"><i>y</i><sub class="lower-index">1</sub></span>) в (<span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span>; <span class="tex-span"><i>y</i><sub class="lower-index">2</sub></span>).</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке заданы целые числа <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>b</i></span>, <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index">2</sub></span> — параметры плохих клеток, координаты начальной и конечной клеток соответственно (<span class="tex-span">2 ≤ <i>a</i>, <i>b</i> ≤ 10<sup class="upper-index">9</sup></span> и <span class="tex-span">|<i>x</i><sub class="lower-index">1</sub>|</span>,<span class="tex-span">|<i>y</i><sub class="lower-index">1</sub>|</span>,<span class="tex-span">|<i>x</i><sub class="lower-index">2</sub>|</span>,<span class="tex-span">|<i>y</i><sub class="lower-index">2</sub>| ≤ 10<sup class="upper-index">9</sup></span>). Гарантируется, что начальная и конечная клетки не являются плохими.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число — наименьшее количество плохих клеток, которые придется посетить чтобы попасть из клетки (<span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span>; <span class="tex-span"><i>y</i><sub class="lower-index">1</sub></span>) в клетку (<span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span>; <span class="tex-span"><i>y</i><sub class="lower-index">2</sub></span>).</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 2 1 0 0 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 2 10 11 0 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 4 3 -1 3 7<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В третьем примере один из возможных путей: (3;-1)-&gt;(3;0)-&gt;(3;1)-&gt;(3;2)-&gt;(4;2)-&gt;(4;3)-&gt;(4;4)-&gt;(4;5)-&gt;(4;6)-&gt;(4;7)-&gt;(3;7). Клетки (3;1) и (4;4) плохие.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Скобочки</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 second</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Двумерный массив называется <span class="tex-font-style-it">скобочным</span> массивом, если в каждой клетки находится одна из двух возможных скобочек — «(» или «)». Путь по клеткам двумерного массива называется <span class="tex-font-style-it">монотонным</span>, если любые две последовательные клетки в пути имеют общую сторону, и при этом каждая клетка пути находится либо ниже, либо правее предыдущей. </p><p>Двумерный скобочный массив размером <span class="tex-span"><i>n</i> × <i>m</i></span> называется <span class="tex-font-style-it">правильным скобочным</span> массивом, если любая строка, полученная выписыванием скобочек на каком-то монотонном пути из клетки <span class="tex-span">(1, 1)</span> в клетку <span class="tex-span">(<i>n</i>, <i>m</i>)</span>, образует правильную скобочную последовательность. </p><p>Определим операцию сравнения двух правильных скобочных массивов (<span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span>) следующим образом. Пусть задан двумерный массив приоритетов (<span class="tex-span"><i>p</i></span>) — двумерный массив, заполненный различными целыми числами от <span class="tex-span">1</span> до <span class="tex-span"><i>nm</i></span>. Найдем такую позицию <span class="tex-span">(<i>i</i>, <i>j</i>)</span> в двумерном массиве, что <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i>, <i>j</i></sub> ≠ <i>b</i><sub class="lower-index"><i>i</i>, <i>j</i></sub></span>. Если таких позиций несколько, выберем ту, где число <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i>, <i>j</i></sub></span> минимально. Если <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i>, <i>j</i></sub> = </span>«(», то <span class="tex-span"><i>a</i> &lt; <i>b</i></span>, иначе <span class="tex-span"><i>a</i> &gt; <i>b</i></span>. Если позиция <span class="tex-span">(<i>i</i>, <i>j</i>)</span> не найдена, то массивы считаются равными.</p><p>Ваша задача — найти <span class="tex-span"><i>k</i></span>-ый двумерный правильный скобочный массив. Гарантируется, что для заданных размеров <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> будет существовать не менее <span class="tex-span"><i>k</i></span> двумерных правильных скобочных массивов.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке заданы целые числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span> и <span class="tex-span"><i>k</i></span> — размеры массива и номер искомого правильного скобочного массива, который требуется найти (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 100</span>, <span class="tex-span">1 ≤ <i>k</i> ≤ 10<sup class="upper-index">18</sup></span>). Далее задается матрица приоритетов — <span class="tex-span"><i>n</i></span> строк по <span class="tex-span"><i>m</i></span> чисел, число <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i>, <i>j</i></sub></span> показывает приоритет символа <span class="tex-span"><i>j</i></span> в строке <span class="tex-span"><i>i</i></span> (<span class="tex-span">1 ≤ <i>p</i><sub class="lower-index"><i>i</i>, <i>j</i></sub> ≤ <i>nm</i></span>, все <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i>, <i>j</i></sub></span> различные).</p><p>Пожалуйста, не используйте спецификатор %lld для чтения или записи 64-битных целых чисел на С++. Рекомендуется использовать потоки cin, cout или спецификатор %I64d.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>k</i></span>-ый двумерный правильный скобочный массив.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>1 2 1<br />1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>()<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 3 1<br />1 2 3<br />4 5 6<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>(()<br />())<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 2 2<br />3 6<br />1 4<br />2 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>()<br />)(<br />()<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере существует лишь один правильный скобочный двумерный массив.</p><p>Во втором и третьем примерах существует по два варианта.</p><p>Напомним, что скобочная последовательность называется правильной, если путем вставки в нее символов «<span class="tex-font-style-tt">+</span>» и «<span class="tex-font-style-tt">1</span>» можно получить из нее корректное математическое выражение. Например, последовательности «<span class="tex-font-style-tt">(())()</span>», «<span class="tex-font-style-tt">()</span>» и «<span class="tex-font-style-tt">(()(()))</span>» — правильные, в то время как «<span class="tex-font-style-tt">)(</span>», «<span class="tex-font-style-tt">(()</span>» и «<span class="tex-font-style-tt">(()))(</span>» — нет.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Строка</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Дана строка <span class="tex-span"><i>s</i></span>. Каждой паре чисел <span class="tex-span"><i>l</i></span> и <span class="tex-span"><i>r</i></span>, удовлетворяющих условию <span class="tex-span">1 ≤ <i>l</i> ≤ <i>r</i> ≤ |<i>s</i>|</span>, соответствует подстрока строки <span class="tex-span"><i>s</i></span>, начинающаяся в позиции <span class="tex-span"><i>l</i></span> и заканчивающаяся в позиции <span class="tex-span"><i>r</i></span> (включительно).</p><p>Определим функцию от двух строк <span class="tex-span"><i>F</i>(<i>x</i>, <i>y</i>)</span> следующим образом. Найдем список таких пар чисел, для которых соответствующие подстроки строки <span class="tex-span"><i>x</i></span> равны строке <span class="tex-span"><i>y</i></span>. Отсортируем этот список пар по возрастанию первого числа в паре. Значение функции <span class="tex-span"><i>F</i>(<i>x</i>, <i>y</i>)</span> равно количеству непустых непрерывных подпоследовательностей в списке.</p><p>Например: <span class="tex-span"><i>F</i>(<i>babbabbababbab</i>, <i>babb</i>) = 6</span>. Список пар:</p><p><span class="tex-span">(1, 4), (4, 7), (9, 12)</span></p><p>Его непрерывные подпоследовательности: <ul> <li> <span class="tex-span">(1, 4)</span> </li><li> <span class="tex-span">(4, 7)</span> </li><li> <span class="tex-span">(9, 12)</span> </li><li> <span class="tex-span">(1, 4), (4, 7)</span> </li><li> <span class="tex-span">(4, 7), (9, 12)</span> </li><li> <span class="tex-span">(1, 4), (4, 7), (9, 12)</span> </li></ul></p><p>Для заданной строки <span class="tex-span"><i>s</i></span> требуется подсчитать сумму <span class="tex-span"><i>F</i>(<i>s</i>, <i>x</i>)</span> для всех <span class="tex-span"><i>x</i></span>, принадлежащих множеству всех подстрок строки <span class="tex-span"><i>s</i></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке находится данная строка <span class="tex-span"><i>s</i></span>, которая состоит только из маленьких латинских букв (<span class="tex-span">1 ≤ |<i>s</i>| ≤ 10<sup class="upper-index">5</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число — искомую сумму.</p><p>Пожалуйста, не используйте спецификатор %lld для чтения или записи 64-битных целых чисел на С++. Рекомендуется использовать потоки cin, cout или спецификатор %I64d.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>aaaa<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>20<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>abcdef<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>21<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>abacabadabacaba<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>188<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере значения функции при <span class="tex-span"><i>x</i></span> равном «a», «aa», «aaa» и «aaaa» равны 10, 6, 3 и 1 соответственно.</p><p>Во втором примере для любого удовлетворяющего <span class="tex-span"><i>x</i></span> значение функции равно 1.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Лабиринт</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 second</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Лабиринт представляет из себя дерево (неориентированный граф, в котором между любой парой вершин существует ровно один путь). В лабиринте с определенной вероятностью выбираются вершины входа и выхода. Выход из лабиринта ищется при помощи обхода в глубину, в случае нескольких возможных ходов, ход выбирается равновероятно. Рассмотрим псевдокод:<pre><br />DFS(x)<br />    if x == вершина выхода then<br />        <span class="tex-font-style-it">завершить обход дерева</span><br />    flag[x] &lt;- TRUE<br />    перемешать порядок вершин в V(x) // здесь каждая перестановка V(x) равновероятна<br />    for i &lt;- 1 to length[V] do<br />        if flag[V[i]] = FALSE then<br />            count++;<br />            DFS(V[i]);<br />    count++;<br /></pre></p><p><span class="tex-span"><i>V</i>(<i>x</i>)</span> — список вершин смежных с <span class="tex-span"><i>x</i></span>. Массив <span class="tex-span"><i>flag</i></span> изначально заполнен <span class="tex-font-style-tt">FALSE</span>. Изначально <span class="tex-span"><i>DFS</i></span> запускается с параметром вершины входа. По <span class="tex-font-style-it">завершению обхода</span> в переменной <span class="tex-span"><i>count</i></span> будет находится количество ходов.</p><p>Требуется посчитать математическое ожидание количества ходов для нахождения выхода из лабиринта.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке задается число вершин в графе <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>). В следующих <span class="tex-span"><i>n</i> - 1</span> строках задаются пары чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span>, которые показывают существования ребра между <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> вершинами (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>). Гарантируется, что заданный граф является деревом.</p><p>В следующих <span class="tex-span"><i>n</i></span> строках задаются пары неотрицательных чисел <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span>, которые характеризуют вероятность выбора <span class="tex-span"><i>i</i></span>-ой вершины в качества входа и выхода соответственно. Вероятности выбрать вершину <span class="tex-span"><i>i</i></span> в качестве входа и выхода равны <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/a73c036480835f8a2e503c184293d5e5bd3dbda3.png" /> и <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/b895588b3f4daa45cd2c1e9adde5ff651dda00bc.png" /> соответственно. Сумма по всем <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> и сумма по всем <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> положительны и не превосходят <span class="tex-span">10<sup class="upper-index">6</sup></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите матожидание количества ходов. Абсолютная или относительная погрешность не должна превосходить <span class="tex-span">10<sup class="upper-index"> - 9</sup></span>. </p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br />1 2<br />0 1<br />1 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1.00000000000000000000<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br />1 2<br />1 3<br />1 0<br />0 2<br />0 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2.00000000000000000000<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>7<br />1 2<br />1 3<br />2 4<br />2 5<br />3 6<br />3 7<br />1 1<br />1 1<br />1 1<br />1 1<br />1 1<br />1 1<br />1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4.04081632653</pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере вершина входа всегда 1 и вершина выхода всегда 2.</p><p>Во втором примере вершина входа всегда 1, вершина выхода с вероятностью 2/5 будет 2 или с вероятность 3/5 будет 3. Матожидания для вершин выхода 2 и 3 будут равны (симметричные случаи). На первом ходе с вероятностью 0.5 можно пойти в вершину выхода или с вероятностью 0.5 не в вершину выхода. В первом случаи количество ходов равно 1, во втором оно будет равно 3. Итоговое матожидание считается как <span class="tex-span">2 / 5 × (1 × 0.5 + 3 × 0.5) + 3 / 5 × (1 × 0.5 + 3 × 0.5)</span></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
