
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="0ba2481be2g1904e128c6g78e3f5fh00"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="1o44kkhbf327z"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='0ba2481be2g1904e128c6g78e3f5fh00'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">MemSQL start[c]up Round 2</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Банан</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Красная Шапочка покупает стикеры для одного ее проекта. Стикеры закупаются на листах, где каждый лист содержит ровно <span class="tex-span"><i>n</i></span> стикеров. На каждом стикере написана ровно одна буква, таким образом лист стикеров может быть задан строкой длины <span class="tex-span"><i>n</i></span>. Красная Шапочка хочет написать стикерами строку <span class="tex-span"><i>s</i></span>. Она может купить любое количество листов со стикерами. Она может выбрать любую строку длины <span class="tex-span"><i>n</i></span> для листов, но все листы должны быть одинаковыми, то есть строки на всех листах должны совпадать. Получив листы со стикерами, Панамка возьмет некоторое количество стикеров с этих листов, и сложит из них строку <span class="tex-span"><i>s</i></span> (для получения строки <span class="tex-span"><i>s</i></span> эти стикеры можно располагать в любом порядке). Определите минимальное количество листов, которое ей придется купить, и приведите строку длины <span class="tex-span"><i>n</i></span>, при которой это количество можно достигнуть.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка содержит строку <span class="tex-span"><i>s</i></span> (<span class="tex-span">1 ≤ |<i>s</i>| ≤ 1000</span>), состоящую из строчных букв английского алфавита. Вторая строка содержит единственное число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 1000</span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите минимальное количество листов, которое Красной Шапочке придется заказать. На второй строке выведите строку длины <span class="tex-span"><i>n</i></span>. Эта строка должна описывать лист стикеров, которые Красной Шапочке надо заказать, чтобы минимизировать количество листов. Если невозможно купить некоторое количество одинаковых листов с <span class="tex-span"><i>n</i></span> стикерами, и при этом получить возможность собрать строку <span class="tex-span"><i>s</i></span>, выведите число -1.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>banana<br />4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />baan<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>banana<br />3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />nab<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>banana<br />2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Во втором примере Красная Шапочка может купить 3 листа со стикерами «<span class="tex-font-style-tt">nab</span>» каждый. Она может затем взять символы «<span class="tex-font-style-tt">nab</span>» с первого листа, «<span class="tex-font-style-tt">na</span>» со второго, и «<span class="tex-font-style-tt">a</span>» с третьего, и собрать из них слово «<span class="tex-font-style-tt">banana</span>».</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Палиндром</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Дана строка <span class="tex-span"><i>s</i></span>. Определите, существует ли <span class="tex-font-style-bf">подпоследовательность</span> строки <span class="tex-span"><i>s</i></span> длины ровно <span class="tex-span">100</span>, которая является палиндромом. Если одна или более таких подпоследовательностей существуют, выведите любую из них. Иначе выведите самый длинный палиндром, который является подпоследовательностью <span class="tex-span"><i>s</i></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Единственная строка содержит строку <span class="tex-span"><i>s</i></span> длины <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 5·10<sup class="upper-index">4</sup></span>) состоящую из строчных букв английского алфавита.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если существует подпоследовательность <span class="tex-span"><i>s</i></span> длины ровно <span class="tex-span">100</span>, являющаяся палиндромом, выведите ее. Если не существует палиндрома длины ровно <span class="tex-span">100</span>, являющегося подпоследовательностью <span class="tex-span"><i>s</i></span>, выведите самый длинный палиндром, который является подпоследовательностью <span class="tex-span"><i>s</i></span>.</p><p>Если существует несколько возможных ответов, разрешается вывести любой.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>bbbabcbbb<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>bbbcbbb<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>rquwmzexectvnbanemsmdufrg<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>rumenanemur<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Подпоследовательность строки получается путем удаления из нее нуля или более букв (порядок оставшихся букв при этом не меняется). Палиндром — это строка, которая равна самой себе при чтении с конца.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Графство и Королевство</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>За тридевять земель, за тридевять морей есть графство и королевство на берегу реки. В один день граф графства и король королевства решили, что земли у них не очень много, и было бы здорово превратить часть реки в землю.</p><p>Река представлена сеткой из <span class="tex-span"><i>r</i></span> строк и ровно двух столбцов. Каждая ячейка сетки представляет собой прямоугольный участок реки. Строки пронумерованы от <span class="tex-span">1</span> до <span class="tex-span"><i>r</i></span> сверху вниз, а столбцы от <span class="tex-span">1</span> до <span class="tex-span">2</span> слева направо.</p><p>В начале все ячейки сетки заняты рекой. Граф и Король планируют превратить некоторые ячейки с рекой в землю. Каждый по очереди будет выбирать одну ячейку, превращать ее в землю и присоединять к своим владениям.</p><p>Однако, по реке пролегает очень важный торговый маршрут. Граф и Король должны поддерживать реку так, чтобы корабли могли по прежнему проплыть от одного конца реки до другого. Иными словами, если ячейка <span class="tex-span">(<i>r</i>, <i>c</i>)</span> была превращена в землю, нельзя превращать в землю ячейки <span class="tex-span">(<i>r</i> - 1, 3 - <i>c</i>)</span>, <span class="tex-span">(<i>r</i>, 3 - <i>c</i>)</span> и <span class="tex-span">(<i>r</i> + 1, 3 - <i>c</i>)</span>.</p><p>Король и Граф не дружат друг с другом, и поэтому оба хотят быть последним, кто превратит ячейку реки в землю (им не важно сколько каждый из них превратит ячеек, важно только кто превратит ячейку в землю последний). К текущему моменту граф и король уже превратили <span class="tex-span"><i>n</i></span> ячеек в землю. Ваша задача определить, кто в конечном итоге превратит ячейку с морем в землю последним, если известно, что, начиная с текущего момента игры, оба выбирают ячейки оптимально.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка содержит два целых числа <span class="tex-span"><i>r</i></span> и <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>r</i> ≤ 100, 0 ≤ <i>n</i> ≤ <i>r</i></span>). Затем следуют <span class="tex-span"><i>n</i></span> строк, описывающих уже превращенные ячейки. Каждая строка содержит два целых числа: <span class="tex-span"><i>r</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>r</i><sub class="lower-index"><i>i</i></sub> ≤ <i>r</i>, 1 ≤ <i>c</i><sub class="lower-index"><i>i</i></sub> ≤ 2</span>), что означает, что ячейка в строке <span class="tex-span"><i>r</i><sub class="lower-index"><i>i</i></sub></span> и столбце <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> уже превращена в землю. Все перечисленные ячейки попарно различны, и не перекрывают торговый маршрут.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите «<span class="tex-font-style-tt">WIN</span>» если правитель, который делает превращение первым, гарантированно будет последним, кто превратит ячейку из реки в землю. Иначе, выведите «<span class="tex-font-style-tt">LOSE</span>».</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 1<br />1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>WIN<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>12 2<br />4 1<br />8 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>WIN<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 1<br />1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>LOSE<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере есть 3 возможных хода для первого правителя: <span class="tex-span">(2, 1)</span>, <span class="tex-span">(3, 1)</span> и <span class="tex-span">(3, 2)</span>. Первые два хода заведомо проигрышные, так как оставляют ровно одну ячейку, которую можно превратить, для второго правителя.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/c412504d58d1db2a7c74e95417f433b64b45cfae.png" /> </center></p><p>Однако, превращение <span class="tex-span">(3, 2)</span> не оставляет ячеек, которые можно превращать, поэтому первый правитель побеждает.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/b432928321bee818637c963e9d479c311a7f0534.png" /> </center></p><p>В третьем примере нет ячеек, которые можно превратить в землю.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Прямоугольники и Квадрат</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>3 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>512 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вам даны <span class="tex-span"><i>n</i></span> прямоугольников, пронумерованных от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>. Углы прямоугольников имеют целые координаты, а стороны прямоугольников параллельны осям <span class="tex-span"><i>Ox</i></span> и <span class="tex-span"><i>Oy</i></span>. Прямоугольники могут касаться, но никогда не пересекаются (иными словами, не существует точки, принадлежащей внутренней области более чем одного прямоугольника).</p><p>Ваша задача определить, существует ли непустое подмножество данных прямоугольников, которые образуют квадрат. Другими словами, определите, существует ли такое подмножество данных прямоугольников, и такой квадрат, что любая точка, которая принадлежит внутренней области или границе квадрата принадлежит внутренней области или границе хотя бы одного из прямоугольников в подмножестве, а любая точка, которая принадлежит внутренней области или границе хотя бы одного из прямоугольников этого подмножества также принадлежит квадрату.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка содержит целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество прямоугольников. Каждая из следующих <span class="tex-span"><i>n</i></span> строк содержит описание прямоугольника, где <span class="tex-span"><i>i</i></span>-ая строка описывает прямоугольник с номером <span class="tex-span"><i>i</i></span>. Описание прямоугольника состоит из четырех целых чисел: <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">2</sub></span> — координат левого нижнего и правого верхнего углов прямоугольника (<span class="tex-span">0 ≤ <i>x</i><sub class="lower-index">1</sub> &lt; <i>x</i><sub class="lower-index">2</sub> ≤ 3000</span>, <span class="tex-span">0 ≤ <i>y</i><sub class="lower-index">1</sub> &lt; <i>y</i><sub class="lower-index">2</sub> ≤ 3000</span>).</p><p>Никакие два прямоугольника не пересекаются (не существует точки, принадлежащей внутренней области более чем одного прямоугольника).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если такое подмножество существует, выведите «<span class="tex-font-style-tt">YES</span>» (без кавычек) в первой строке, а затем на этой же строке число <span class="tex-span"><i>k</i></span> — количество прямоугольников в подмножестве. На второй строке выведите <span class="tex-span"><i>k</i></span> чисел — номера прямоугольников в подмножестве в любом порядке. Если существует более одного такого подмножества, выведите любое. Если такого подмножества не существует, выведите «<span class="tex-font-style-tt">NO</span>» (без кавычек).</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>9<br />0 0 1 9<br />1 0 9 1<br />1 8 9 9<br />8 1 9 8<br />2 2 3 6<br />3 2 7 3<br />2 6 7 7<br />5 3 7 6<br />3 3 5 6<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES 5<br />5 6 7 8 9<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br />0 0 1 9<br />1 0 9 1<br />1 8 9 9<br />8 1 9 8<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Первый тест представлен на картинке:</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/e898da62cb582f8c7408b0b2e3a829dc5bf8233d.png" /> </center></p><p>Обратите внимание, что прямоугольники <span class="tex-span">6</span>, <span class="tex-span">8</span>, и <span class="tex-span">9</span> тоже образуют квадрат, и будут приняты как ответ.</p><p>Второй тест представлен на картинке:</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/1d2a9716cf56ec1d66fb478695989df30509f4b1.png" /> </center></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Инвентаризация Небоскребов</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Некоторое количество небоскребов <span class="tex-span"><i>x</i></span> были построены в один ряд. Целое число <span class="tex-span"><i>x</i></span> выбрано случайно равновероятно среди всех целых чисел от 2 до 314! (314! — это факториал числа 314 — очень большое число). Высота каждого небоскреба была выбрана случайно и независимо, для каждого небоскреба высота <span class="tex-span"><i>i</i></span> (<span class="tex-span"><i>i</i></span> — целое число, <span class="tex-span"><i>i</i> &gt; 0</span>) была выбрана с вероятностью <span class="tex-span">2<sup class="upper-index"> - <i>i</i></sup></span>. В небоскребе с высотой <span class="tex-span"><i>i</i></span> этажи пронумерованы от <span class="tex-span">0</span> до <span class="tex-span"><i>i</i> - 1</span>.</p><p>Чтобы оптимизировать время, которое нужно для перемещения между небоскребами, было построено несколько зиплайнов (металлических тросов, по которым можно передвигаться) между небоскребами. Зиплайн всегда связывает <span class="tex-span"><i>i</i></span>-ый этаж одного небоскреба с <span class="tex-span"><i>i</i></span>-ым этажом другого небоскреба, и есть тогда и только тогда, когда между соответствующими небоскребами нет ни одного небоскреба, у которого есть <span class="tex-span"><i>i</i></span>-ый этаж.</p><p>Алиса и Боб решили посчитать количество небоскребов.</p><p>Алиса хочет знать точное количество небоскребов. Она начинает с самого левого небоскреба, с значением счетчика равным <span class="tex-span">1</span>. Затем она идет вправо, и для каждого небоскреба, который она встречает, прибавляет <span class="tex-span">1</span> к счетчику. Она продолжает пока не доходит до самого правого небоскреба.</p><p>Боб очень нетерпелив и хочет закончить подсчет как можно скорее. Он начинает с самого левого небоскреба с значением счетчика равным <span class="tex-span">1</span>, но передвигается между небоскребами по зиплайнам. На каждом шагу Боб использует для передвижения направо самый высокий зиплайн, который ему доступен, на этаже не выше, чем <span class="tex-span"><i>h</i></span> — использовать зиплайны выше ему не позволяет боязнь высоты. Когда Боб использует зиплайн, он едет так быстро, что не способен оценить, насколько большое было расстояние между небоскребами. Поэтому он просто прибавляет <span class="tex-span">2<sup class="upper-index"><i>i</i></sup></span> к счетчику, где <span class="tex-span"><i>i</i></span> — это этаж, на котором был зиплайн. Боб продолжает передвигаться, пока не оказывается в самом правом небоскребе.</p><p>Рассмотрим пример. Всего есть <span class="tex-span">6</span> небоскребов, с высотами <span class="tex-span">1</span>, <span class="tex-span">4</span>, <span class="tex-span">3</span>, <span class="tex-span">4</span>, <span class="tex-span">1</span>, <span class="tex-span">2</span> слева направо. Допустим <span class="tex-span"><i>h</i> = 2</span>. Алиса начинает с значением счетчика <span class="tex-span">1</span> и затем добавляет к нему <span class="tex-span">1</span> пять раз, получив в итоге <span class="tex-span">6</span>. Боб также начинает со значением счетчика <span class="tex-span">1</span>, затем добавляет <span class="tex-span">1</span>, <span class="tex-span">4</span>, <span class="tex-span">4</span>, и <span class="tex-span">2</span>, получив в итоге <span class="tex-span">12</span>. Обратите внимание, что Боб не всегда использует самый высокий доступный зиплайн из-за боязни высоты (<span class="tex-span"><i>h</i> = 2</span>).</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/d6bfe75dfdbed7cc9577de0c55a82d63faf82094.png" /> </center></p><p>Значения счетчика Боба в разное время показано вверху, а Алисы — внизу. На рисунке присутствуют все зиплайны. Путь Боба показан пунктирной зеленой линией, а Алисы — пунктирной розовой. Возле этажей подписаны их номера, а возле зиплайнов, которые использовал Боб — значение, которое он добавил к счетчику, передвигаясь по ним.</p><p>Когда Алиса и Боб встретились в самом правом небоскребе, они сравнили значения счетчиков. Вам будет дано значение, которое в итоге получила Алиса или Боб. Ваша задача определить ожидаемое значение счетчика второго персонажа.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка содержит псевдоним персонажа: строка «<span class="tex-font-style-tt">Alice</span>» или «<span class="tex-font-style-tt">Bob</span>». Вторая строка содержит два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>h</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 30000</span>, <span class="tex-span">0 ≤ <i>h</i> ≤ 30</span>). Если первая строка содержит имя «<span class="tex-font-style-tt">Alice</span>», то <span class="tex-span"><i>n</i></span> представляет собой значение счетчика Алисы, когда она достигает самого правого небоскреба, иначе <span class="tex-span"><i>n</i></span> представляет собой значение счетчика Боба, когда он достигает самого правого небоскреба; <span class="tex-span"><i>h</i></span> — это самый высокий этаж, которой Боб может использовать.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное вещественное число, которое представляет собой ожидаемое значение счетчика Алисы, если вам дано значение счетчика Боба, или ожидаемое значение счетчика Боба, если вам дано значение счетчика Алисы.</p><p>Ответ будет считаться правильным, если его абсолютная или относительная погрешность не превышает <span class="tex-span">10<sup class="upper-index"> - 9</sup></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>Alice<br />3 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3.500000000<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>Bob<br />2 30<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>Alice<br />2572 10<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3439.031415943<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере, Счетчик Боба будет равен трем с шансом 62.5%, четырем с шансом 25%, и пяти с шансом 12.5%.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F. Купи пирог, получи второй в подарок!</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 секунд</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В магазине по продаже пирогов сегодня акция. Покупая любой пирог за полную стоимость, вы можете выбрать второй пирог с ценой строго меньше, и получить его бесплатно. Вам даны цены пирогов, которые вы хотите купить, определите минимальную сумму, которую придется заплатить, чтобы получить их все.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка содержит целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 500000</span>) — количество пирогов, которые вы хотите купить. Вторая строка содержит <span class="tex-span"><i>n</i></span> целых чисел, каждое задает цену одного пирога. Все цены — положительные числа, не превосходящие <span class="tex-span">10<sup class="upper-index">9</sup></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите минимальную сумму, которую придется заплатить, чтобы получить в свое распоряжение все пироги.</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битных чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> или спецификатор <span class="tex-font-style-tt">%I64d</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6<br />3 4 5 3 4 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>14<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />5 5 5 5 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>25<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br />309999 6000 2080 2080<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>314159<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере вы можете купить пирог с ценой 5, и получить пирог с ценой 4 бесплатно, затем купить второй пирог с ценой 5, и получить пирог с ценой 3 бесплатно, затем заплатить за пирог с ценой 4 и получить оставшийся пирог с ценой 3 бесплатно.</p><p>Во втором случае придется заплатить за все пироги.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
