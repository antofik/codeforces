
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="24104g34a624b1f855199169h9750f63"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="839my37qd4z3"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='24104g34a624b1f855199169h9750f63'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">&#1064;&#1082;&#1086;&#1083;&#1100;&#1085;&#1072;&#1103; &#1082;&#1086;&#1084;&#1072;&#1085;&#1076;&#1085;&#1072;&#1103; &#1086;&#1083;&#1080;&#1084;&#1087;&#1080;&#1072;&#1076;&#1072; #2 (&#1047;&#1050;&#1064; 2010/11)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Золотая осень</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Какое прекрасное время года — золотая осень! Девочка Алена ходит по лесу и собирает букет из опавших листьев. Алена очень избирательна — она не берет листочек, если он совпадает одновременно и по виду, и по цвету с одним из уже имеющихся у нее. Выясните, сколько листьев собрала Алена.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке содержится целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100</span>) — количество листьев, попавшихся Алене. Следующие <span class="tex-span"><i>n</i></span> строк содержат описания листьев. Каждый лист характеризуется видом дерева, с которого он упал, и цветом. Виды деревьев и цвета заданы названиями, состоящими из не более <span class="tex-span">10</span> строчных латинских букв. Название не может быть пустой строкой. Вид дерева и цвет задаются в каждой строке через пробел.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число — количество листьев у Алены.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br />birch yellow<br />maple red<br />birch yellow<br />maple yellow<br />maple green<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br />oak yellow<br />oak yellow<br />oak yellow<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Кола</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>По торжественному случаю открытия Зимней Компьютерной Школы организаторы решили закупить <span class="tex-span"><i>n</i></span> литров колы. Однако в магазине возникло неожиданное затруднение: оказалось, что кола продается в бутылках по <span class="tex-span">0.5</span>, <span class="tex-span">1</span> и <span class="tex-span">2</span> литра. При этом имеется ровно <span class="tex-span"><i>a</i></span> бутылок по <span class="tex-span">0.5</span> литра, <span class="tex-span"><i>b</i></span> литровых бутылок и <span class="tex-span"><i>c</i></span> — двухлитровых. У организаторов достаточно денег, чтобы купить любое количество колы. Ожесточенные споры вызвало то, сколько каких бутылок покупать, ведь этот вопрос имеет принципиальное значение с точки зрения распределения колы между участниками (и организаторами тоже).</p><p>Итак, пока организаторы спорят, перебирая различные варианты закупки колы, Зимняя Компьютерная Школа не начнется. Ваша задача — посчитать количество всех возможных способов закупить ровно <span class="tex-span"><i>n</i></span> литров колы и убедить организаторов, что это количество слишком велико и что если они будут продолжать свой спор, то Зимнюю Компьютерную Школу придется проводить летом.</p><p>Все бутылки колы одного объема считаются неразличимыми. Т.е. два варианта закупки отличаются друг от друга только в случае, когда они отличаются количеством бутылок хотя бы одного вида.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке заданы четыре целых числа — <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>b</i></span>, <span class="tex-span"><i>c</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10000</span>, <span class="tex-span">0 ≤ <i>a</i>, <i>b</i>, <i>c</i> ≤ 5000</span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное число — ответ на задачу. Если купить ровно <span class="tex-span"><i>n</i></span> литров колы невозможно, выведите <span class="tex-span">0</span>. </p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>10 5 5 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>9<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 0 0 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Каникулы</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В Берляндии наступают каникулы, которые будут длиться <span class="tex-span"><i>n</i></span> дней. Ученики школы №<span class="tex-span"><i>N</i></span> отдыхают, а учительница информатики Марина Сергеевна, которая все лето была занята проверкой БГЭ (Берляндского государственного экзамена), наконец-то взяла отпуск! Для ежедневного полива цветов в классе был составлен график дежурств. Однако составлявшая график Марина Сергеевна так устала от работы и была поглощена мечтами о предстоящем отпуске, что, возможно, допустила некоторые ошибки. А именно, могло случиться так, что согласно графику в некоторые дни каникул цветы не будут политы или будут политы несколько раз. Помогите Марине Сергеевне найти ошибку.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке заданы два числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 100</span>) — количество дней в берляндских каникулах и количество дежурных соответственно. Следующие <span class="tex-span"><i>m</i></span> строк содержат описание графика дежурств. Каждая строка содержит два целых числа <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>), означающих, что <span class="tex-span"><i>i</i></span>-й дежурный должен поливать цветы с <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>-го по <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span>-й день включительно, по одному разу в день. Дежурства описываются по порядку, т.е. <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub> ≤ <i>a</i><sub class="lower-index"><i>i</i> + 1</sub></span> для всех <span class="tex-span"><i>i</i></span> от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i> - 1</span> включительно. </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите «OK» (без кавычек), если график не содержит ошибок. Иначе нужно найти наименьший номер дня, в который цветы не будут политы или будут политы несколько раз, и вывести два целых числа — номер дня и сколько раз будут политы цветы в этот день.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>10 5<br />1 2<br />3 3<br />4 6<br />7 7<br />8 10<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>OK<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>10 5<br />1 2<br />2 3<br />4 5<br />7 8<br />9 10<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2 2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>10 5<br />1 2<br />3 3<br />5 7<br />7 7<br />7 10<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4 0<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Обратите внимание, во втором примере из условия ошибка происходит не только во второй день, но и в шестой, когда цветы никто не поливает. Однако выдать нужно именно второй день, т.е. день с наименьшим номером.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Гипердвигатель</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В далекой-далекой галактике <span class="tex-span"><i>n</i></span> обитаемых планет, пронумерованных числами от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>. Они расположены на огромных расстояниях друг от друга, поэтому сообщение между ними было крайне затруднено, пока на планете с номером <span class="tex-span">1</span> не был изобретен гипердвигатель. Как только произошло это знаменательное событие, на планете <span class="tex-span">1</span> был построен <span class="tex-span"><i>n</i> - 1</span> космический корабль, и эти корабли были разосланы на остальные планеты, чтобы сообщить о революционном изобретении.</p><p>Гиперпространство, как это ни парадоксально, представляет собой обычное трехмерное евклидово пространство. Обитаемые планеты можно считать неподвижными точками в нем, причем никакие две точки не совпадают и никакие три точки не лежат на одной прямой. Движение корабля, оснащенного гипердвигателем, между двумя планетами осуществляется по прямой с постоянной скоростью, одинаковой для всех кораблей. Поэтому расстояния в гиперпространстве измеряются в гипергодах (корабль, оснащенный гипердвигателем, преодолевает расстояние в <span class="tex-span"><i>s</i></span> гипергодов за <span class="tex-span"><i>s</i></span> лет).</p><p>Когда корабль прилетает на обитаемую планету, жители планеты разбирают его, создают по его образу и подобию <span class="tex-span"><i>n</i> - 2</span> корабля с гипердвигателем и рассылают их на остальные <span class="tex-span"><i>n</i> - 2</span> планеты (кроме той, с которой прилетел корабль). Время создания новых кораблей по сравнению со временем их движения от одной планеты к другой настолько мало, что им можно пренебречь. Новые корабли абсолютно идентичны разосланным первоначально: они движутся с той же постоянной скоростью по прямолинейной траектории и, прибывая на планету, выполняют ту же миссию, т.е. их разбирают, строят новые <span class="tex-span"><i>n</i> - 2</span> корабля и рассылают их на все планеты, кроме той, с которой прилетел корабль. Таким образом, процесс распространения важной новости по галактике продолжается.</p><p>Однако создатели гипердвигателя так торопились распространить известие о своем открытии, что не изучили до конца, что происходит при столкновении двух кораблей в гиперпространстве. Если два движущихся корабля оказываются в одной точке, то происходит взрыв колоссальной силы, приводящий к уничтожению галактики! </p><p>Ваша задача — вычислить время жизни галактики с момента запуска кораблей с первой планеты.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке задано число <span class="tex-span"><i>n</i></span> (<span class="tex-span">3 ≤ <i>n</i> ≤ 5000</span>) — количество обитаемых планет в галактике. Следующие <span class="tex-span"><i>n</i></span> строк содержат целочисленные координаты планет в формате «<span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>z</i><sub class="lower-index"><i>i</i></sub></span>» (<span class="tex-span"> - 10<sup class="upper-index">4</sup> ≤ <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub>, <i>z</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">4</sup></span>). </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное число — ответ на задачу с абсолютной или относительной погрешностью, не превосходящей <span class="tex-span">10<sup class="upper-index"> - 6</sup></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4<br />0 0 0<br />0 0 1<br />0 1 0<br />1 0 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1.7071067812<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Обезьянка Анфиса</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Обезьянка Анфиса учится печатать на клавиатуре. Пока она не знакома с клавишей «пробел» и умеет набирать только строчные латинские буквы. Набрав достаточно длинную строку, Анфиса поняла, что неплохо бы разбить ее на <span class="tex-span"><i>k</i></span> строк длины не меньше <span class="tex-span"><i>a</i></span> и не больше <span class="tex-span"><i>b</i></span>, чтобы ее текст стал более похож на человеческий. Помогите Анфисе.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке заданы три целых числа <span class="tex-span"><i>k</i></span>, <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> (<span class="tex-span">1 ≤ <i>k</i> ≤ 200</span>, <span class="tex-span">1 ≤ <i>a</i> ≤ <i>b</i> ≤ 200</span>). Во второй строке содержится последовательность строчных латинских букв — текст, набранный Анфисой. Гарантируется, что заданная строка не пустая и ее длина не превосходит <span class="tex-span">200</span> символов.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>k</i></span> строк, каждая из которых содержит не менее <span class="tex-span"><i>a</i></span> и не более <span class="tex-span"><i>b</i></span> символов — текст Анфисы, разбитый на строки. Производить любые изменения текста: удалять или добавлять символы, менять их порядок и т.п. не разрешается. Если решений несколько, выведите любое. Если решения не существует, выведите «No solution» (без кавычек). </p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 2 5<br />abrakadabra<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>ab<br />rakad<br />abra<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 1 2<br />abrakadabra<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>No solution<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F. BerPaint</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Обезьянка Анфиса разочаровалась в текстовых редакторах, потому что они недостаточно хороши, чтобы передать всю полноту переживаемых ею эмоций, поэтому она решила переключиться на графические редакторы. Открыв редактор BerPaint, она увидела белый прямоугольник размера <span class="tex-span"><i>W</i> × <i>H</i></span>, на котором можно рисовать. Первым делом Анфиса освоила чертежный инструмент, позволяющий рисовать отрезки, и быстро набросала на этом прямоугольнике некоторое число отрезков черного цвета. Получившаяся картина показалась Анфисе недостаточно яркой, поэтому она обратила внимание на инструмент «Заливка», который позволяет указать точку в прямоугольнике для рисования и выбрать цвет, после чего вся область, имеющая тот же цвет, что и выбранная точка, и содержащая ее, полностью окрашивается в выбранный цвет. Применив заливку много раз в разных точках, Анфиса полностью выразила всю свою экспрессию и бросила рисование. От вас же требуется по информации о нарисованных отрезках и проведенных заливках определить для каждого цвета, какова суммарная площадь областей, окрашенных в этот цвет после всех заливок.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке заданы два целых числа <span class="tex-span"><i>W</i></span> и <span class="tex-span"><i>H</i></span> (<span class="tex-span">3 ≤ <i>W</i>, <i>H</i> ≤ 10<sup class="upper-index">4</sup></span>) — размеры изначально белой прямоугольной области для рисования. Во второй строке записано целое число <span class="tex-span"><i>n</i></span> — количество черных отрезков (<span class="tex-span">0 ≤ <i>n</i> ≤ 100</span>). В следующих <span class="tex-span"><i>n</i></span> строках описаны сами отрезки, каждый из которых задается координатами своих концов <span class="tex-span"><i>x</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">1</sub>, <i>x</i><sub class="lower-index">2</sub>, <i>y</i><sub class="lower-index">2</sub></span> (<span class="tex-span">0 &lt; <i>x</i><sub class="lower-index">1</sub>, <i>x</i><sub class="lower-index">2</sub> &lt; <i>W</i>, 0 &lt; <i>y</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">2</sub> &lt; <i>H</i></span>). Все отрезки имеют ненулевую длину. В следующей строке задано число заливок <span class="tex-span"><i>m</i></span> (<span class="tex-span">0 ≤ <i>m</i> ≤ 100</span>). Каждая из следующих <span class="tex-span"><i>m</i></span> строк задает операцию заливки в виде «<span class="tex-span"><i>x</i></span> <span class="tex-span"><i>y</i></span> <span class="tex-span"><i>color</i></span>», где <span class="tex-span">(<i>x</i>, <i>y</i>)</span> это координаты выбранной точки (<span class="tex-span">0 &lt; <i>x</i> &lt; <i>W</i>, 0 &lt; <i>y</i> &lt; <i>H</i></span>), а <span class="tex-span"><i>color</i></span> — строка из маленьких латинских букв длиной от 1 до 15 символов, задающая цвет. Изначально прямоугольник имеет цвет «white», а отрезки наносятся цветом «black». Координаты концов всех отрезков и координаты точек заливки целые.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждого цвета, который присутствует на итоговой картинке, на отдельной строке выведите название этого цвета и суммарную площадь областей, окрашенных в этот цвет, с точностью <span class="tex-span">10<sup class="upper-index"> - 6</sup></span>. Цвета выдавайте в любом порядке. </p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4 5<br />6<br />1 1 1 3<br />1 3 3 3<br />3 3 3 1<br />3 1 1 1<br />1 3 3 1<br />1 1 3 3<br />2<br />2 1 red<br />2 2 blue<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>blue 0.00000000<br />white 20.00000000<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5 5<br />5<br />1 1 2 2<br />2 2 4 2<br />4 2 4 4<br />4 4 2 4<br />2 4 2 2<br />2<br />3 3 black<br />3 3 green<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>green 4.00000000<br />white 21.00000000<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>7 4<br />9<br />1 2 2 3<br />2 3 3 2<br />3 2 2 1<br />2 1 1 2<br />3 2 4 2<br />4 2 5 3<br />5 3 6 2<br />6 2 5 1<br />5 1 4 2<br />2<br />2 2 black<br />2 2 red<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>red 2.00000000<br />white 26.00000000<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Изначально черные отрезки, которые нарисовала Анфиса, также могут быть окрашены, если какая-то из выбранных точек попадет на отрезок. Отрезки имеют нулевую площадь. Поэтому, если в итоговой картинке в какой-то цвет будут окрашены только лишь части отрезков, то площадь, окрашенная в этот цвет, равна 0.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">G. Тир</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>10 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Тир в Берляндском парке культуры и отдыха по праву считается одним из лучших в мире. Ежедневно лучшие стрелки страны оттачивают там свое мастерство, а многочисленные посетители соревнуются в стрельбе по мишеням в борьбе за достойные призы. А недавно директор парка решил сделать онлайн-версию тира. В процессе разработки выяснилось, что нужна программа, эффективно моделирующая процесс стрельбы. Чтобы сформулировать требования к программе, тир был описан формально. Была введена трехмерная декартова система координат, в которой ось <span class="tex-span"><i>X</i></span> проходила по полу тира по линии, вдоль которой стоят стрелки, ось <span class="tex-span"><i>Y</i></span> проходила вертикально по стене тира, а положительное направление оси <span class="tex-span"><i>Z</i></span> совпадало с направлением стрельбы. Плоскость <span class="tex-span"><i>XOY</i></span> назовем плоскостью стрельбы и будем считать, что все пули выходят из дул в точках этой плоскости и летят параллельно оси <span class="tex-span"><i>Z</i></span>. Каждая мишень представляет собой прямоугольник, стороны которого параллельны осям <span class="tex-span"><i>X</i></span> и <span class="tex-span"><i>Y</i></span>, имеющий положительную <span class="tex-span"><i>z</i></span>-координату. Все мишени находятся на разном расстоянии от плоскости стрельбы. Пуля попадает в мишень, если она проходит через внутренность или границу соответствующего ей прямоугольника. Когда пуля поражает мишень, мишень падает вертикально вниз, в подпол тира, и больше по ней стрелять нельзя. Мишени достаточно прочные, поэтому пуля не может пробить мишень насквозь, и в случае попадания пуля не летит дальше. На вход программе-симулятору дается расположение всех мишеней, а также координаты всех выстрелов в порядке их появления. Программа должна определить, какая мишень была сбита каждым выстрелом. Если вы еще не догадались, то написать такую программу поручается вам.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество мишеней. Каждая из последующих <span class="tex-span"><i>n</i></span> строк содержит описание одной мишени. Мишень описывается пятью целыми числами <span class="tex-span"><i>x</i><sub class="lower-index"><i>l</i></sub>, <i>x</i><sub class="lower-index"><i>r</i></sub>, <i>y</i><sub class="lower-index"><i>l</i></sub>, <i>y</i><sub class="lower-index"><i>r</i></sub>, <i>z</i></span>, задающими ее расположение в пространстве (<span class="tex-span">0 ≤ <i>x</i><sub class="lower-index"><i>l</i></sub> &lt; <i>x</i><sub class="lower-index"><i>r</i></sub> ≤ 10<sup class="upper-index">7</sup>, 0 ≤ <i>y</i><sub class="lower-index"><i>l</i></sub> &lt; <i>y</i><sub class="lower-index"><i>r</i></sub> ≤ 10<sup class="upper-index">7</sup>, 0 &lt; <i>z</i> ≤ 10<sup class="upper-index">7</sup></span>). В следующей строке записано целое число <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>m</i> ≤ 10<sup class="upper-index">5</sup></span>), задающее количество выстрелов. Далее в <span class="tex-span"><i>m</i></span> строках описаны выстрелы. Каждый выстрел задается координатами пули в плоскости стрельбы <span class="tex-span">(<i>x</i>, <i>y</i>)</span> (<span class="tex-span">0 ≤ <i>x</i>, <i>y</i> ≤ 10<sup class="upper-index">7</sup></span>, координаты пуль целые). Выстрелы задаются в том порядке, в каком они производились. Интервалы между выстрелами достаточно большие, а мишень падает очень быстро, поэтому считайте, что падающая мишень не может преградить путь выстрелам, следующим за тем, который ее сбил.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждого выстрела в отдельной строке выведите номер мишени, которую поразил этот выстрел, или 0, если пуля не попала ни в какую мишень. Мишени нумеруются с 1 в том порядке, в каком они заданы во входных данных. </p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br />1 4 1 4 1<br />2 5 2 6 2<br />4<br />0 0<br />3 3<br />4 5<br />3 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br />1<br />2<br />0<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">H. Номер телефона</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Найти свою любовь, увы, непросто. Маше пока в этом не везет. Подружка Даша рассказала Маше способ гадания, с помощью которого можно определить номер телефона своего прекрасного принца.</p><p>Этот способ заключается в следующем. Сначала нужно выписать свой номер телефона. Например, предположим, что номер телефона Маши <span class="tex-span">12345</span>. После этого нужно написать свою любимую цифру от <span class="tex-span">0</span> до <span class="tex-span">9</span> под первой цифрой своего номера. Это будет первая цифра желаемого номера. Например, Машина любимая цифра — <span class="tex-span">9</span>. Вторая цифра определяется как среднее арифметическое второй цифры Машиного номера и уже записанной первой цифры номера ее возлюбленного. В данном случае среднее арифметическое равно <span class="tex-span">(2 + 9) / 2 = 5, 5</span>. Маша может округлить это число или вверх, или вниз, по собственному усмотрению. Например, она выбирает цифру <span class="tex-span">5</span>. Записав полученную цифру под второй цифрой своего номера, Маша переходит к получению третьей цифры тем же способом, т.е. находя полусумму третьей цифры своего номера и второй цифры нового номера. Получается <span class="tex-span">(5 + 3) / 2 = 4</span>. В данном случае ответ однозначен. Таким образом, каждая <span class="tex-span"><i>i</i></span>-я цифра определяется как среднее арифметическое <span class="tex-span"><i>i</i></span>-й цифры Машиного номера и <span class="tex-span"><i>i</i> - 1</span>-й цифры номера ее возлюбленного, при необходимости возможно округление в любую сторону. Например, Маша может получить: <center class="tex-equation"><span class="tex-span">12345</span></center> <center class="tex-equation"><span class="tex-span">95444</span></center> К сожалению, звонок по этому номеру разочаровал Машу: выяснилось, что абонент временно недоступен или находится вне зоны действия сети. Но Маша не отчаивается. Возможно, она произвела округления в неправильную сторону или неудачно выбрала первую цифру. Поэтому она продолжает получать все новые и новые номера описанным способом и звонить по ним. Вычислите количество номеров, по которым позвонит Маша. Маша звонит по всем возможным номерам, которые можно получить при помощи описанного гадания, кроме, возможно, своего собственного.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке задана непустая последовательность из цифр от <span class="tex-span">0</span> до <span class="tex-span">9</span> — номер телефона Маши. Длина последовательности не превосходит <span class="tex-span">50</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число — количество номеров, по которым позвонит Маша.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>12345<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>48<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>09<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>15<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">I. Игрушки</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Маленькая девочка Маша любит раскладывать свои игрушки в кучки на полу. А еще она очень не любит, когда кто-нибудь трогает ее игрушки. Как-то раз Маша аккуратно разложила все свои <span class="tex-span"><i>n</i></span> игрушек в несколько кучек, а затем ее старший брат Саша пришел и собрал все кучки в одну. Маша увидела это, страшно расстроилась и принялась плакать. У Саши никак не получается успокоить Машу, а скоро придет мама и ему влетит за то, что сестренка плачет. Поэтому он решает восстановить разложение игрушек по кучкам. Однако он совершенно не помнит, как лежали игрушки. Маша, конечно, помнит это, но она еще не умеет говорить и может помочь Саше лишь тем, что радостно завопит, когда он выложит игрушки именно так, как они и лежали. Значит, Саше придется раскладывать игрушки всеми возможными способами до тех пор, пока Маша не узнает нужное разложение. Взаимное расположение кучек и игрушек в каждой кучке не важно, поэтому два способа разложить игрушки считаются различными, если найдутся две такие игрушки, которые при одном из способов лежат в одной и той же кучке, а при другом нет. Саша ищет наиболее быстрый путь перебора всех способов, потому что скоро придет мама. За одно действие Саша может взять игрушку из любой кучки и переложить ее в любую другую кучку (возможно, при этом появится новая кучка или одна из кучек исчезнет). Саша хочет найти такую последовательность действий, что в процессе все способы разложить игрушки на кучки будут перебраны ровно по одному разу. Помогите Саше. Изначально, как мы помним, все игрушки находятся в одной кучке.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10</span>) — число игрушек.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите количество различных способов разложить игрушки на кучки. Далее выведите все способы разложить игрушки на кучки в том порядке, в каком их должен перебирать Саша (т.е. каждый следующий способ должен получаться из предыдущего описанной в условии операцией). Каждый способ надо выводить следующим образом. В каждой кучке игрушки надо упорядочить по возрастанию номера. После этого надо упорядочить кучки по возрастанию номеров первых игрушек в них. Каждый способ выводите в отдельной строке. См. пример для уточнения формата выходных данных. Если решений несколько, выведите любое из них.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5<br />{1,2,3}<br />{1,2},{3}<br />{1},{2,3}<br />{1},{2},{3}<br />{1,3},{2}</pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">J. Триминошки</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Бывает много интересных задач о замощении доминошками. Например, известен такой замечательный факт. Возьмем стандартную шахматную доску (<span class="tex-span">8 × 8</span>) и вырежем из нее ровно две клетки. Оказывается, что получившуюся доску всегда можно замостить доминошками <span class="tex-span">1 × 2</span>, если две вырезанные клетки разного цвета, и нельзя в противном случае.</p><p>Пете наскучили доминошки, поэтому он взял шахматную доску (не обязательно <span class="tex-span">8 × 8</span>), вырезал из нее некоторые клетки и пытается замостить ее триминошками. Триминошки — это прямоугольники <span class="tex-span">1 × 3</span> (или <span class="tex-span">3 × 1</span>, потому что триминошки можно беспрепятственно поворачивать), причем две крайние клетки триминошки обязательно белые, а клетка в середине — черная. Триминошки разрешается класть на шахматную доску таким образом, чтобы их клетки совпадали с невырезанными клетками доски, причем должно выполняться соответствие цветов: черные клетки можно совмещать только с черными, а белые — с белыми. Триминошки не должны выступать за пределы доски или накладываться друг на друга. Все невырезанные клетки доски должны быть покрыты триминошками.</p><p>Помогите Пете определить, можно ли замостить его доску триминошками описанным способом и выведите один из вариантов замощения.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке заданы два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 1000</span>) — размеры доски. Следующие <span class="tex-span"><i>n</i></span> строк содержат по <span class="tex-span"><i>m</i></span> символов каждая и представляют собой описание доски. Если в некоторой позиции содержится «.», то клетка в этой позиции вырезана. Белой клетке соответствует символ «w», черной — «b». Гарантируется, что путем добавления вырезанных клеток можно получить корректную шахматную доску (т.е. с чередованием черных и белых клеток), хотя, возможно, и нестандартного размера.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если хотя бы одно корректное замощение существует, выведите в первой строке «YES» (без кавычек), а затем — описание замощения. Описание должно содержать <span class="tex-span"><i>n</i></span> строк, по <span class="tex-span"><i>m</i></span> символов в каждой. Вырезанные клетки, как и во входных данных, обозначаются символом «.». Для обозначения триминошек можно использовать символы «a», «b», «c», «d», причем все три клетки каждой триминошки должны обозначаться одним символом. Если две триминошки граничат по стороне, то они должны обозначаться разными символами. Две триминошки, не граничащие по стороне, могут обозначаться одним и тем же символом (см. пример).</p><p>Если корректных замощений несколько, разрешается выводить любое. Если замостить доску триминошками невозможно или не существует корректного замощения, для описания которого было бы достаточно четырех символов «a», «b», «c», «d», выведите в первой строке «NO» (без кавычек).</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6 10<br />.w.wbw.wbw<br />wbwbw.w.w.<br />bw.wbwbwbw<br />w.wbw.wbwb<br />...wbw.w.w<br />..wbw.wbw.<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br />.a.aaa.ccc<br />baccc.c.a.<br />ba.dddcbab<br />b.aaa.cbab<br />...bbb.b.b<br />..ccc.ddd.</pre></div><div class="input"><div class="title">Входные данные</div><pre>2 2<br />wb<br />bw<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 3<br />wbw<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br />bbb<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 3<br />...<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br />...<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
