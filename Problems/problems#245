
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="1f5afg9788d8d24f74075fddffbe9c4b"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="44miwqsb2rd2"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='1f5afg9788d8d24f74075fddffbe9c4b'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
            <div style="padding:1em 0 0 2px;color:#00a651;">
<a href="/croc2012"><img src="/images/custom/croc-ru.png"/></a>
<span style="padding:1.5em;">Чемпионат по программированию КРОК-МВТУ 2012</span>
</div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">&#1050;&#1056;&#1054;&#1050;-&#1052;&#1042;&#1058;&#1059; 2012, &#1054;&#1090;&#1073;&#1086;&#1088;&#1086;&#1095;&#1085;&#1099;&#1081; &#1088;&#1072;&#1091;&#1085;&#1076; (ACM-ICPC)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Системный администратор</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Поликарп — системный администратор. Под его чутким надзором находятся два сервера — <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span>. Чтобы быть в курсе функционирования серверов, Поликарп выполняет команды «<span class="tex-font-style-tt">ping a</span>» и «<span class="tex-font-style-tt">ping b</span>». Каждая команда ping посылает ровно десять пакетов на сервер, указанный в аргументе команды. Результатом выполнения команды являются два целых числа <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span> <span class="tex-span">(<i>x</i> + <i>y</i> = 10; <i>x</i>, <i>y</i> ≥ 0)</span>. Эти числа обозначают, что <span class="tex-span"><i>x</i></span> пакетов успешно дошли по сети до соответствующего сервера, а <span class="tex-span"><i>y</i></span> пакетов были потеряны.</p><p>За сегодняшний рабочий день Поликарп выполнил всего <span class="tex-span"><i>n</i></span> команд ping. Теперь для каждого сервера Поликарп хочет узнать, «жив» этот сервер или нет. Поликарп считает, что сервер «жив», если не менее половины из всех отправленных на этот сервер пакетов успешно дошли до него по сети.</p><p>Помогите Поликарпу, по заданным командам и их результатам определите для каждого сервера, «жив» этот сервер или нет.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано единственное целое число <span class="tex-span"><i>n</i></span> <span class="tex-span">(2 ≤ <i>n</i> ≤ 1000)</span> — количество выполненных Поликарпом команд. В каждой из следующих <span class="tex-span"><i>n</i></span> строк записано по три числа — описание команд. В <span class="tex-span"><i>i</i></span>-той из этих строк записаны три целых числа через пробел <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>t</i><sub class="lower-index"><i>i</i></sub> ≤ 2; <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub> ≥ 0; <i>x</i><sub class="lower-index"><i>i</i></sub> + <i>y</i><sub class="lower-index"><i>i</i></sub> = 10)</span>. Если <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub> = 1</span>, то <span class="tex-span"><i>i</i></span>-тая команда — это «<span class="tex-font-style-tt">ping a</span>», иначе <span class="tex-span"><i>i</i></span>-тая команда — «<span class="tex-font-style-tt">ping b</span>». Числа <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> обозначают результат выполнения этой команды, то есть <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> пакетов успешно дошли до соответствующего сервера, а <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> пакетов были потеряны.</p><p>Гарантируется, что во входных данных есть хотя бы одна команда «<span class="tex-font-style-tt">ping a</span>» и хотя бы одна команда «<span class="tex-font-style-tt">ping b</span>».</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите строку «<span class="tex-font-style-tt">LIVE</span>» (без кавычек) если сервер <span class="tex-span"><i>a</i></span> «жив», иначе выведите «<span class="tex-font-style-tt">DEAD</span>» (без кавычек).</p><p>Во второй строке выведите состояние сервера <span class="tex-span"><i>b</i></span> в аналогичном формате.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br />1 5 5<br />2 6 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>LIVE<br />LIVE<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br />1 0 10<br />2 0 10<br />1 10 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>LIVE<br />DEAD<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Рассмотрим первый тестовый пример, в нем на сервер <span class="tex-span"><i>a</i></span> всего было отправлено 10 пакетов, 5 из них дошли. Следовательно, не менее половины из всех отправленных на этот сервер пакетов успешно дошли до него по сети. На сервер <span class="tex-span"><i>b</i></span> всего было отправлено 10 пакетов, 6 из них дошли. Следовательно, не менее половины из всех отправленных на этот сервер пакетов успешно дошли до него по сети.</p><p>Рассмотрим второй тестовый пример, в нем на сервер <span class="tex-span"><i>a</i></span> всего было отправлено 20 пакетов, 10 из них дошли. Следовательно, не менее половины из всех отправленных на этот сервер пакетов успешно дошли до него по сети. На сервер <span class="tex-span"><i>b</i></span> всего было отправлено 10 пакетов, 0 из них дошли. Следовательно, менее половины из всех отправленных на этот сервер пакетов успешно дошли до него по сети.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Интернет-адрес</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вася — активный пользователь сети Интернет. Однажды ему очень понравился интернет-ресурс, поэтому он записал его адрес к себе в блокнот. Известно, что адрес записанного ресурса имеет формат:</p><p><center> <span class="tex-font-style-tt">&lt;протокол&gt;://&lt;домен&gt;.ru[/&lt;контекст&gt;]</span> </center></p><p>Где:</p><p><ul> <li> <span class="tex-font-style-tt">&lt;протокол&gt;</span> — может быть равен либо «<span class="tex-font-style-tt">http</span>» (без кавычек) либо «<span class="tex-font-style-tt">ftp</span>» (без кавычек), </li><li> <span class="tex-font-style-tt">&lt;домен&gt;</span> — непустая строка, состоящая из строчных букв латинского алфавита, </li><li> часть <span class="tex-font-style-tt">/&lt;контекст&gt;</span> — может отсутствовать, если она присутствует, то <span class="tex-font-style-tt">&lt;контекст&gt;</span> — это непустая строка, состоящая из строчных букв латинского алфавита. </li></ul></p><p>Если строка <span class="tex-font-style-tt">&lt;контекст&gt;</span> отсутствует в адресе, то дополнительный символ «<span class="tex-font-style-tt">/</span>» не ставится. Таким образом, в адресе либо два символа «<span class="tex-font-style-tt">/</span>» (те, что идут перед доменом), либо три (один дополнительный перед контекстом).</p><p>Когда мальчик пришел домой, он обнаружил, что записанный адрес в блокноте не содержит никаких знаков препинания. Наверное, Вася сильно торопился и не стал записывать символы «<span class="tex-font-style-tt">:</span>», «<span class="tex-font-style-tt">/</span>», «<span class="tex-font-style-tt">.</span>».</p><p>Помогите Васе восстановить возможный адрес записанного интернет ресурса.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записана непустая строка, которую Вася записал в блокнот. Эта строка состоит только из строчных букв латинского алфавита. </p><p>Гарантируется, что заданная строка содержит не более 50 букв. Гарантируется, что заданная строка может быть получена из некоторого корректного, описанного выше, адреса интернет-ресурса.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственную строку — адрес интернет-ресурса, который понравился Васе. Если существует несколько адресов, подходящих под ограничения задачи, разрешается вывести любой.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>httpsunrux<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>http://sun.ru/x<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>ftphttprururu<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>ftp://http.ru/ruru<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Во втором тестовом примере также возможны ответы: «<span class="tex-font-style-tt">ftp://httpruru.ru</span>» и «<span class="tex-font-style-tt">ftp://httpru.ru/ru</span>».</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Игра с монетами</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Два пирата Поликарп и Василий играют в очень интересную игру. У них есть <span class="tex-span"><i>n</i></span> сундуков с монетами, сундуки пронумерованы целыми числами от 1 до <span class="tex-span"><i>n</i></span>. В сундуке c номером <span class="tex-span"><i>i</i></span> находится <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> монеток. </p><p>Поликарп и Василий по очереди совершают ходы. Первым ходит Поликарп. За один ход игроку разрешается выбрать целое положительное число <span class="tex-span"><i>x</i></span> <span class="tex-span">(2·<i>x</i> + 1 ≤ <i>n</i>)</span> и взять по монетке из трех сундуков с номерами <span class="tex-span"><i>x</i></span>, <span class="tex-span">2·<i>x</i></span>, <span class="tex-span">2·<i>x</i> + 1</span>. Может оказаться, что в каком-то из этих сундуков нет монеток, в таком случае игрок не берет монетку из этого сундука. Игра заканчивается, когда все сундуки становятся пустыми.</p><p>Поликарп — человек не алчный. Поликарп — человек ленивый. Поэтому ему очень интересно, за какое наименьшее количество ходов может закончиться игра. Помогите Поликарпу, определите за какое минимальное количество ходов может закончиться игра. Учтите, Поликарп считает не только свои ходы, ходы Василия он тоже считает.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано единственное целое число <span class="tex-span"><i>n</i></span> <span class="tex-span">(1 ≤ <i>n</i> ≤ 100)</span> — количество сундуков с монетами. Во второй строке записана последовательность целых чисел, разделенных пробелами: <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> <span class="tex-span">(1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 1000)</span>, где <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> — количество монет в сундуке с номером <span class="tex-span"><i>i</i></span> на начало игры.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — за какое наименьшее количество ходов может закончиться игра. Если ни при какой последовательности ходов игра не заканчивается выведите -1.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>1<br />1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br />1 2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом тестовом примере не существует ни одного хода, который можно было бы сделать. Поэтому опустошить сундуки не получится.</p><p>Во втором тестовом примере существует только один возможный ход <span class="tex-span"><i>x</i> = 1</span>. Этот ход нужно повторить как минимум 3 раза, чтобы опустошить третий сундук.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Восстановление таблицы</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Недавно Поликарп изучил операцию «побитового И» (она же — операция «<span class="tex-font-style-tt">AND</span>») целых неотрицательных чисел. Теперь он хочет продемонстрировать учителю информатики в школе свое виртуозное владение изученной операцией.</p><p>Для этого Поликарп пришел в школу пораньше и записал на доске последовательность целых неотрицательных чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span>. А также квадратную матрицу <span class="tex-span"><i>b</i></span> размера <span class="tex-span"><i>n</i> × <i>n</i></span>. Элемент матрицы <span class="tex-span"><i>b</i></span>, стоящий в <span class="tex-span"><i>i</i></span>-той строке в <span class="tex-span"><i>j</i></span>-том столбце (обозначим его <span class="tex-span"><i>b</i><sub class="lower-index"><i>ij</i></sub></span>), равен:</p><p><ul> <li> «побитовому И» чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>a</i><sub class="lower-index"><i>j</i></sub></span> (то есть <span class="tex-span"><i>b</i><sub class="lower-index"><i>ij</i></sub> = <i>a</i><sub class="lower-index"><i>i</i></sub> &amp; <i>a</i><sub class="lower-index"><i>j</i></sub></span>), если <span class="tex-span"><i>i</i> ≠ <i>j</i></span>; </li><li> -1, если <span class="tex-span"><i>i</i> = <i>j</i></span>. </li></ul></p><p>Выписав матрицу <span class="tex-span"><i>b</i></span>, Поликарп очень обрадовался и стер с доски последовательность <span class="tex-span"><i>a</i></span>. Вот незадача — без этой последовательности учитель не сможет проверить правильно ли Поликарп произвел вычисления. Поликарпу срочно надо восстановить стертую последовательность чисел, иначе он не докажет, что умеет правильно считать.</p><p>Помогите Поликарпу, по матрице <span class="tex-span"><i>b</i></span> восстановите последовательность чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span>, которую он стер с доски. Поликарп не любит большие числа, поэтому каждое число в восстановленной последовательности не должно превышать <span class="tex-span">10<sup class="upper-index">9</sup></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано единственное целое число <span class="tex-span"><i>n</i></span> <span class="tex-span">(1 ≤ <i>n</i> ≤ 100)</span> — размер квадратной матрицы <span class="tex-span"><i>b</i></span>. В следующих <span class="tex-span"><i>n</i></span> строках записана матрица <span class="tex-span"><i>b</i></span>. В <span class="tex-span"><i>i</i></span>-той из этих строк записаны <span class="tex-span"><i>n</i></span> целых чисел, разделенных пробелами: <span class="tex-span"><i>j</i></span>-тое число обозначает элемент матрицы <span class="tex-span"><i>b</i><sub class="lower-index"><i>ij</i></sub></span>. Гарантируется, что для всех <span class="tex-span"><i>i</i></span> <span class="tex-span">(1 ≤ <i>i</i> ≤ <i>n</i>)</span> выполняется <span class="tex-span"><i>b</i><sub class="lower-index"><i>ii</i></sub></span> = -1. Гарантируется, что для всех <span class="tex-span"><i>i</i>, <i>j</i></span> <span class="tex-span">(1 ≤ <i>i</i>, <i>j</i> ≤ <i>n</i>; <i>i</i> ≠ <i>j</i>)</span> выполняется <span class="tex-span">0 ≤ <i>b</i><sub class="lower-index"><i>ij</i></sub> ≤ 10<sup class="upper-index">9</sup></span>, <span class="tex-span"><i>b</i><sub class="lower-index"><i>ij</i></sub> = <i>b</i><sub class="lower-index"><i>ji</i></sub></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>n</i></span> целых неотрицательных чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> <span class="tex-span">(0 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup>)</span> — последовательность, которую стер Поликарп. Выведенные числа разделяйте пробельными символами. </p><p>Гарантируется, что существует последовательность <span class="tex-span"><i>a</i></span>, удовлетворяющая условиям задачи. Если существует несколько таких последовательностей, разрешается вывести любую.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>1<br />-1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 </pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br />-1 18 0<br />18 -1 0<br />0 0 -1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>18 18 0 </pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br />-1 128 128 128<br />128 -1 148 160<br />128 148 -1 128<br />128 160 128 -1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>128 180 148 160 </pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Если вы не знаете, что такое операция «побитовое И», можете прочитать: <span class="tex-font-style-tt">http://ru.wikipedia.org/wiki/Битовые_операции</span>.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Происшествие в клубе</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Не везет Поликарпу последнее время! Не успел Поликарп устроиться в клуб «Двоичный кот» охранником, как в клубе произошло ограбление. Украдены все запасы мороженого.</p><p>В ночь ограбления Поликарп аккуратно вел записи о посетителях клуба. Каждый раз, когда посетитель заходил в клуб, он ставил в своих записях символ «<span class="tex-font-style-tt">+</span>». Аналогично, каждый раз, когда посетитель выходил из клуба, он ставил в своих записях символ «<span class="tex-font-style-tt">-</span>». Известно, что все события входа и выхода происходили последовательно, то есть никакие два не происходили одновременно. Поликарп не помнит был ли кто-либо в клубе на момент начала его смены и на момент окончания.</p><p>В настоящий момент следствие интересует вопрос — какое наименьшее количество различных людей мог видеть Поликарп. Следует считать, что он видит любого входящего и выходящего человека. Каждый человек мог входить и выходить произвольное количество раз.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Единственная строка входных данных содержит последовательность символов «<span class="tex-font-style-tt">+</span>» и «<span class="tex-font-style-tt">-</span>», символы записаны подряд без каких-либо разделителей. Символы записаны в порядке возникновения соответствующих событий. Заданная последовательность имеет длину от 1 до 300 символов, включительно.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите искомое минимальное количество человек.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>+-+-+<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>---</pre></div><div class="output"><div class="title">Выходные данные</div><pre>3</pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F. Анализ потока логов</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 секунд</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вам задан поток логов о предупреждениях в программе. Каждая запись потока логов представляет собой строку в формате: </p><p><center> «<span class="tex-font-style-tt">2012-MM-DD HH:MM:SS:MESSAGE</span>» (без кавычек). </center></p><p>Строка «<span class="tex-font-style-tt">MESSAGE</span>» состоит из пробелов, заглавных и строчных букв латинского алфавита, а также символов «<span class="tex-font-style-tt">!</span>», «<span class="tex-font-style-tt">.</span>», «<span class="tex-font-style-tt">,</span>», «<span class="tex-font-style-tt">?</span>». Строка «<span class="tex-font-style-tt">2012-MM-DD</span>» определяет корректную дату в 2012 году. Строка «<span class="tex-font-style-tt">HH:MM:SS</span>» определяет корректное время в 24 часовом формате.</p><p>Описанная запись потока логов обозначает, что в определенное в записи время произошло некоторое предупреждение в программе (описание предупреждения содержит строка «<span class="tex-font-style-tt">MESSAGE</span>»).</p><p>Ваша задача вывести первый момент времени, когда количество предупреждений за последние <span class="tex-span"><i>n</i></span> секунд стало не менее <span class="tex-span"><i>m</i></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записаны два целых числа через пробел <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> <span class="tex-span">(1 ≤ <i>n</i>, <i>m</i> ≤ 10000)</span>.</p><p>Вторая и остальные строки входных данных представляют собой поток логов. Во второй строке входных данных записана первая запись потока логов, в третьей строке — вторая запись потока логов и так далее. Каждая запись потока логов имеет формат описанный выше. Все записи заданы в хронологическом порядке, то есть записи о предупреждениях заданы в порядке их появления в программе.</p><p>Гарантируется, что в логе есть хотя бы одна запись. Гарантируется, что суммарная длина всех строк потока логов не превышает <span class="tex-span">5·10<sup class="upper-index">6</sup></span> (в частности, это означает, что длина одной строки не превышает <span class="tex-span">5·10<sup class="upper-index">6</sup></span> символов). Гарантируется, что все заданные даты и времена корректны, а строка «<span class="tex-font-style-tt">MESSAGE</span>» во всех записях не пустая.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если не существует искомого момента времени выведите -1. Иначе выведите строку в формате «<span class="tex-font-style-tt">2012-MM-DD HH:MM:SS</span>» (без кавычек) — первый момент времени, когда количество предупреждений за последние <span class="tex-span"><i>n</i></span> секунд стало не менее <span class="tex-span"><i>m</i></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>60 3<br />2012-03-16 16:15:25: Disk size is<br />2012-03-16 16:15:25: Network failute<br />2012-03-16 16:16:29: Cant write varlog<br />2012-03-16 16:16:42: Unable to start process<br />2012-03-16 16:16:43: Disk size is too small<br />2012-03-16 16:16:53: Timeout detected<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2012-03-16 16:16:43<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 2<br />2012-03-16 23:59:59:Disk size<br />2012-03-17 00:00:00: Network<br />2012-03-17 00:00:01:Cant write varlog<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 2<br />2012-03-16 23:59:59:Disk size is too sm<br />2012-03-17 00:00:00:Network failute dete<br />2012-03-17 00:00:01:Cant write varlogmysq<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2012-03-17 00:00:00<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">G. Возможные друзья</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Поликарп работает программистом в одной развивающейся социальной сети. Начальство поставило перед ним задачу разработать механизм определения возможных друзей. Поликарп долго думал над поставленной задачей и пришел к следующему выводу. </p><p>Пусть заданы все отношения дружбы в социальной сети в виде <span class="tex-span"><i>m</i></span> пар имен пользователей <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(<i>a</i><sub class="lower-index"><i>i</i></sub> ≠ <i>b</i><sub class="lower-index"><i>i</i></sub>)</span>. Каждая пара <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub></span> обозначает, что пользователи <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> являются друзьями. Отношение дружбы симметричное, то есть если <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> друг <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span>, то и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> друг <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>. Пользователь <span class="tex-span"><i>y</i></span> является <span class="tex-font-style-it">возможным другом</span> пользователя <span class="tex-span"><i>x</i></span>, если выполняются условия:</p><p><ol> <li> <span class="tex-span"><i>x</i> ≠ <i>y</i></span>; </li><li> <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span> не являются друзьями; </li><li> среди всех пользователей социальной сети, которые удовлетворяют первым двум условиям, пользователь <span class="tex-span"><i>y</i></span> имеет наибольшее количество общих друзей с пользователем <span class="tex-span"><i>x</i></span>. Пользователь <span class="tex-span"><i>z</i></span> является общим другом пользователя <span class="tex-span"><i>x</i></span> и пользователя <span class="tex-span"><i>y</i></span> <span class="tex-span">(<i>z</i> ≠ <i>x</i>, <i>z</i> ≠ <i>y</i>)</span>, если <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>z</i></span> друзья, а также <span class="tex-span"><i>y</i></span> и <span class="tex-span"><i>z</i></span> друзья. </li></ol></p><p>Ваша задача, помочь Поликарпу реализовать механизм определения возможных друзей.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано единственное целое число <span class="tex-span"><i>m</i></span> <span class="tex-span">(1 ≤ <i>m</i> ≤ 5000)</span> — количество пар друзей в социальной сети. В следующих <span class="tex-span"><i>m</i></span> строках заданы пары имен пользователей-друзей. В <span class="tex-span"><i>i</i></span>-той строке через пробел записаны два имени <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(<i>a</i><sub class="lower-index"><i>i</i></sub> ≠ <i>b</i><sub class="lower-index"><i>i</i></sub>)</span>. Имена пользователей непустые и состоят из не более 20 заглавных и строчных латинских букв. </p><p>Гарантируется, что каждая пара друзей встречается во входных данных только один раз, например, во входных данных одновременно не могут встречаться пары <span class="tex-span"><i>x</i></span>, <span class="tex-span"><i>y</i></span> и <span class="tex-span"><i>y</i></span>, <span class="tex-span"><i>x</i></span>. Гарантируется, что различные пользователи имеют различные имена. Гарантируется, что каждый пользователь социальной сети имеет хотя бы одного друга. Последнее гарантирует, что имя каждого пользователя социальной сети встречается во входных данных хотя бы один раз.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите единственное целое число <span class="tex-span"><i>n</i></span> — количество пользователей социальной сети. В следующих <span class="tex-span"><i>n</i></span> строках выведите для каждого пользователя, количество возможных друзей. В <span class="tex-span"><i>i</i></span>-той строке выведите имя пользователя <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> и количество его возможных друзей <span class="tex-span"><i>d</i><sub class="lower-index"><i>i</i></sub></span> через пробел. </p><p>Информацию про пользователей можно выводить в любом порядке.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br />Mike Gerald<br />Kate Mike<br />Kate Tank<br />Gerald Tank<br />Gerald David<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5<br />Mike 1<br />Gerald 1<br />Kate 1<br />Tank 1<br />David 2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br />valera vanya<br />valera edik<br />pasha valera<br />igor valera<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5<br />valera 0<br />vanya 3<br />edik 3<br />pasha 3<br />igor 3<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом тестовом примере рассмотрим пользователя David. Пользователи Mike и Tank имеют одного общего друга (Gerald) с David. Пользователь Kate не имеет ни одного общего друга с David. Поэтому возможные друзья David: пользователи Mike и Tank.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">H. Запросы на количество палиндромов</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 секунд</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Задана строка <span class="tex-span"><i>s</i> = <i>s</i><sub class="lower-index">1</sub><i>s</i><sub class="lower-index">2</sub>... <i>s</i><sub class="lower-index">|<i>s</i>|</sub></span> длины <span class="tex-span">|<i>s</i>|</span>, состоящая из строчных букв латинского алфавита. А также <span class="tex-span"><i>q</i></span> запросов, каждый запрос описывается двумя целыми числами <span class="tex-span"><i>l</i><sub class="lower-index"><i>i</i></sub>, <i>r</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>l</i><sub class="lower-index"><i>i</i></sub> ≤ <i>r</i><sub class="lower-index"><i>i</i></sub> ≤ |<i>s</i>|)</span>. Ответ на запрос — количество подстрок строки <span class="tex-span"><i>s</i>[<i>l</i><sub class="lower-index"><i>i</i></sub>... <i>r</i><sub class="lower-index"><i>i</i></sub>]</span>, которые являются палиндромами.</p><p>Строка <span class="tex-span"><i>s</i>[<i>l</i>... <i>r</i>] = <i>s</i><sub class="lower-index"><i>l</i></sub><i>s</i><sub class="lower-index"><i>l</i> + 1</sub>... <i>s</i><sub class="lower-index"><i>r</i></sub></span> <span class="tex-span">(1 ≤ <i>l</i> ≤ <i>r</i> ≤ |<i>s</i>|)</span> называется <span class="tex-font-style-it">подстрокой</span> строки <span class="tex-span"><i>s</i> = <i>s</i><sub class="lower-index">1</sub><i>s</i><sub class="lower-index">2</sub>... <i>s</i><sub class="lower-index">|<i>s</i>|</sub></span>.</p><p>Строка <span class="tex-span"><i>t</i></span> называется <span class="tex-font-style-it">палиндромом</span>, если она одинаково читается как слева направо, так и справа налево. Формально, если <span class="tex-span"><i>t</i> = <i>t</i><sub class="lower-index">1</sub><i>t</i><sub class="lower-index">2</sub>... <i>t</i><sub class="lower-index">|<i>t</i>|</sub> = <i>t</i><sub class="lower-index">|<i>t</i>|</sub><i>t</i><sub class="lower-index">|<i>t</i>| - 1</sub>... <i>t</i><sub class="lower-index">1</sub></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записана строка <span class="tex-span"><i>s</i></span> <span class="tex-span">(1 ≤ |<i>s</i>| ≤ 5000)</span>. Во второй строке записано единственное целое число <span class="tex-span"><i>q</i></span> <span class="tex-span">(1 ≤ <i>q</i> ≤ 10<sup class="upper-index">6</sup>)</span> — количество запросов. В следующих <span class="tex-span"><i>q</i></span> строках записаны сами запросы. В <span class="tex-span"><i>i</i></span>-той из этих строк записаны два целых числа через пробел <span class="tex-span"><i>l</i><sub class="lower-index"><i>i</i></sub>, <i>r</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>l</i><sub class="lower-index"><i>i</i></sub> ≤ <i>r</i><sub class="lower-index"><i>i</i></sub> ≤ |<i>s</i>|)</span> — описание <span class="tex-span"><i>i</i></span>-того запроса.</p><p>Гарантируется, что заданная строка состоит только из строчных букв латинского алфавита.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>q</i></span> целых чисел — ответы на запросы. Ответы на запросы выводите в том порядке, в котором запросы заданы во входных данных. Выведенные числа разделяйте пробельными символами.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>caaaba<br />5<br />1 1<br />1 4<br />2 3<br />4 6<br />4 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br />7<br />3<br />4<br />2<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Рассмотрим четвертый запрос в первом тестовом примере. Строка <span class="tex-span"><i>s</i>[4... 6]</span> = «<span class="tex-font-style-tt">aba</span>». Ее подстроки, являющиеся палиндромами: «<span class="tex-font-style-tt">a</span>», «<span class="tex-font-style-tt">b</span>», «<span class="tex-font-style-tt">a</span>», «<span class="tex-font-style-tt">aba</span>».</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
