
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="1ha8ecbd4d28g3g1d76305d48a8f70fb"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="dwe9fqbi6gzr"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='1ha8ecbd4d28g3g1d76305d48a8f70fb'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Round #139 (Div. 2)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Башня из игральных костей</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Игральная кость — это куб, на гранях которого изображены различные целые числа от 1 до 6 в виде черных точек. При этом сумма чисел на противоположных гранях игральной кости всегда равна 7. Обратите внимание, что под заданные ограничения подходят всего две игральные кости, которые являются зеркальным отражением друг друга (они изображены на рисунке слева).</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/02d8f2a43a0c39ad8fafc8f2e19f4ec009b9bb28.png" /> </center></p><p>Алиса и Боб играют в кости. Алиса построила башню из <span class="tex-span"><i>n</i></span> игральных костей. Известно, что в этой башне соседние игральные кости соприкасаются гранями с разными числами. Боб хочет однозначно определить числа, написанные на гранях всех игральных костей, из которых построена башня. К сожалению, Боб смотрит на башню со стороны, и поэтому он не видит всех чисел на гранях. Боб видит число на вершине башни, а также числа на двух соседних боковых сторонах (то, что видно Бобу, показано на рисунке справа). </p><p>Помогите Бобу, скажите, можно ли по данной информации однозначно определить числа на всех гранях игральных костей, из которых сложена башня, или нет?</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано единственное целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100</span>) — количество игральных костей в башне.</p><p>Во второй строке записано целое число <span class="tex-span"><i>x</i></span> <span class="tex-span">(1 ≤ <i>x</i> ≤ 6)</span> — число, которое видит Боб на вершине башни. В следующих <span class="tex-span"><i>n</i></span> строках записаны по два целых числа через пробел: в <span class="tex-span"><i>i</i></span>-ой строке записаны числа <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ 6; <i>a</i><sub class="lower-index"><i>i</i></sub> ≠ <i>b</i><sub class="lower-index"><i>i</i></sub>)</span> — числа, которые видит Боб на боковых гранях <span class="tex-span"><i>i</i></span>-ой игральной кости башни.</p><p>Считайте, что кости в башне пронумерованы сверху вниз от 1 до <span class="tex-span"><i>n</i></span>. То есть самая верхняя игральная кость имеет номер 1 (та кость, верхнюю грань которой видит Боб). Гарантируется, что можно составить башню из игральных костей, которая будет иметь заданный во входных данных вид.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите «<span class="tex-font-style-tt">YES</span>» (без кавычек), если можно однозначно определить числа на всех гранях всех игральных костей башни. Если этого сделать нельзя — выведите «<span class="tex-font-style-tt">NO</span>» (без кавычек).</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />6<br />3 2<br />5 4<br />2 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES</pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br />3<br />2 6<br />4 1<br />5 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO</pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Всем известные числа</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Числа <span class="tex-span"><i>k</i></span>-боначчи (<span class="tex-span"><i>k</i></span> целое, <span class="tex-span"><i>k</i> &gt; 1</span>) являются обобщением чисел Фибоначчи и определяются следующим образом:</p><p><ul> <li> <span class="tex-span"><i>F</i>(<i>k</i>, <i>n</i>) = 0</span>, для целых <span class="tex-span"><i>n</i></span>, <span class="tex-span">1 ≤ <i>n</i> &lt; <i>k</i></span>; </li><li> <span class="tex-span"><i>F</i>(<i>k</i>, <i>k</i>) = 1</span>; </li><li> <span class="tex-span"><i>F</i>(<i>k</i>, <i>n</i>) = <i>F</i>(<i>k</i>, <i>n</i> - 1) + <i>F</i>(<i>k</i>, <i>n</i> - 2) + ... + <i>F</i>(<i>k</i>, <i>n</i> - <i>k</i>)</span>, для целых <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>n</i> &gt; <i>k</i></span>. </li></ul></p><p>Обратите внимание, мы определяем числа <span class="tex-span"><i>k</i></span>-боначчи, <span class="tex-span"><i>F</i>(<i>k</i>, <i>n</i>)</span>, только для целых значений <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>k</i></span>.</p><p>Вам задано число <span class="tex-span"><i>s</i></span>, представьте его в виде суммы нескольких (хотя бы двух) <span class="tex-font-style-bf">различных</span> чисел <span class="tex-span"><i>k</i></span>-боначчи. </p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано два целых числа <span class="tex-span"><i>s</i></span> и <span class="tex-span"><i>k</i></span> <span class="tex-span">(1 ≤ <i>s</i>, <i>k</i> ≤ 10<sup class="upper-index">9</sup>; <i>k</i> &gt; 1)</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первую строку выведите целое число <span class="tex-span"><i>m</i></span> <span class="tex-span">(<i>m</i> ≥ 2)</span> — количество чисел в найденном представлении. Во вторую строку выведите <span class="tex-span"><i>m</i></span> различных целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>m</i></sub></span>. Каждое выведенное число должно быть числом <span class="tex-span"><i>k</i></span>-боначчи. Сумма выведенных чисел должна быть равна <span class="tex-span"><i>s</i></span>.</p><p>Гарантируется, что ответ существует. Если существует несколько ответов, разрешается вывести любой.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />0 2 3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>21 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />4 1 16<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Штрихкод</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Имеется картинка размера <span class="tex-span"><i>n</i> × <i>m</i></span> пикселов. Каждый пиксел может быть белым или черным. Требуется изменить цвета как можно меньшего количества пикселов так, чтобы получилась картинка-штрихкод.</p><p>Картинка является штрихкодом если выполняются следующие условия: <ul> <li> В каждом столбце все пикселы одного цвета. </li><li> Ширина каждой одноцветной вертикальной полосы не менее <span class="tex-span"><i>x</i></span> и не более <span class="tex-span"><i>y</i></span> пикселов. Другими словами, если сгруппировать все соседние столбцы пикселов одного цвета, то не должно получиться группы размера менее <span class="tex-span"><i>x</i></span> или более <span class="tex-span"><i>y</i></span>. </li></ul></p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны четыре целых числа через пробел <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span>, <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i>, <i>x</i>, <i>y</i> ≤ 1000; <i>x</i> ≤ <i>y</i></span>).</p><p>Далее идет <span class="tex-span"><i>n</i></span> строк, описывающих исходную картинку. В каждой из этих строк содержится ровно <span class="tex-span"><i>m</i></span> символов. Символ «<span class="tex-font-style-tt">.</span>» обозначает белый пиксел, а «<span class="tex-font-style-tt">#</span>» — черный. Никаких других символов кроме «<span class="tex-font-style-tt">.</span>» и «<span class="tex-font-style-tt">#</span>» в описании картинки не содержится.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите наименьшее количество пикселов, которое нужно перекрасить. Гарантируется, что ответ существует. </p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6 5 1 2<br />##.#.<br />.###.<br />###..<br />#...#<br />.##.#<br />###..<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>11<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 5 1 1<br />#####<br />.....<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом тестовом примере картинка после перекрашивания может выглядеть следующим образом: <center> <pre><br />.##..<br />.##..<br />.##..<br />.##..<br />.##..<br />.##..<br /></pre> </center></p><p>Во втором тестовом примере картинка после перекрашивания может выглядеть следующим образом: <center> <pre><br />.#.#.<br />.#.#.<br /></pre> </center></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Змейка</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>4 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Напомним правила одной очень популярной игры, которая называется «Змейка» (эта игра также известна как «Удав», «Питон» или «Червяк»).</p><p>Игровое поле представляет собой прямоугольную таблицу размера <span class="tex-span"><i>n</i> × <i>m</i></span>. Некоторые клетки поля считаются непроходимыми (стены), все остальные клетки поля проходимы.</p><p>Вы управляете змейкой, которая состоит из сегментов. Каждый сегмент занимает ровно одну проходимую клетку поля, причем в любой проходимой клетке находится не более одного сегмента. Все сегменты пронумерованы целыми числами от <span class="tex-span">1</span> до <span class="tex-span"><i>k</i></span>, где <span class="tex-span"><i>k</i></span> — длина змейки. Сегмент с номером <span class="tex-span">1</span> называется головой, а с номером <span class="tex-span"><i>k</i></span> — хвостом. Для любого <span class="tex-span"><i>i</i></span> (<span class="tex-span">1 ≤ <i>i</i> &lt; <i>k</i></span>) клетки поля, в которых находятся сегменты с номерами <span class="tex-span"><i>i</i></span> и <span class="tex-span"><i>i</i> + 1</span>, являются соседними, то есть имеют общую сторону.</p><p>В одной из проходимых клеток поля находится яблоко. Цель змейки — достичь яблока и съесть его (то есть сделать так, чтобы голова оказалась в той же клетке, где и яблоко).</p><p>В процессе игры змейка двигается. За один ход змейка может переместить голову в одну из соседних клеток поля. При этом все остальные сегменты подтягиваются за головой. То есть каждый сегмент с номером <span class="tex-span"><i>i</i></span> <span class="tex-span">(1 &lt; <i>i</i> ≤ <i>k</i>)</span> перемещается в клетку, где только что находился сегмент с номером <span class="tex-span"><i>i</i> - 1</span>. Считайте, что перемещение всех сегментов, включая голову, происходит одновременно (смотри второй тестовый пример). Если после хода голова змейки оказывается в непроходимой клетке или в клетке, в которой находится другой сегмент, то змейка умирает. Поэтому такие ходы мы будем считать недопустимыми.</p><p>Ваша задача — определить наименьшее количество допустимых ходов, необходимых для того, чтобы змейка достигла яблока.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны два целых числа через пробел <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 15</span>) — количество строк и столбцов игрового поля.</p><p>В следующих <span class="tex-span"><i>n</i></span> строках описано игровое поле. В каждой из этих строк записано по <span class="tex-span"><i>m</i></span> символов. Символ «<span class="tex-font-style-tt">#</span>» обозначает стену, «<span class="tex-font-style-tt">.</span>» обозначает проходимую клетку, «<span class="tex-font-style-tt">@</span>» обозначает яблоко. Сегмент змейки номер один обозначается символом «<span class="tex-font-style-tt">1</span>», сегмент номер два — символом «<span class="tex-font-style-tt">2</span>» и так далее.</p><p>Описание игрового поля не содержит никаких символов кроме «<span class="tex-font-style-tt">#</span>», «<span class="tex-font-style-tt">.</span>», «<span class="tex-font-style-tt">@</span>» и цифр (кроме цифры 0). Гарантируется, что описанное поле корректно. Гарантируется, что на описанном поле находится ровно одно яблоко и ровно одна змейка, длина которой не меньше 3 и не больше 9.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В выходной файл выведите единственное целое число — наименьшее количество ходов, необходимое для достижения яблока. Если яблока достичь невозможно, выведите <span class="tex-font-style-tt">-1</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4 5<br />##...<br />..1#@<br />432#.<br />...#.<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 4<br />#78#<br />.612<br />.543<br />..@.<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 2<br />3@<br />2#<br />1#<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Неразрешимость</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Рассмотрим уравнение <center class="tex-equation"><img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/e132675bc04c8df0b7e312e08476a7157b8f823d.png" /></center> где записью <span class="tex-span">[<i>a</i>]</span> обозначается целая часть числа <span class="tex-span"><i>a</i></span>.</p><p>Найдем все целые <span class="tex-span"><i>z</i></span> <span class="tex-span">(<i>z</i> &gt; 0)</span>, при которых это уравнение <span class="tex-font-style-it">неразрешимо</span> в целых положительных числах. Выражение «неразрешимо в целых положительных числах» означает, что не существует таких целых положительных чисел <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span> <span class="tex-span">(<i>x</i>, <i>y</i> &gt; 0)</span>, при которых выполняется описанное выше равенство.</p><p>Выпишем все такие <span class="tex-span"><i>z</i></span> в порядке возрастания: <span class="tex-span"><i>z</i><sub class="lower-index">1</sub>, <i>z</i><sub class="lower-index">2</sub>, <i>z</i><sub class="lower-index">3</sub></span>, и так далее <span class="tex-span">(<i>z</i><sub class="lower-index"><i>i</i></sub> &lt; <i>z</i><sub class="lower-index"><i>i</i> + 1</sub>)</span>. От вас требуется по числу <span class="tex-span"><i>n</i></span> найти число <span class="tex-span"><i>z</i><sub class="lower-index"><i>n</i></sub></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано единственное целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 40</span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — остаток от деления числа <span class="tex-span"><i>z</i><sub class="lower-index"><i>n</i></sub></span> на <span class="tex-span">1000000007</span> <span class="tex-span">(10<sup class="upper-index">9</sup> + 7)</span>. Гарантируется, что ответ существует.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1</pre></div><div class="input"><div class="title">Входные данные</div><pre>2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3</pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>15</pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
