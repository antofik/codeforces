
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="hgbc5c9317h07fb09g753h23f3h9c443"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="t9sxr7z9jxsi"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='hgbc5c9317h07fb09g753h23f3h9c443'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Round #170 (Div. 1)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Изучение языков</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В компании «BerCorp» работает <span class="tex-span"><i>n</i></span> сотрудников. Для официальной переписки утверждено <span class="tex-span"><i>m</i></span> языков, пронумерованных целыми числами от <span class="tex-span">1</span> до <span class="tex-span"><i>m</i></span>. Для каждого сотрудника известно, какие языки он знает. Возможно даже, что человек не знает ни одного официального языка. Но работники готовы выучить любое количество языков, если только компания оплатит им обучение. Стоимость курса изучения одного языка для одного сотрудника составляет <span class="tex-span">1</span> бердоллар.</p><p>Определите, какую минимальную сумму денег придется затратить компании, чтобы любой сотрудник мог обратиться к любому другому, возможно, не напрямую (то есть, привлекая других сотрудников для перевода).</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">2 ≤ <i>n</i>, <i>m</i> ≤ 100</span>) — количество сотрудников и количество языков.</p><p>Далее следует <span class="tex-span"><i>n</i></span> строк — списки языков для каждого работника. В начале <span class="tex-span"><i>i</i></span>-ой строки записано целое число <span class="tex-span"><i>k</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>k</i><sub class="lower-index"><i>i</i></sub> ≤ <i>m</i></span>) — количество языков, которые знает <span class="tex-span"><i>i</i></span>-ый сотрудник. Далее в <span class="tex-span"><i>i</i></span>-ой строке записано <span class="tex-span"><i>k</i><sub class="lower-index"><i>i</i></sub></span> целых чисел — <span class="tex-span"><i>a</i><sub class="lower-index"><i>ij</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>ij</i></sub> ≤ <i>m</i></span>) — номера языков, которые знает <span class="tex-span"><i>i</i></span>-ый сотрудник. Гарантируется, что все номера в одном списке различны. Обратите внимание, что сотрудник может не знать ни одного языка.</p><p>Числа в строках разделяются одиночными пробелами.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — наименьшее количество денег, которое придется заплатить, чтобы каждый мог написать письмо каждому (возможно, привлекая других для перевода).</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5 5<br />1 2<br />2 2 3<br />2 3 4<br />2 4 5<br />1 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>8 7<br />0<br />3 1 2 3<br />1 1<br />2 5 4<br />2 6 7<br />1 3<br />2 7 4<br />1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 2<br />1 2<br />0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Во втором примере сотрудник с номером <span class="tex-span">1</span> может выучить язык с номером <span class="tex-span">2</span>, а сотрудник с номером <span class="tex-span">8</span> — язык с номером <span class="tex-span">4</span>.</p><p>В третьем примере сотруднику с номером <span class="tex-span">2</span> нужно выучить язык с номером <span class="tex-span">2</span>.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Множество точек</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Выпуклость множества точек на плоскости — это размер максимального по размеру подмножества точек, которые образуют выпуклый многоугольник. Ваша задача — построить множество из <span class="tex-span"><i>n</i></span> точек с выпуклостью ровно <span class="tex-span"><i>m</i></span>. Никакие три точки не должны лежать на одной прямой. </p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке записано два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">3 ≤ <i>m</i> ≤ 100, <i>m</i> ≤ <i>n</i> ≤ 2<i>m</i></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если решения не существует, выведите «<span class="tex-font-style-tt">-1</span>». Иначе выведите <span class="tex-span"><i>n</i></span> пар целых чисел — координаты точек любого множества, выпуклость которого равна <span class="tex-span"><i>m</i></span>. Координаты не должны по модулю превосходить <span class="tex-span">10<sup class="upper-index">8</sup></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 0<br />3 0<br />0 3<br />1 1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>6 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>6 6<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>10 0<br />-10 0<br />10 1<br />9 1<br />9 -1<br />0 -2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>7 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>176166 6377<br />709276 539564<br />654734 174109<br />910147 434207<br />790497 366519<br />606663 21061<br />859328 886001<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Игра</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Два игрока играют в следующую игру. Изначально у игроков имеется нож и прямоугольный лист бумаги, разделенный сеткой на одинаковые квадратные клетки единичного размера. Участники делают ходы по очереди, проигрывает тот, кто не может сделать ход. За один ход игрок может провести ножом вдоль любого отрезка линии сетки (необязательно от края до края). Участок бумаги, по которому провели ножом хотя бы один раз, считается разрезанным. Чтобы игра не зациклилась, на ход накладывается ограничение: каждый ход должен разрезать какой-то новый участок бумаги ненулевой длины. </p><p>Очевидно, что игра завершится, когда весь лист будет разрезан на клетки <span class="tex-span">1 × 1</span>. В процессе игры запрещается перемещать части листа. Также запрещается проводить разрезы вдоль границы. Координаты концов каждого разреза должны быть целыми числами.</p><p>Вам дан лист бумаги размером <span class="tex-span"><i>n</i> × <i>m</i></span>, на котором уже кто-то сделал <span class="tex-span"><i>k</i></span> разрезов. Ваша задача — определить, кто выиграет при оптимальной игре, если игроки начнут играть на данном листе. В случае победы первого игрока также требуется найти выигрышный первый ход.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано три целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span>, <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 10<sup class="upper-index">9</sup>, 0 ≤ <i>k</i> ≤ 10<sup class="upper-index">5</sup></span>) — размеры листа бумаги и количество разрезов. Далее следует <span class="tex-span"><i>k</i></span> строк по четыре целых числа в каждой <span class="tex-span"><i>xb</i><sub class="lower-index"><i>i</i></sub>, <i>yb</i><sub class="lower-index"><i>i</i></sub>, <i>xe</i><sub class="lower-index"><i>i</i></sub>, <i>ye</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>xb</i><sub class="lower-index"><i>i</i></sub>, <i>xe</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>, 0 ≤ <i>yb</i><sub class="lower-index"><i>i</i></sub>, <i>ye</i><sub class="lower-index"><i>i</i></sub> ≤ <i>m</i></span>) — координаты концов существующих разрезов. </p><p>Гарантируется, что каждый разрез имеет ненулевую длину, является либо вертикальным, либо горизонтальным, и не проходит по границе листа.</p><p>Разрезы могут пересекаться, накладываться и даже совпадать. То есть не гарантируется, что разрезы были получены в результате какой-то корректной игры.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если выигрывает второй игрок, выведите «<span class="tex-font-style-tt">SECOND</span>». Иначе в первой строке выведите «<span class="tex-font-style-tt">FIRST</span>», а во второй строке — любой выигрышный ход первого игрока (координаты концов разреза в том же формате, что и во входных данных).</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 1 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>FIRST<br />1 0 1 1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 2 4<br />0 1 2 1<br />0 1 2 1<br />1 2 1 0<br />1 1 1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>SECOND<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Google Code Jam</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Наверное, многим знакомы правила раундов Google Code Jam. Напомним основные моменты, важные для решения этой задачи. В течение раунда участникам предлагается решить несколько задач, каждая из которых разбита на две подзадачи: легкую с маленькими ограничениями (Small input), и сложную с большими ограничениями (Large input). Отправить решение сложной подзадачи разрешается только после того, как участник решил легкую подзадачу данной задачи. Других ограничений на порядок решения задач нет. В частности, участник может сначала решить легкую подзадачу, потом переключиться на другую задачу, и только потом вернуться к сложной подзадаче. За решение каждой подзадачи участник получает некоторое количество очков (обычно, различное для каждой задачи). При этом учитываются только полные решения, правильно работающие на всех тестах. Результат тестирования легкой подзадачи сообщается участнику сразу же после отправки, а результат тестирования сложной подзадачи становится известен только после конца раунда. В итоговой таблице результатов участники упорядочиваются по невозрастанию суммы полученных очков. При равенстве очков, участники упорядочиваются по возрастанию штрафного времени. Штрафное время в раундах по правилам Google Code Jam — это <span class="tex-font-style-bf">время отправки последнего правильного решения</span>.</p><p>На очередном раунде Вася решил попробовать новую тактику. Как только соревнование началось, он быстро прочитал все задачи и точно оценил время, необходимое для их решения. Более конкретно, для каждой из <span class="tex-span"><i>n</i></span> задач Вася знает 5 величин:</p><p><ul></ul></p><p><li> За решение легкой подзадачи <span class="tex-span"><i>i</i></span>-ой задачи участник получает <span class="tex-span"><i>scoreSmall</i><sub class="lower-index"><i>i</i></sub></span> очков, а за решение сложной подзадачи — еще <span class="tex-span"><i>scoreLarge</i><sub class="lower-index"><i>i</i></sub></span> очков. То есть максимальное количество очков, которое можно получить за <span class="tex-span"><i>i</i></span>-ую задачу равно <span class="tex-span"><i>scoreSmall</i><sub class="lower-index"><i>i</i></sub> + <i>scoreLarge</i><sub class="lower-index"><i>i</i></sub></span>.</li></p><p><li> Чтобы написать решение легкой подзадачи <span class="tex-span"><i>i</i></span>-ой задачи, Васе требуется ровно <span class="tex-span"><i>timeSmall</i><sub class="lower-index"><i>i</i></sub></span> минут. Чтобы улучшить этот код и превратить его в решение сложной подзадачи, Васе требуется еще <span class="tex-span"><i>timeLarge</i><sub class="lower-index"><i>i</i></sub></span> минут.</li></p><p><li> Вася много тренировался, поэтому все легкие подзадачи он решает с первой попытки. Но со сложными подзадачами не все так просто: с вероятностью <span class="tex-span"><i>probFail</i><sub class="lower-index"><i>i</i></sub></span> решение сложной подзадачи после конца раунда окажется неправильным. Напоминаем, что такие решения никак не учитываются при подсчете очков и не влияют на штрафное время.</li></p><p>Раунд длится <span class="tex-span"><i>t</i></span> минут. Время чтения задач и отправки решений нужно считать равным нулю. Разрешается сдавать решение ровно в момент окончания раунда.</p><p>Вася хочет выбрать набор подзадач и порядок их решения таким образом, чтобы матожидание суммы полученных очков было максимально. Если существует несколько способов сделать это, то ему нужно минимизировать матожидание штрафного времени. Помогите Васе справиться с проблемой.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>t</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 1000, 1 ≤ <i>t</i> ≤ 1560</span>). Далее следует <span class="tex-span"><i>n</i></span> строк по 5 чисел в каждой: <span class="tex-span"><i>scoreSmall</i><sub class="lower-index"><i>i</i></sub>, <i>scoreLarge</i><sub class="lower-index"><i>i</i></sub>, <i>timeSmall</i><sub class="lower-index"><i>i</i></sub>, <i>timeLarge</i><sub class="lower-index"><i>i</i></sub>, <i>probFail</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>scoreSmall</i><sub class="lower-index"><i>i</i></sub>, <i>scoreLarge</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup>, 1 ≤ <i>timeSmall</i><sub class="lower-index"><i>i</i></sub>, <i>timeLarge</i><sub class="lower-index"><i>i</i></sub> ≤ 1560, 0 ≤ <i>probFail</i><sub class="lower-index"><i>i</i></sub> ≤ 1</span>).</p><p><span class="tex-span"><i>probFail</i><sub class="lower-index"><i>i</i></sub></span> — вещественные числа, заданные не более чем с 6 знаками после точки. Все остальные числа во входных данных целые.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите два вещественных числа через пробел — максимальное матожидание суммы полученных очков и минимальное возможное при этом матожидание штрафного времени. Ответ будет засчитан, если абсолютная или относительная погрешность не превосходит <span class="tex-span">10<sup class="upper-index"> - 9</sup></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 40<br />10 20 15 4 0.5<br />4 100 21 1 0.99<br />1 4 1 1 0.25<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>24.0 18.875<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 1<br />100000000 200000000 1 1 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>100000000 1<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере один из оптимальных порядков решения задач:</p><p><ol></ol></p><p><li> Легкая подзадача третьей задачи. </li><li> Легкая подзадача первой задачи. </li><li> Сложная подзадача третьей задачи. </li><li> Сложная подзадача первой задачи.</li></p><p>Заметим, что если вместо третьей задачи решить легкую подзадачу второй задачи, то матожидание суммы очков будет таким же, но матожидание штрафного времени будет хуже (<span class="tex-span">38</span>).</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Бинарное дерево на плоскости</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 секунд</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Корневое дерево — это ориентированный ациклический граф, в котором есть одна вершина (корень), из которой существует ровно один путь до любой другой вершины.</p><p>Корневое дерево называется бинарным, если каждая вершина имеет не более двух исходящих дуг.</p><p>Когда бинарное дерево рисуют на плоскости, все дуги должны быть направлены сверху вниз. То есть для каждой дуги из <span class="tex-span"><i>u</i></span> в <span class="tex-span"><i>v</i></span> должно выполняться: <span class="tex-span"><i>y</i><sub class="lower-index"><i>u</i></sub> &gt; <i>y</i><sub class="lower-index"><i>v</i></sub></span>.</p><p>Вам даны координаты всех вершин дерева. Ваша задача — соединить эти вершины дугами так, чтобы получилось бинарное корневое дерево, и суммарная длина дуг была минимальна. Все дуги построенного дерева должны быть направлены сверху вниз.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано одно целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 400</span>) — количество вершин в дереве. Далее следует <span class="tex-span"><i>n</i></span> строк по два целых числа в каждой: <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">|<i>x</i><sub class="lower-index"><i>i</i></sub>|, |<i>y</i><sub class="lower-index"><i>i</i></sub>| ≤ 10<sup class="upper-index">3</sup></span>) — координаты вершин дерева. Гарантируется, что все точки различны.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если невозможно построить бинарное дерево на данных точках, выведите «<span class="tex-font-style-tt">-1</span>». Иначе выведите одно вещественное число — суммарную длину дуг в минимальном бинарном дереве. Ответ будет засчитан, если абсолютная или относительная погрешность не превосходит <span class="tex-span">10<sup class="upper-index"> - 6</sup></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />0 0<br />1 0<br />2 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3.650281539872885<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br />0 0<br />1 0<br />2 1<br />2 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
