
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="ac8h6bf22ee4bdfgche0348ab706199g"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="1x3mjsah0kuzo"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='ac8h6bf22ee4bdfgche0348ab706199g'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Round #198 (Div. 2)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Стена</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Яхуб и его друг Флойд начали красить стену. Яхуб красит стену красным цветом, а Флойд — розовым цветом. Предположим, что стена сделана из очень большого количества кирпичей, пронумерованных <span class="tex-span">1</span>, <span class="tex-span">2</span>, <span class="tex-span">3</span> и так далее. </p><p>Яхуб красит стену по следующей схеме: он пропускает <span class="tex-span"><i>x</i> - 1</span> последовательных кирпичей, затем красит <span class="tex-span"><i>x</i></span>-ый. Другими словами, он покрасит кирпичи с номерами <span class="tex-span"><i>x</i></span>, <span class="tex-span">2·<i>x</i></span>, <span class="tex-span">3·<i>x</i></span> и так далее красным. Аналогично, Флойд пропускает <span class="tex-span"><i>y</i> - 1</span> последовательных кирпичей, затем красит <span class="tex-span"><i>y</i></span>-ый. То есть Флойд красит кирпичи с номерами <span class="tex-span"><i>y</i></span>, <span class="tex-span">2·<i>y</i></span>, <span class="tex-span">3·<i>y</i></span> и так далее розовым.</p><p>Покрасив стену, мальчики заметили, что некоторые кирпичи покрашены и красным и розовым. У Яхуба есть счастливое число <span class="tex-span"><i>a</i></span>, а у Флойда есть счастливое число <span class="tex-span"><i>b</i></span>. Мальчикам интересно, сколько кирпичей с номерами не меньше <span class="tex-span"><i>a</i></span> и не больше <span class="tex-span"><i>b</i></span> покрашены как красным, так и розовым. Это и есть Ваша задача: вычислите и выведите ответ на вопрос. </p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Во входных данных записана единственная строка, содержащая четыре целых числа в указанном порядке: <span class="tex-span"><i>x</i></span>, <span class="tex-span"><i>y</i></span>, <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>b</i></span> (<span class="tex-span">1 ≤ <i>x</i>, <i>y</i> ≤ 1000</span>, <span class="tex-span">1 ≤ <i>a</i>, <i>b</i> ≤ 2·10<sup class="upper-index">9</sup></span>, <span class="tex-span"><i>a</i> ≤ <i>b</i></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — количество кирпичей с номерами не меньше <span class="tex-span"><i>a</i></span> и не больше <span class="tex-span"><i>b</i></span>, покрашенных одновременно красным и розовым.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 3 6 18<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3</pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Давайте посмотрим на кирпичи от <span class="tex-span"><i>a</i></span> до <span class="tex-span"><i>b</i></span> <span class="tex-span">(<i>a</i> = 6, <i>b</i> = 18)</span>. Кирпичи, закрашенные красным, имеют номера: 6, 8, 10, 12, 14, 16, 18. Кирпичи, закрашенные розовым, имеют номера: 6, 9, 12, 15, 18. Кирпичи, закрашенные и красным и розовым, имеют номера: 6, 12 и 18. </p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Четырехугольник с максимальной площадью</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Яхуб нарисовал множество из <span class="tex-span"><i>n</i></span> точек на декартовой плоскости. Он назвал их «особыми точками». Четырехугольник — это многоугольник без самопересечений, имеющий четыре стороны (или ребра) и четыре вершины (или угла). Пожалуйста, обратите внимание, что четырехугольник может не быть выпуклым. Особый четырехугольник — это такой четырехугольник, в котором все четыре вершины принадлежат множеству особых точек. Вам дано множество особых точек. Пожалуйста, вычислите максимальную площадь особого четырехугольника. </p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">4 ≤ <i>n</i> ≤ 300</span>). В каждой из следующих <span class="tex-span"><i>n</i></span> строк записано по два целых числа: <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">( - 1000 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ 1000)</span> — декартовы координаты <span class="tex-span"><i>i</i></span>-той особой точки. Гарантируется, что никакие три точки не лежат на одной прямой. Гарантируется, что никакие две точки не совпадают.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное вещественное число — максимальную площадь особого четырехугольника. Ответ будет считаться правильным, если его относительная или абсолютная погрешность не превышает <span class="tex-span">10<sup class="upper-index"> - 9</sup></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br />0 0<br />0 4<br />4 0<br />4 4<br />2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>16.000000</pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В тестовом примере можно выбрать первые четыре точки и построить на них четырехугольник — квадрат со стороной <span class="tex-span">4</span>. Таким образом, площадь равняется <span class="tex-span">4·4 = 16</span>.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Про туриста</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Яхуб — ярый поклонник туристов. Он и сам хочет стать туристом и поэтому запланировал поездку. На прямой дороге расположены <span class="tex-span"><i>n</i></span> пунктов назначения, Яхуб хочет посетить их все. Он начинает экскурсию с километра номер 0. Яхубу известно как расположены пункты назначения на дороге. Он знает последовательность целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>a</i><sub class="lower-index">2</sub></span>, ..., <span class="tex-span"><i>a</i><sub class="lower-index"><i>n</i></sub></span>, в которой число <span class="tex-span"><i>a</i><sub class="lower-index"><i>k</i></sub></span> обозначает, что <span class="tex-span"><i>k</i></span>-тый пункт назначения находится на расстоянии <span class="tex-span"><i>a</i><sub class="lower-index"><i>k</i></sub></span> километров от точки начала экскурсии. Известно, что никакие два пункта не расположены в одном и том же месте. </p><p>Яхуб хочет посетить каждый пункт ровно один раз. Обратите внимание, что если Яхуб пересекает какой-то пункт назначения по дороге к другому пункту, это не считается посещением. То есть, если Яхуб двигается к какому-то пункту, чтобы посетить его, и по дороге встречает непосещенный пункт, такое событие не считается посещением пункта. Также, после того как Яхуб посетит свой последний пункт назначения, он не возвращается на километр 0, то есть в последнем пункте путешествие заканчивается. </p><p>Расстояние между пунктом, находящемся на километре <span class="tex-span"><i>x</i></span>, и следующим пунктом, находящемся на километре <span class="tex-span"><i>y</i></span>, считается равным <span class="tex-span">|<i>x</i> - <i>y</i>|</span> километров. «Путем» называется порядок прохождения пунктов назначения. Яхуб может посещать пункты в том порядке, в каком хочет, лишь бы он посетил все <span class="tex-span"><i>n</i></span> пунктов назначения и при этом не посетил никакой пункт более одного раза.</p><p>Яхуб начинает выписывать на бумаге все возможные пути. Для каждого пути он отмечает расстояние, которое надо будет пройти, если следовать этому пути. Яхуб хочет найти среднее количество километров в пути. Ему уже наскучило выписывать все пути, поэтому он просит Вас помочь ему.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>). В следующей строке записаны <span class="tex-span"><i>n</i></span> различных целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>a</i><sub class="lower-index">2</sub></span>, ..., <span class="tex-span"><i>a</i><sub class="lower-index"><i>n</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">7</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите два целых числа — числитель и знаменатель дроби, равной требуемому среднему значению. Дробь должна быть несократимая.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />2 3 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>22 3</pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Рассмотрим 6 возможных путей:</p><p><ul> <li> [2, 3, 5]: суммарное пройденное расстояние равно |2 – 0| + |3 – 2| + |5 – 3| = 5; </li><li> [2, 5, 3]: |2 – 0| + |5 – 2| + |3 – 5| = 7; </li><li> [3, 2, 5]: |3 – 0| + |2 – 3| + |5 – 2| = 7; </li><li> [3, 5, 2]: |3 – 0| + |5 – 3| + |2 – 5| = 8; </li><li> [5, 2, 3]: |5 – 0| + |2 – 5| + |3 – 2| = 9; </li><li> [5, 3, 2]: |5 – 0| + |3 – 5| + |2 – 3| = 8. </li></ul></p><p>Таким образом средняя длина пути в километрах <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/29119d3733c79f70eb2d77186ac1606bf938508a.png" /> = <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/ee9d5516ed2ca1d2b65ed21f8a64f58f94954c30.png" /> = <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/ed5cc8cb7dd43cfb27f2459586062538e44de7bd.png" />.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Граф сортировки пузырьком</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Яхуб недавно освоил сортировку пузырьком, алгоритм, с помощью которого можно отсортировать по возрастанию перестановку, состоящую из <span class="tex-span"><i>n</i></span> элементов, <span class="tex-span"><i>a</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>a</i><sub class="lower-index">2</sub></span>, ... <span class="tex-span"><i>a</i><sub class="lower-index"><i>n</i></sub></span>. Яхубу этот алгоритм показался очень скучным, поэтому он изобрел свой собственный граф. Этот граф (назовем его <span class="tex-span"><i>G</i></span>) изначально состоит из <span class="tex-span"><i>n</i></span> вершин и 0 ребер. При запуске сортировки пузырьком ребра добавляются в граф так, как показано в приведенном ниже алгоритме (псевдокод). </p><p><pre><br />procedure bubbleSortGraph()<br />    построить граф G с n вершинами и 0 ребрами<br />    repeat<br />        swapped = false<br />        for i = 1 to n - 1 (обе границы включительно) do:<br />            if a[i] &gt; a[i + 1] then<br />                добавить неориентированное ребро в G между вершинами a[i] и a[i + 1]<br />                swap( a[i], a[i + 1] ) /* поменять местами a[i] и a[i + 1] */<br />                swapped = true<br />            end if<br />        end for<br />    until not swapped <br />    /* повторять цикл пока перестановка не станет отсортированной */ <br />end procedure<br /></pre></p><p>Независимое множество в графе — это такое множество вершин в графе, в котором никакие две вершины не являются смежными (следовательно, между вершинами независимого множества нет ребер). Максимальное независимое множество — это такое независимое множество, у которого наибольшая мощность (размер). Вам дана перестановка, вычислите размер максимального независимого множества графа <span class="tex-span"><i>G</i></span>, если мы построим его процедурой bubbleSortGraph, передав в качестве перестановки <span class="tex-span"><i>a</i></span> заданную перестановку.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 100000</span>). В следующей строке записано <span class="tex-span"><i>n</i></span> различных целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>a</i><sub class="lower-index">2</sub></span>, ..., <span class="tex-span"><i>a</i><sub class="lower-index"><i>n</i></sub></span> <span class="tex-span">(1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>)</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите единственное целое число — ответ на задачу. </p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />3 1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Рассмотрим пример. Сортировка пузырьком поменяет элементы 3 и 1. В граф добавится ребро (1, 3). Теперь перестановка имеет вид [1, 3, 2]. Затем сортировка пузырьком поменяет элементы 3 и 2. В граф добавится ребро (2, 3). Теперь перестановка отсортирована. Построенный граф состоит из 3 вершин и 2 ребер: (1, 3) и (2, 3). Максимальное независимое множество в нем [1, 2].</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Яхуб и перестановки</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Яхуб так обрадовался изобретению графов сортировки пузырьком, что он целый день сидит в офисе и выписывает перестановки. Яхубина вся извелась — ведь теперь Яхубу нет до нее дела. И вот, стоило Яхубу выйти, Яхубина зашла к нему в офис, чтобы саботировать его научную работу — и месть ее страшна.</p><p>Девушка отыскала важную для исследования Яхуба перестановку. Перестановка состояла из <span class="tex-span"><i>n</i></span> различных целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>a</i><sub class="lower-index">2</sub></span>, ..., <span class="tex-span"><i>a</i><sub class="lower-index"><i>n</i></sub></span> <span class="tex-span">(1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>)</span>. Найдя перестановку, она сразу же заменила некоторые элементы перестановки числами -1. </p><p>Когда Яхуб вернулся, он обнаружил, что важная перестановка испорчена. Теперь Яхуб пытается ее восстановить. К сожалению, про изначальную перестановку он запомнил только то, что в перестановке не было ни одной неподвижной точки. Неподвижная точка перестановки — это такой элемент <span class="tex-span"><i>a</i><sub class="lower-index"><i>k</i></sub></span>, значение которого равняется <span class="tex-span"><i>k</i></span> <span class="tex-span">(<i>a</i><sub class="lower-index"><i>k</i></sub> = <i>k</i>)</span>. </p><p>Ваша задача — доказать Яхубу, что восстанавливать перестановку уже не стоит. Выведите количество перестановок, которые могут оказаться изначальной важной перестановкой Яхуба по модулю <span class="tex-span">1000000007</span> (<span class="tex-span">10<sup class="upper-index">9</sup> + 7</span>).</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 2000</span>). Во второй строке записано <span class="tex-span"><i>n</i></span> целых чисел, описывающих важную перестановку Яхуба, после того, как Яхубина заменила некоторые значения на -1. </p><p>Гарантируется, что в заданной перестановке нет неподвижных точек. Также, гарантируется, что в заданной последовательности как минимум две -1 (минус единицы) и что никакое положительное число не встречается в перестановке более одного раза. Гарантируется, что при заданных ограничениях, существует хотя бы одна подходящая перестановка.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — количество способов восстановления перестановки по модулю <span class="tex-span">1000000007</span> (<span class="tex-span">10<sup class="upper-index">9</sup> + 7</span>).</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br />-1 -1 4 3 -1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом тестовом примере две перестановки, не имеющие неподвижных точек: [2, 5, 4, 3, 1] и [5, 1, 4, 3, 2]. У всех остальных перестановок была бы по крайней мере одна неподвижная точка. </p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
