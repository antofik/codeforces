
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="f2f0afccacf47eg5had8caeb6gh42474"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="18veud348zs8a"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='f2f0afccacf47eg5had8caeb6gh42474'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Beta Round #88</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Лифт</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>3 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вот и закончились многочисленные отборочные турниры на одно из самых престижных соревнований России <span class="tex-font-style-it">Russian Codec Cup</span>. Все <span class="tex-span"><i>n</i></span> участников, прошедшие в финал соревнования, попали в огромный <span class="tex-span"><i>m</i></span>-этажный <span class="tex-span">10<sup class="upper-index">8</sup></span>- звездочный отель. Конечно же, первая мысль, приходящая в голову в таком месте: «А не покататься ли нам на лифте?».</p><p>Лифт в этом отеле перемещается между этажами всегда по одной и той же схеме. Изначально (в момент времени <span class="tex-span">0</span>) лифт находится на этаже <span class="tex-span">1</span>, далее он перемещается на этаж <span class="tex-span">2</span>, потом на этаж <span class="tex-span">3</span>, и так до этажа с номером <span class="tex-span"><i>m</i></span>. После этого лифт перемещается на этаж <span class="tex-span"><i>m</i> - 1</span>, далее на этаж <span class="tex-span"><i>m</i> - 2</span>, и так до первого этажа. Этот процесс бесконечно повторяется. Известно, что лифт имеет бесконечную вместимость, а также что посадка пассажиров на любом этаже осуществляется мгновенно. Перемещение между этажами происходит за единицу времени. </p><p>Для каждого из <span class="tex-span"><i>n</i></span> участников вам даны: <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> — на какой этаж приходит <span class="tex-span"><i>i</i></span>-ый участник, <span class="tex-span"><i>f</i><sub class="lower-index"><i>i</i></sub></span> — на какой этаж ему нужно попасть, <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span> — время, в которое <span class="tex-span"><i>i</i></span>-ый участник приходит на этаж <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span>.</p><p>Для каждого участника выведите минимальное время его прибытия на этаж <span class="tex-span"><i>f</i><sub class="lower-index"><i>i</i></sub></span>. </p><p>Если участник приходит на этаж ровно в тот момент, когда приезжает лифт, считается, что участник успевает зайти в лифт. Если участник приходит на этаж <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> и на этот же этаж ему нужно попасть (<span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub> = <i>f</i><sub class="lower-index"><i>i</i></sub></span>), то время прибытия этого участника на этаж <span class="tex-span"><i>f</i><sub class="lower-index"><i>i</i></sub></span> считается равным <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> через пробел (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup>, 2 ≤ <i>m</i> ≤ 10<sup class="upper-index">8</sup></span>). </p><p>В следующих <span class="tex-span"><i>n</i></span> строках дана информация об участниках. В каждой строке через пробел записано три целых числа: <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>f</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>s</i><sub class="lower-index"><i>i</i></sub>, <i>f</i><sub class="lower-index"><i>i</i></sub> ≤ <i>m</i>, 0 ≤ <i>t</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">8</sup></span>) — числа, описанные в условии задачи.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>n</i></span> строк по одному целому числу в каждой — для каждого участника время его прибытия на нужный этаж.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>7 4<br />2 4 3<br />1 2 0<br />2 2 0<br />1 2 1<br />4 3 5<br />1 2 2<br />4 2 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>9<br />1<br />0<br />7<br />10<br />7<br />5<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5 5<br />1 5 4<br />1 3 1<br />1 3 4<br />3 1 5<br />4 2 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>12<br />10<br />10<br />8<br />7<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Рассмотрим первый пример. Первый участник приходит ко времени <span class="tex-span"><i>t</i> = 3</span> на этаж <span class="tex-span"><i>s</i> = 2</span>. Чтобы добраться до этажа <span class="tex-span"><i>f</i> = 4</span>, ему придется подождать до момента времени <span class="tex-span">7</span>, когда лифт во второй раз будет ехать наверх, сесть в лифт и проехать два этажа. В таком случае первый участник доберется до этажа <span class="tex-span"><i>f</i></span> в момент времени <span class="tex-span">9</span>. Второй участник приходит ко времени <span class="tex-span"><i>t</i> = 0</span> на этаж <span class="tex-span"><i>s</i> = 1</span>, сразу же садится в лифт, и приезжает на этаж <span class="tex-span"><i>f</i> = 2</span>. Третий участник не ждет лифта, так как ему надо попасть на тот же этаж, на котором он начинает.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Очень занимательная игра</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В одной очень древней стране была популярна следующая игра. В игру играет два человека. Сначала первый игрок выписывает строку <span class="tex-span"><i>s</i><sub class="lower-index">1</sub></span>, состоящую ровно из девяти цифр и обозначающую число, не превосходящее <span class="tex-span"><i>a</i></span>. Потом второй игрок, видя <span class="tex-span"><i>s</i><sub class="lower-index">1</sub></span>, выписывает строку <span class="tex-span"><i>s</i><sub class="lower-index">2</sub></span>, состоящую ровно из девяти цифр и обозначающую число, не превосходящее <span class="tex-span"><i>b</i></span>. Здесь <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> — некоторые заданные константы, строки <span class="tex-span"><i>s</i><sub class="lower-index">1</sub></span> и <span class="tex-span"><i>s</i><sub class="lower-index">2</sub></span> игроки выбирают сами. Лидирующие нули в строках разрешаются.</p><p>Если число, задающееся конкатенацией (склейкой) строк <span class="tex-span"><i>s</i><sub class="lower-index">1</sub></span> и <span class="tex-span"><i>s</i><sub class="lower-index">2</sub></span>, делится на <span class="tex-span"><i>mod</i></span>, выигрывает второй игрок. Иначе — выигрывает первый игрок. Даны числа <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>b</i></span>, <span class="tex-span"><i>mod</i></span>. Требуется определить, кто выиграет при оптимальной игре обоих. Если выиграет первый игрок, также требуется найти лексикографически минимальный выигрышный ход.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке заданы три целых числа <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>b</i></span>, <span class="tex-span"><i>mod</i></span> (<span class="tex-span">0 ≤ <i>a</i>, <i>b</i> ≤ 10<sup class="upper-index">9</sup></span>, <span class="tex-span">1 ≤ <i>mod</i> ≤ 10<sup class="upper-index">7</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если выиграет первый игрок, выведите «<span class="tex-font-style-tt">1</span>» и лексикографически минимальную строку, которую ему нужно выписать, чтобы победить. Если выиграет второй игрок, выведите одно число «<span class="tex-font-style-tt">2</span>».</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>1 10 7<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 0 9<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1 000000001<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Лексикографическое сравнение строк реализует оператор &lt; в современных языках программирования. Строка <span class="tex-span"><i>x</i></span> лексикографически меньше строки <span class="tex-span"><i>y</i></span>, если существует такое <span class="tex-span"><i>i</i></span> (<span class="tex-span">1 ≤ <i>i</i> ≤ 9</span>), что <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub> &lt; <i>y</i><sub class="lower-index"><i>i</i></sub></span>, а для любого <span class="tex-span"><i>j</i></span> (<span class="tex-span">1 ≤ <i>j</i> &lt; <i>i</i></span>) <span class="tex-span"><i>x</i><sub class="lower-index"><i>j</i></sub> = <i>y</i><sub class="lower-index"><i>j</i></sub></span>. Сравниваемые строки всегда имеют длину 9.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Цикл</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2.5 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p><span class="tex-font-style-it">Турнир</span> — ориентированный граф без петель, в котором каждая пара вершин соединена ровно одним ребром. То есть для любых двух вершин <span class="tex-span"><i>u</i></span> и <span class="tex-span"><i>v</i></span> (<span class="tex-span"><i>u</i> ≠ <i>v</i></span>) либо есть ребро из <span class="tex-span"><i>u</i></span> в <span class="tex-span"><i>v</i></span>, либо есть ребро из <span class="tex-span"><i>v</i></span> в <span class="tex-span"><i>u</i></span>.</p><p>Дан турнир из <span class="tex-span"><i>n</i></span> вершин. Требуется найти в нем цикл длины три.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке задано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 5000</span>). В следующих <span class="tex-span"><i>n</i></span> строках задана матрица смежности графа <span class="tex-span"><i>A</i></span> (без пробелов). <span class="tex-span"><i>A</i><sub class="lower-index"><i>i</i>, <i>j</i></sub> = 1</span>, если в графе есть ребро из вершины <span class="tex-span"><i>i</i></span> в вершину <span class="tex-span"><i>j</i></span>, в противном случае <span class="tex-span"><i>A</i><sub class="lower-index"><i>i</i>, <i>j</i></sub> = 0</span>. <span class="tex-span"><i>A</i><sub class="lower-index"><i>i</i>, <i>j</i></sub></span> обозначает <span class="tex-span"><i>j</i></span>-ый символ в <span class="tex-span"><i>i</i></span>-ой строке.</p><p>Гарантируется, что заданный граф является турниром, то есть <span class="tex-span"><i>A</i><sub class="lower-index"><i>i</i>, <i>i</i></sub> = 0, <i>A</i><sub class="lower-index"><i>i</i>, <i>j</i></sub> ≠ <i>A</i><sub class="lower-index"><i>j</i>, <i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>i</i>, <i>j</i> ≤ <i>n</i>, <i>i</i> ≠ <i>j</i>)</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите три различные вершины графа <span class="tex-span"><i>a</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>a</i><sub class="lower-index">2</sub></span>, <span class="tex-span"><i>a</i><sub class="lower-index">3</sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>), такие что <span class="tex-span"><i>A</i><sub class="lower-index"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub></sub> = <i>A</i><sub class="lower-index"><i>a</i><sub class="lower-index">2</sub>, <i>a</i><sub class="lower-index">3</sub></sub> = <i>A</i><sub class="lower-index"><i>a</i><sub class="lower-index">3</sub>, <i>a</i><sub class="lower-index">1</sub></sub> = 1</span>, или «<span class="tex-font-style-tt">-1</span>», если цикла длины три не существует. </p><p>Если решений несколько, выведите любое.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br />00100<br />10000<br />01001<br />11101<br />11000<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1 3 2 </pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />01111<br />00000<br />01000<br />01100<br />01110<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Небыстрое преобразование</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>6 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Пусть <span class="tex-span"><i>a</i></span> — массив из <span class="tex-span"><i>n</i></span> чисел, элементы которого пронумерованы от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>even</i></span> — массив из чисел, номера которых в <span class="tex-span"><i>a</i></span> четные (<span class="tex-span"><i>even</i><sub class="lower-index"><i>i</i></sub> = <i>a</i><sub class="lower-index">2<i>i</i></sub></span>, <span class="tex-span">1 ≤ 2<i>i</i> ≤ <i>n</i></span>), <span class="tex-span"><i>odd</i></span> — массив из чисел, номера которых в <span class="tex-span"><i>а</i></span> нечетные (<span class="tex-span"><i>odd</i><sub class="lower-index"><i>i</i></sub> = <i>a</i><sub class="lower-index">2<i>i</i> - 1</sub></span>, <span class="tex-span">1 ≤ 2<i>i</i> - 1 ≤ <i>n</i></span>). Тогда определим преобразование массива <span class="tex-span"><i>F</i>(<i>a</i>)</span> следующим образом:</p><p><ul> <li> если <span class="tex-span"><i>n</i> &gt; 1</span>, <span class="tex-span"><i>F</i>(<i>a</i>) = <i>F</i>(<i>odd</i>) + <i>F</i>(<i>even</i>)</span>, где операция «<span class="tex-span"> + </span>» обозначает конкатенацию (склейку) массивов </li><li> если <span class="tex-span"><i>n</i> = 1</span>, <span class="tex-span"><i>F</i>(<i>a</i>) = <i>a</i></span> </li></ul></p><p>Выберем в качестве <span class="tex-span"><i>a</i></span> массив из <span class="tex-span"><i>n</i></span> чисел <span class="tex-span">1, 2, 3, ..., <i>n</i></span>. Тогда <span class="tex-span"><i>b</i></span> — результат применения преобразования к массиву <span class="tex-span"><i>a</i></span> (то есть <span class="tex-span"><i>b</i> = <i>F</i>(<i>a</i>)</span>). Вам дано <span class="tex-span"><i>m</i></span> запросов <span class="tex-span">(<i>l</i>, <i>r</i>, <i>u</i>, <i>v</i>)</span>. Ваша задача — для каждого запроса найти сумму чисел <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span>, таких что <span class="tex-span"><i>l</i> ≤ <i>i</i> ≤ <i>r</i></span> и <span class="tex-span"><i>u</i> ≤ <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ <i>v</i></span>. Ответы на запросы нужно выводить по модулю <span class="tex-span"><i>mod</i></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке заданы три целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span>, <span class="tex-span"><i>mod</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">18</sup>, 1 ≤ <i>m</i> ≤ 10<sup class="upper-index">5</sup>, 1 ≤ <i>mod</i> ≤ 10<sup class="upper-index">9</sup></span>). В следующих <span class="tex-span"><i>m</i></span> строках описываются запросы. Каждый запрос задан четырьмя целыми числами <span class="tex-span"><i>l</i></span>, <span class="tex-span"><i>r</i></span>, <span class="tex-span"><i>u</i></span>, <span class="tex-span"><i>v</i></span> (<span class="tex-span">1 ≤ <i>l</i> ≤ <i>r</i> ≤ <i>n</i></span>, <span class="tex-span">1 ≤ <i>u</i> ≤ <i>v</i> ≤ 10<sup class="upper-index">18</sup></span>).</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битовых чисел на С++. Используйте спецификатор <span class="tex-font-style-tt">%I64d</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>m</i></span> строк по одному целому числу в каждой — остатки от деления ответов на запросы на <span class="tex-span"><i>mod</i></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4 5 10000<br />2 3 4 5<br />2 4 1 3<br />1 2 2 4<br />2 3 3 5<br />1 3 3 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br />5<br />3<br />3<br />3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 5 10000<br />1 2 2 2<br />1 1 4 5<br />1 1 2 5<br />1 1 1 3<br />1 2 5 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />0<br />0<br />1<br />0<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Рассмотрим первый пример. Сначала построим массив <span class="tex-span"><i>b</i> = <i>F</i>(<i>a</i>) = <i>F</i>([1, 2, 3, 4])</span>. <ul> <li> Шаг 1. <span class="tex-span"><i>F</i>([1, 2, 3, 4]) = <i>F</i>([1, 3]) + <i>F</i>([2, 4])</span> </li><li> Шаг 2. <span class="tex-span"><i>F</i>([1, 3]) = <i>F</i>([1]) + <i>F</i>([3]) = [1] + [3] = [1, 3]</span> </li><li> Шаг 3. <span class="tex-span"><i>F</i>([2, 4]) = <i>F</i>([2]) + <i>F</i>([4]) = [2] + [4] = [2, 4]</span> </li><li> Шаг 4. <span class="tex-span"><i>b</i> = <i>F</i>([1, 2, 3, 4]) = <i>F</i>([1, 3]) + <i>F</i>([2, 4]) = [1, 3] + [2, 4] = [1, 3, 2, 4]</span> </li></ul> Итак <span class="tex-span"><i>b</i> = [1, 3, 2, 4]</span>. Рассмотрим первый запрос <span class="tex-span"><i>l</i> = 2, <i>r</i> = 3, <i>u</i> = 4, <i>v</i> = 5</span>. На второй и третьей позиции в массиве <span class="tex-span"><i>b</i></span> нет чисел в диапазоне <span class="tex-span">[4, 5]</span>, очевидно, что сумма ноль. Рассмотрим второй запрос <span class="tex-span"><i>l</i> = 2, <i>r</i> = 4, <i>u</i> = 1, <i>v</i> = 3</span>. Есть два числа на второй и третьей позиции, которые попадают в диапазон <span class="tex-span">[1, 3]</span>, их сумма 5.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Дерево или не дерево</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Дан неориентированный связный граф <span class="tex-span"><i>G</i></span> из <span class="tex-span"><i>n</i></span> вершин и <span class="tex-span"><i>n</i></span> ребер. <span class="tex-span"><i>G</i></span> не содержит петель и кратных ребер. Пусть у каждого ребра этого графа есть два состояния: включено и выключено. Изначально все ребра выключены. </p><p>Также вам даны <span class="tex-span"><i>m</i></span> запросов вида <span class="tex-span">(<i>v</i>, <i>u</i>)</span> — изменить состояние всех ребер на кратчайшем пути из вершины <span class="tex-span"><i>v</i></span> в вершину <span class="tex-span"><i>u</i></span> в графе <span class="tex-span"><i>G</i></span>, если таких путей несколько, выбирается лексикографически наименьший. Более формально, рассмотрим все кратчайшие пути из вершины <span class="tex-span"><i>v</i></span> в вершину <span class="tex-span"><i>u</i></span> как последовательности вершин <span class="tex-span"><i>v</i>, <i>v</i><sub class="lower-index">1</sub>, <i>v</i><sub class="lower-index">2</sub>, ..., <i>u</i></span>. Среди таких последовательностей выбирается лексикографически наименьшая.</p><p>Требуется после каждого запроса сказать, сколько компонент связности в графе, вершины которого совпадают с вершинами графа <span class="tex-span"><i>G</i></span>, а ребра совпадают с включенными ребрами графа <span class="tex-span"><i>G</i></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке задано два целых числа — <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">3 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>, <span class="tex-span">1 ≤ <i>m</i> ≤ 10<sup class="upper-index">5</sup></span>). Далее в <span class="tex-span"><i>n</i></span> строках заданы ребра графа в виде <span class="tex-span"><i>a</i></span> <span class="tex-span"><i>b</i></span> (<span class="tex-span">1 ≤ <i>a</i>, <i>b</i> ≤ <i>n</i></span>). В следующих <span class="tex-span"><i>m</i></span> строках заданы запросы в виде <span class="tex-span"><i>v</i></span> <span class="tex-span"><i>u</i></span> (<span class="tex-span">1 ≤ <i>v</i>, <i>u</i> ≤ <i>n</i></span>). </p><p>Гарантируется, что граф связный, а также не содержит петель и кратных ребер.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>m</i></span> строк по одному целому числу в каждой — ответы на запросы.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5 2<br />2 1<br />4 3<br />2 4<br />2 5<br />4 1<br />5 4<br />1 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>6 2<br />4 6<br />4 3<br />1 2<br />6 5<br />1 5<br />1 4<br />2 5<br />2 6<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br />3<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Рассмотрим первый пример. Будем синим выделять на рисунке включенные ребра. <ul></ul></p><p><li> </li></p><p>Граф до применения операций. В графе нет включенных ребер, поэтому 5 компонент связности есть изначально. <center> <img class="tex-graphics" src="http://codeforces.ru/renderer/073b70db78f95f45115a1de565dc6650911becf4.png" /> </center></p><p><li> </li></p><p>Граф после запроса <span class="tex-span"><i>v</i> = 5, <i>u</i> = 4</span>. Видно, что в графе 3 компоненты, если рассматривать только включенные ребра. <center> <img class="tex-graphics" src="http://codeforces.ru/renderer/655e2283de6e391864b4130288ef6c74157025e7.png" /> </center></p><p><li> </li></p><p>Граф после запроса <span class="tex-span"><i>v</i> = 1, <i>u</i> = 5</span>. Видно, что в графе 3 компоненты, если рассматривать только включенные ребра. <center> <img class="tex-graphics" src="http://codeforces.ru/renderer/54ab80c49cdcedc7e01309ade771e46b83924e5a.png" /> </center></p><p>Лексикографическое сравнение двух последовательностей одинаковой длины (<span class="tex-span"><i>k</i></span> чисел) происходит следующим образом. Последовательность <span class="tex-span"><i>x</i></span> лексикографически меньше последовательности <span class="tex-span"><i>y</i></span> если существует такое <span class="tex-span"><i>i</i></span> (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>k</i></span>), что <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub> &lt; <i>y</i><sub class="lower-index"><i>i</i></sub></span>, а для любого <span class="tex-span"><i>j</i></span> (<span class="tex-span">1 ≤ <i>j</i> &lt; <i>i</i></span>) <span class="tex-span"><i>x</i><sub class="lower-index"><i>j</i></sub> = <i>y</i><sub class="lower-index"><i>j</i></sub></span>.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
