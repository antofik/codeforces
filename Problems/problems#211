
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="15g63b0ebc98g04e1g302427a2e423ha"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="b1niveqsrg25"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='15g63b0ebc98g04e1g302427a2e423ha'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
            <div style="padding-top:1em;">
<a href="http://codeforces.ru/vkcup2012"><img src="http://stat.codeforces.ru/images/vkcup2012-2.png"/>
</a>
</div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">VK Cup 2012, &#1060;&#1080;&#1085;&#1072;&#1083;</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Приватизация</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Между Берляндией и Бирляндией существует развитая сеть авиарейсов. Все они являются собственностью берляндской государственной компании БерАвиа. Каждый рейс соединяет некоторый город Берляндии с некоторым городом Бирляндии. По каждому рейсу самолеты летают в обоих направлениях.</p><p>В Берляндии грядут перемены — принято решение приватизировать БерАвиа, а именно распродать все авиарейсы <span class="tex-span"><i>t</i></span> частным авиакомпаниям. Каждая из этих компаний хочет заполучить максимальное количество авиарейсов, поэтому в случае неравномерной продажи авиарейсов компаниям Берляндия может быть обвинена в пристрастности. Решено распродать авиарейсы как можно более равномерно между <span class="tex-span"><i>t</i></span> компаниями.</p><p>Неравномерность способа распределения рейсов по компаниям считается так. Для каждого города <span class="tex-span"><i>i</i></span> (как Берляндии, так и Бирляндии) посчитаем величину <center class="tex-equation"><img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/b4427f82004dc8971736e076c8f4688d6a4d4740.png" /></center> где <span class="tex-span"><i>a</i><sub class="lower-index"><i>ij</i></sub></span> — это количество рейсов из города <span class="tex-span"><i>i</i></span>, которые принадлежат компании <span class="tex-span"><i>j</i></span>. Сумма <span class="tex-span"><i>w</i><sub class="lower-index"><i>i</i></sub></span> по всем городам в обеих странах называется неравномерностью способа. Способ с наименьшей неравномерностью — наиболее равномерный.</p><p>Помогите правительству Берляндии придумать план наиболее равномерного способа продажи авиарейсов.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записано четыре целых числа <span class="tex-span"><i>n</i>, <i>m</i>, <i>k</i></span> и <span class="tex-span"><i>t</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i>, <i>t</i> ≤ 200;1 ≤ <i>k</i> ≤ 5000</span>), где <span class="tex-span"><i>n</i>, <i>m</i></span> — количество городов в Берляндии и Бирляндии, соответственно, <span class="tex-span"><i>k</i></span> — количество авиарейсов между ними, а <span class="tex-span"><i>t</i></span> — количество частных компаний. Далее в <span class="tex-span"><i>k</i></span> строках описаны авиарейсы по одному в строке парами натуральных чисел <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>;1 ≤ <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ <i>m</i></span>), где <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> — номера городов в Берляндии и Бирляндии, соответственно, которые соединены <span class="tex-span"><i>i</i></span>-ым рейсом. Между любой парой городов не более одного рейса, каждый рейс соединяет города разных стран. Города в Берляндии пронумерованы от 1 до <span class="tex-span"><i>n</i></span>, а в Бирляндии — от 1 до <span class="tex-span"><i>m</i></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первую строку выведите неравномерность искомого способа. Во вторую строку выведите последовательность <span class="tex-span"><i>k</i></span> целых чисел <span class="tex-span"><i>c</i><sub class="lower-index">1</sub>, <i>c</i><sub class="lower-index">2</sub>, ..., <i>c</i><sub class="lower-index"><i>k</i></sub></span> (<span class="tex-span">1 ≤ <i>c</i><sub class="lower-index"><i>i</i></sub> ≤ <i>t</i></span>), где <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> — номер авиакомпании, которой следует продать <span class="tex-span"><i>i</i></span>-ый авиарейс. Считайте, что авиарейсы пронумерованы от 1 до <span class="tex-span"><i>k</i></span> в порядке появления во входных данных. Если решений несколько, выведите любое из них.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 5 8 2<br />1 4<br />1 3<br />3 3<br />1 2<br />1 1<br />2 1<br />1 5<br />2 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br />2 1 2 1 2 1 2 2 </pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Поликарп ищет хорошие подстроки</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>4 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Строку <span class="tex-span"><i>s</i>[<i>a</i>, <i>b</i>] = <i>s</i><sub class="lower-index"><i>a</i></sub><i>s</i><sub class="lower-index"><i>a</i> + 1</sub>... <i>s</i><sub class="lower-index"><i>b</i></sub></span> <span class="tex-span">(1 ≤ <i>a</i> ≤ <i>b</i> ≤ |<i>s</i>|)</span> назовем <span class="tex-font-style-it">подстрокой</span> строки <span class="tex-span"><i>s</i> = <i>s</i><sub class="lower-index">1</sub><i>s</i><sub class="lower-index">2</sub>... <i>s</i><sub class="lower-index">|<i>s</i>|</sub></span>, где <span class="tex-span">|<i>s</i>|</span> — длина строки <span class="tex-span"><i>s</i></span>.</p><p><span class="tex-font-style-it">Следом</span> непустой строки <span class="tex-span"><i>t</i></span> называется множество символов, из которых она состоит. Например, след строки «<span class="tex-font-style-tt">aab</span>» равен {'<span class="tex-font-style-tt">a</span>', '<span class="tex-font-style-tt">b</span>'}.</p><p>Для заданного непустого множества символов <span class="tex-span"><i>C</i></span> можно рассмотреть все максимальные по включению подстроки строки <span class="tex-span"><i>s</i></span>, след которых равен <span class="tex-span"><i>C</i></span>. Количество таких подстрок <span class="tex-span"><i>s</i></span> для множества <span class="tex-span"><i>C</i></span> будем называть <span class="tex-span"><i>r</i>(<i>C</i>, <i>s</i>)</span>. Подстрока <span class="tex-span"><i>s</i>[<i>a</i>, <i>b</i>]</span> длины <span class="tex-span"><i>n</i> = <i>b</i> - <i>a</i> + 1</span> называется максимальной по включению, если не существует удовлетворяющей заданному свойству подстроки <span class="tex-span"><i>s</i>[<i>x</i>, <i>y</i>]</span> длины большей <span class="tex-span"><i>n</i></span>, такой что <span class="tex-span">1 ≤ <i>x</i> ≤ <i>a</i> ≤ <i>b</i> ≤ <i>y</i> ≤ |<i>s</i>|</span>. Две подстроки строки <span class="tex-span"><i>s</i></span> считаются различными, даже если они совпадают, но начинаются в различных позициях строки <span class="tex-span"><i>s</i></span>.</p><p>На экзамене по строковедению, Поликарпу достался не самый простой билет. Ему нужно выполнить следующее практическое задание: даны строка <span class="tex-span"><i>s</i></span> и непустые множества символов <span class="tex-span"><i>C</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>C</i><sub class="lower-index">2</sub></span>, <span class="tex-span">...</span>, <span class="tex-span"><i>C</i><sub class="lower-index"><i>m</i></sub></span>, для каждого множества <span class="tex-span"><i>C</i><sub class="lower-index"><i>i</i></sub></span> надо найти <span class="tex-span"><i>r</i>(<i>C</i><sub class="lower-index"><i>i</i></sub>, <i>s</i>)</span>. Помогите Поликарпу решить задачу, он так не хочет в армию!</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записана непустая строка <span class="tex-span"><i>s</i></span> <span class="tex-span">(1 ≤ |<i>s</i>| ≤ 10<sup class="upper-index">6</sup>)</span>.</p><p>Во второй строке записано единственное целое число <span class="tex-span"><i>m</i></span> <span class="tex-span">(1 ≤ <i>m</i> ≤ 10<sup class="upper-index">4</sup>)</span>. В следующих <span class="tex-span"><i>m</i></span> строках записаны описания множеств <span class="tex-span"><i>C</i><sub class="lower-index"><i>i</i></sub></span>. В <span class="tex-span"><i>i</i></span>-й строке записана строка <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span>, след которой равен <span class="tex-span"><i>C</i><sub class="lower-index"><i>i</i></sub></span>. Гарантируется, что все символы строки <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> различны.</p><p>Обратите внимание, что <span class="tex-span"><i>C</i><sub class="lower-index"><i>i</i></sub></span> не обязательно различны. Все заданные строки состоят из строчных букв латинского алфавита.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>m</i></span> целых чисел — <span class="tex-span"><i>i</i></span>-е число должно быть равно <span class="tex-span"><i>r</i>(<i>C</i><sub class="lower-index"><i>i</i></sub>, <i>s</i>)</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>aaaaa<br />2<br />a<br />a<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br />1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>abacaba<br />3<br />ac<br />ba<br />a<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br />2<br />4<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Ковбои</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Очень напряженный момент: <span class="tex-span"><i>n</i></span> ковбоев стоят по кругу, и каждый направил свой кольт на соседа. Каждый ковбой может направить кольт либо на следующего за ним по часовой стрелке, либо на предыдущего ковбоя. Как и положено в настоящем вестерне — человеческая жизнь не имеет никакой ценности.</p><p>Картина меняется ежесекундно! Каждую секунду ковбои оценивают ситуацию, и, если пара ковбоев понимает, что они целятся друг в друга, то они разворачиваются. За одну секунду разворачиваются все такие пары соседних ковбоев, в которых ковбои целятся друг в друга. Все действия во время каждой секунды происходят мгновенно и одновременно.</p><p>Обозначим символом «<span class="tex-font-style-tt">A</span>» ковбоя, который целится в своего соседа по часовой стрелке, а символом «<span class="tex-font-style-tt">B</span>» — ковбоя, который целится в своего соседа против часовой стрелки. Тогда строка из букв «<span class="tex-font-style-tt">A</span>» и «<span class="tex-font-style-tt">B</span>» будет обозначать круг ковбоев, запись производится от первого из них по часовой стрелке.</p><p>Например, через одну секунду круг вида «<span class="tex-font-style-tt">ABBBABBBA</span>» примет вид «<span class="tex-font-style-tt">BABBBABBA</span>», а круг вида «<span class="tex-font-style-tt">BABBA</span>» примет вид «<span class="tex-font-style-tt">ABABB</span>».</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/67abbbf653ad6b5eacce7383d8513ea9f633ff0c.png" />   <span class="tex-font-size-script"> Картинка иллюстрирует, как круг «<span class="tex-font-style-tt">BABBA</span>» преобразуется в «<span class="tex-font-style-tt">ABABB</span>» </span> </center></p><p>Прошла секунда, и теперь состояние ковбоев описывается строкой <span class="tex-span"><i>s</i></span>. Ваша задача — определить количество различных состояний, которые через секунду приводят к <span class="tex-span"><i>s</i></span>. Два состояния считаются различными, если существует ковбой, который в одном состоянии целится в своего соседа по часовой стрелке, а в другом — в своего соседа против часовой стрелки.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Входные данные состоят из единственной строки <span class="tex-span"><i>s</i></span>. Ее длина от 3 до 100 символов, включительно. Строка <span class="tex-span"><i>s</i></span> состоит из букв «<span class="tex-font-style-tt">A</span>» и «<span class="tex-font-style-tt">B</span>».</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите искомое количество состояний.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>BABBBABBA<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>ABABB<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>ABABAB<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере возможные исходные состояния: «<span class="tex-font-style-tt">ABBBABBAB</span>» и «<span class="tex-font-style-tt">ABBBABBBA</span>».</p><p>Во втором примере возможные исходные состояния: «<span class="tex-font-style-tt">AABBB</span>» и «<span class="tex-font-style-tt">BABBA</span>».</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Вырезание забора</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>8 секунд</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Усадьба плотника Васи отгорожена от леса забором, который состоит из <span class="tex-span"><i>n</i></span> выстроенных в ряд досок. Забор не замкнут. Доски пронумерованы слева направо от 1 до <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>i</i></span>-ая доска имеет высоту <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>. Все доски имеют одинаковую ширину, нижний край каждой доски расположен на уровне земли.</p><p>Недавно в местной газете «Малевич и жизнь» написали, что самый модный способ украсить свой забор летом — это нарисовать на нем прямоугольник цвета фуксия, нижняя сторона которого расположена на нижней границе забора.</p><p>Вася в восторге от этой идеи! Он немедленно купил краску цвета фуксия и принялся решать, какой именно прямоугольник ему закрасить. Вася точно решил, что закрашенный прямоугольник должен охватывать <span class="tex-span"><i>k</i></span> последовательных досок. Другими словами, будут окрашены доски с номерами <span class="tex-span"><i>x</i></span>, <span class="tex-span"><i>x</i> + 1</span>, <span class="tex-span">...</span>, <span class="tex-span"><i>x</i> + <i>k</i> - 1</span> для некоторого <span class="tex-span"><i>x</i></span> <span class="tex-span">(1 ≤ <i>x</i> ≤ <i>n</i> - <i>k</i> + 1)</span>. Он хочет закрасить прямоугольник максимальной площади, поэтому высота прямоугольника будет равна <span class="tex-span"><i>min</i> <i>a</i><sub class="lower-index"><i>i</i></sub></span> для <span class="tex-span"><i>x</i> ≤ <i>i</i> ≤ <i>x</i> + <i>k</i> - 1</span>, <span class="tex-span"><i>x</i></span> — номер первой окрашенной доски.</p><p>Вася уже определился, что ширина прямоугольника может быть равна одному из чисел последовательности <span class="tex-span"><i>k</i><sub class="lower-index">1</sub>, <i>k</i><sub class="lower-index">2</sub>, ..., <i>k</i><sub class="lower-index"><i>m</i></sub></span>. Для каждого <span class="tex-span"><i>k</i><sub class="lower-index"><i>i</i></sub></span> он хочет знать математическое ожидание высоты закрашенного прямоугольника, если <span class="tex-span"><i>x</i></span> для такого забора он выбирает «методом ненаучного тыка» — равновероятно случайно среди всех <span class="tex-span"><i>n</i> - <i>k</i><sub class="lower-index"><i>i</i></sub> + 1</span> возможных его значений. Помогите ему найти искомые ожидаемые высоты.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано единственное целое число <span class="tex-span"><i>n</i></span> <span class="tex-span">(1 ≤ <i>n</i> ≤ 10<sup class="upper-index">6</sup>)</span> — количество досок в заборе. Вторая строка содержит последовательность целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>), <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> — высота <span class="tex-span"><i>i</i></span>-й доски забора.</p><p>В третьей строке записано целое число <span class="tex-span"><i>m</i></span> <span class="tex-span">(1 ≤ <i>m</i> ≤ 10<sup class="upper-index">6</sup>)</span>, а в следующей строке через пробел записаны <span class="tex-span"><i>m</i></span> целых чисел <span class="tex-span"><i>k</i><sub class="lower-index">1</sub>, <i>k</i><sub class="lower-index">2</sub>, ..., <i>k</i><sub class="lower-index"><i>m</i></sub></span> <span class="tex-span">(1 ≤ <i>k</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>)</span>, <span class="tex-span"><i>k</i><sub class="lower-index"><i>i</i></sub></span> — ширина желаемого прямоугольника цвета фуксия в досках.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>m</i></span> вещественных чисел, разделенные пробельными символами, <span class="tex-span"><i>i</i></span>-е число равно математическому ожиданию высоты прямоугольника, если его ширина в досках равна <span class="tex-span"><i>k</i><sub class="lower-index"><i>i</i></sub></span>. Значение будет считаться правильным, если его абсолютная или относительная погрешность не превосходит <span class="tex-span">10<sup class="upper-index"> - 9</sup></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />3 2 1<br />3<br />1 2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2.000000000000000<br />1.500000000000000<br />1.000000000000000<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2<br />1 1<br />3<br />1 2 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1.000000000000000<br />1.000000000000000<br />1.000000000000000<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Рассмотрим первый тестовый пример. <ul> <li> <span class="tex-span"><i>k</i><sub class="lower-index">1</sub> = 1</span>. Всего есть три возможных положения забора. Для первого <span class="tex-span">(<i>x</i> = 1)</span> высота забора равна 3, для второго <span class="tex-span">(<i>x</i> = 2)</span> — 2, для третьего <span class="tex-span">(<i>x</i> = 3)</span> — 1. Так как положение забора выбирается равновероятно случайно, ожидаемая высота забора равна <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/0ed28200fa09ec6d42acd5ca3000c84f76b97429.png" />; </li><li> <span class="tex-span"><i>k</i><sub class="lower-index">2</sub> = 2</span>. Всего есть два возможных положения забора. Для первого <span class="tex-span">(<i>x</i> = 1)</span> высота забора равна 2, для второго <span class="tex-span">(<i>x</i> = 2)</span> — 1. Ожидаемая высота забора равна <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/3b5954017d5a606755151a3722724884260d7e16.png" />; </li><li> <span class="tex-span"><i>k</i><sub class="lower-index">3</sub> = 3</span>. Есть всего одно возможное положение забора. Ожидаемая высота забора равна 1. </li></ul></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. ИТ-рестораны</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>4 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В городе N. очень плохо с дорогами, общепитом и IT-инфраструктурой. Всего в городе <span class="tex-span"><i>n</i></span> перекрестков, некоторые пары которых соединены двусторонними дорогами. Дорожная сеть состоит из <span class="tex-span"><i>n</i> - 1</span> дороги, по дорогам можно добраться с любого перекрестка на любой другой. Да, вы правы — дорожная сеть образует неориентированное дерево.</p><p>Недавно мэр города придумал способ, устраняющий проблемы с общепитом и IT-инфраструктурой, причем одновременно! Решено поставить на перекрестках города ресторанчики двух известных сетей кафе для IT-шников: «iMac D0naldz» и «Burger Bing». Так как владельцы сетей не дружат, категорически запрещается размещать рестораны двух разных сетей на соседних перекрестках. Есть и другие требования. Вот полный список:</p><p><ul> <li> в каждом перекрестке должен находится не более чем один ресторан; </li><li> каждый ресторан принадлежит либо «iMac D0naldz», либо «Burger Bing»; </li><li> каждая сеть должна построить не менее одного ресторана; </li><li> не существует пары перекрестков, которые соединены дорогой и на которых стоят рестораны разных сетей. </li></ul></p><p>Мэр собирается брать неплохой налог с каждого ресторана, поэтому он заинтересован в том, чтобы общее число ресторанов было максимальным.</p><p>Помогите мэру проанализировать ситуацию. Найдите все такие пары <span class="tex-span">(<i>a</i>, <i>b</i>)</span>, что <span class="tex-span"><i>a</i></span> ресторанов может принадлежать «iMac D0naldz», <span class="tex-span"><i>b</i></span> — «Burger Bing», а сумма <span class="tex-span"><i>a</i> + <i>b</i></span> максимальна.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных содержится целое число <span class="tex-span"><i>n</i></span> <span class="tex-span">(3 ≤ <i>n</i> ≤ 5000)</span> — количество перекрестков в городе. Далее в <span class="tex-span"><i>n</i> - 1</span> строке перечислены все дороги, по одной дороге в строке. Каждая дорога задана парой чисел <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>)</span> — номерами соединяемых перекрестков. Считайте, что перекрестки пронумерованы от 1 до <span class="tex-span"><i>n</i></span>.</p><p>Гарантируется, что заданная дорожная сеть представляет собой неориентированное дерево с <span class="tex-span"><i>n</i></span> вершинами.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первую строку выведите целое число <span class="tex-span"><i>z</i></span> — количество искомых пар. Далее выведите все искомые пары <span class="tex-span">(<i>a</i>, <i>b</i>)</span> в порядке увеличения первой компоненты <span class="tex-span"><i>a</i></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br />1 2<br />2 3<br />3 4<br />4 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />1 3<br />2 2<br />3 1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>10<br />1 2<br />2 3<br />3 4<br />5 6<br />6 7<br />7 4<br />8 9<br />9 10<br />10 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6<br />1 8<br />2 7<br />3 6<br />6 3<br />7 2<br />8 1<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>На иллюстрации изображены ответы к первому тестовому примеру. Красным отмечены перекрестки с ресторанами «iMac D0naldz», синим — с ресторанами «Burger Bing».</p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/2d0b643c6e38a7266aa8c30786c99c6059dacf56.png" /></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
