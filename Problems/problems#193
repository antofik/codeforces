
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="a62becf37933cf6fdh97417e7ch1a974"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="4wwagc4l86m9"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='a62becf37933cf6fdh97417e7ch1a974'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Round #122 (Div. 1)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Разрезание фигуры</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Дан лист клетчатой бумаги <span class="tex-span"><i>n</i> × <i>m</i></span>. Некоторые его клетки закрашены. Множество всех закрашенных клеток листа бумаги обозначим через <span class="tex-span"><i>A</i></span>. Множество <span class="tex-span"><i>A</i></span> является связным. Требуется найти минимальное количество клеток, которые можно удалить из множества <span class="tex-span"><i>A</i></span> так, чтобы оно перестало быть связным.</p><p>Множество закрашенных клеток называется <span class="tex-font-style-it">связным</span>, если для каждых двух клеток из этого множества <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> найдется последовательность клеток множества, начинающаяся в <span class="tex-span"><i>a</i></span> и заканчивающаяся в <span class="tex-span"><i>b</i></span>, такая, что любая клетка этой последовательности, исключая последнюю, имеет общую сторону со следующей в последовательности клеткой. Пустое множество и множество, состоящее из одной клетки, по определению считаются связными.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла записаны через пробел два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 50</span>) — размеры листа бумаги. </p><p>В следующих <span class="tex-span"><i>n</i></span> строках содержится по <span class="tex-span"><i>m</i></span> символов — описание листа бумаги: <span class="tex-span"><i>j</i></span>-й символ <span class="tex-span"><i>i</i></span>-й строки равен «#», если соответствующая клетка закрашена (принадлежит множеству <span class="tex-span"><i>A</i></span>), или равен «.», если соответствующая клетка не закрашена (не принадлежит множеству <span class="tex-span"><i>A</i></span>). Гарантируется, что множество всех закрашенных клеток <span class="tex-span"><i>A</i></span> связно и не пусто.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>На первой строке выведите минимальное количество клеток, которые нужно удалить, чтобы лишить множество <span class="tex-span"><i>A</i></span> связности или -1, если это невозможно. </p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5 4<br />####<br />#..#<br />#..#<br />#..#<br />####<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5 5<br />#####<br />#...#<br />#####<br />#...#<br />#####<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере можно удалить любые две клетки, не имеющие общей стороны и множество закрашенных клеток потеряет связность.</p><p>Пояснение ко второму примеру изображено на рисунке. Слева изображено изначальное множество клеток. Справа — множество с удаленными клетками. Удаленные клетки помечены крестиками. <center> <img class="tex-graphics" src="http://codeforces.ru/renderer/94798a776a2fd3188ea0b281a4ebe2d42771fc43.png" /> </center></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Xor</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>4 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>У Джона Доу есть четыре массива <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>b</i></span>, <span class="tex-span"><i>k</i></span> и <span class="tex-span"><i>p</i></span>. Каждый из них состоит из <span class="tex-span"><i>n</i></span> целых чисел. Элементы всех массивов индексируются начиная c <span class="tex-span">1</span>. Массив <span class="tex-span"><i>p</i></span> является перестановкой целых чисел от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>.</p><p>Джон придумал игру для себя и своих друзей. Изначально игроку предлагается массив <span class="tex-span"><i>a</i></span>. Игрок должен последовательно выполнить ровно <span class="tex-span"><i>u</i></span> операций над <span class="tex-span"><i>a</i></span>. Разрешается выполнять следующие операции:</p><p><ul> <li> Операция 1: Для каждого <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/71d27c8a997496ba958994239acaa8e1e4573b36.png" /> изменить <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> на <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/1c9c42af2174608e65df454e248fb1a2d68be4f1.png" />. Выражение <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/b364f2e04c665b78b924ec10666327a4ef4635bc.png" /> обозначает применение операции побитового исключающего или к числам <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span>. Данная операция есть во всех современных языках программирования, например, в языке <span class="tex-font-style-it">C++</span> и <span class="tex-font-style-it">Java</span> она обозначается «^», в <span class="tex-font-style-it">Pascal</span> — «xor». </li><li> Операция 2: Для каждого <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/71d27c8a997496ba958994239acaa8e1e4573b36.png" /> изменить <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> на <span class="tex-span"><i>a</i><sub class="lower-index"><i>p</i><sub class="lower-index"><i>i</i></sub></sub> + <i>r</i></span>. При выполнении этой операции все изменения происходят одновременно. </li></ul></p><p>После применения всех <span class="tex-span"><i>u</i></span> операций, количество очков, которые получает игрок, определяется по формуле <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/12fe8e063991fbe8d88a736a98a7c37de4febecf.png" />. </p><p>Джон хочет узнать какое максимальное количество очков можно набрать в его игре. Помогите ему.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны разделенные пробелом целые числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>u</i></span> и <span class="tex-span"><i>r</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>u</i> ≤ 30</span>, <span class="tex-span">0 ≤ <i>r</i> ≤ 100</span>) — количество элементов в каждом массиве, количество операций и число, описывающее одну из операций. </p><p>В следующих четырех строках через пробел записаны по <span class="tex-span"><i>n</i></span> целых чисел — массивы <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>b</i></span>, <span class="tex-span"><i>k</i></span>, <span class="tex-span"><i>p</i></span>. В первой строке — массив <span class="tex-span"><i>a</i></span>, во второй — массив <span class="tex-span"><i>b</i></span>, в третьей — <span class="tex-span"><i>k</i></span> и в четвертой — <span class="tex-span"><i>p</i></span>. </p><p>Гарантируется, что элементы массивов <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> положительны и не превышают <span class="tex-span">10<sup class="upper-index">4</sup></span> <span class="tex-span">(1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">4</sup>)</span>, элементы массива <span class="tex-span"><i>k</i></span> не превышают <span class="tex-span">10<sup class="upper-index">4</sup></span> по модулю <span class="tex-span">(|<i>k</i><sub class="lower-index"><i>i</i></sub>| ≤ 10<sup class="upper-index">4</sup>)</span> и <span class="tex-span"><i>p</i></span> является перестановкой чисел от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите в единственной строке число <span class="tex-span"><i>s</i></span> — максимальное количество очков, которое можно получить в игре Джона.</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битовых чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> или спецификатор <span class="tex-font-style-tt">%I64d</span>. </p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 2 1<br />7 7 7<br />8 8 8<br />1 2 3<br />1 3 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>96<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 1 0<br />1 1<br />1 1<br />1 -1<br />1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере нужно применить сначала операцию первого типа, а затем операцию второго типа.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Расстояние Хемминга</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p><span class="tex-font-style-it">Расстоянием Хемминга</span> между строками <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> равной длины называется число <span class="tex-span"><i>h</i>(<i>a</i>, <i>b</i>)</span> равное количеству различных целых <span class="tex-span"><i>i</i></span> <span class="tex-span">(1 ≤ <i>i</i> ≤ |<i>a</i>|)</span> таких, что <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub> ≠ <i>b</i><sub class="lower-index"><i>i</i></sub></span>, где <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> — <span class="tex-span"><i>i</i></span>-й символ строки <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> — <span class="tex-span"><i>i</i></span>-й символ строки <span class="tex-span"><i>b</i></span>. К примеру, расстояние Хемминга между строками «<span class="tex-font-style-tt">aba</span>» и «<span class="tex-font-style-tt">bba</span>» равно <span class="tex-span">1</span>, в них различаются первые символы. Для строк «<span class="tex-font-style-tt">bbba</span>» и «<span class="tex-font-style-tt">aaab</span>» расстояние Хемминга равно <span class="tex-span">4</span>.</p><p>У Джона Доу были записаны на бумажке четыре строки <span class="tex-span"><i>s</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>s</i><sub class="lower-index">2</sub></span>, <span class="tex-span"><i>s</i><sub class="lower-index">3</sub></span> и <span class="tex-span"><i>s</i><sub class="lower-index">4</sub></span> равной длины. Каждая строка <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> состояла только из строчных букв «<span class="tex-font-style-tt">a</span>» и «<span class="tex-font-style-tt">b</span>». Джон нашел расстояния Хемминга между всеми парами имеющихся строк, после чего он потерял бумажку со строками. Расстояния Хемминга между всеми парами у него сохранились.</p><p>Помогите Джону восстановить строки; найдите какие-нибудь четыре строки <span class="tex-span"><i>s</i>'<sub class="lower-index">1</sub></span>, <span class="tex-span"><i>s</i>'<sub class="lower-index">2</sub></span>, <span class="tex-span"><i>s</i>'<sub class="lower-index">3</sub>, <i>s</i>'<sub class="lower-index">4</sub></span> равной длины, состоящие только из строчных букв «<span class="tex-font-style-tt">a</span>» и «<span class="tex-font-style-tt">b</span>», такие, что попарные расстояния Хемминга между ними такие же, как и у строк Джона. Более формально, набор <span class="tex-span"><i>s</i>'<sub class="lower-index"><i>i</i></sub></span> должен удовлетворять условию <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/c4229770f30b6c0798b505843e2db014514a7205.png" />. </p><p>Чтобы строки было легче записать на бумажке, требуется из всех подходящих наборов строк выбрать набор, состоящий из строк <span class="tex-font-style-bf">минимальной длины</span>. </p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке через пробел записаны целые числа <span class="tex-span"><i>h</i>(<i>s</i><sub class="lower-index">1</sub>, <i>s</i><sub class="lower-index">2</sub>)</span>, <span class="tex-span"><i>h</i>(<i>s</i><sub class="lower-index">1</sub>, <i>s</i><sub class="lower-index">3</sub>)</span>, <span class="tex-span"><i>h</i>(<i>s</i><sub class="lower-index">1</sub>, <i>s</i><sub class="lower-index">4</sub>)</span>. Во второй строке через пробел записаны целые числа <span class="tex-span"><i>h</i>(<i>s</i><sub class="lower-index">2</sub>, <i>s</i><sub class="lower-index">3</sub>)</span> и <span class="tex-span"><i>h</i>(<i>s</i><sub class="lower-index">2</sub>, <i>s</i><sub class="lower-index">4</sub>)</span>. В третьей строке записано единственное целое число <span class="tex-span"><i>h</i>(<i>s</i><sub class="lower-index">3</sub>, <i>s</i><sub class="lower-index">4</sub>)</span>.</p><p>Все заданные целые числа <span class="tex-span"><i>h</i>(<i>s</i><sub class="lower-index"><i>i</i></sub>, <i>s</i><sub class="lower-index"><i>j</i></sub>)</span> неотрицательные и не превосходят <span class="tex-span">10<sup class="upper-index">5</sup></span>. Гарантируется, что хотя бы одно из чисел <span class="tex-span"><i>h</i>(<i>s</i><sub class="lower-index"><i>i</i></sub>, <i>s</i><sub class="lower-index"><i>j</i></sub>)</span> положительно.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите -1, если подходящего набора строк не существует. </p><p>В противном случае выведите в первой строке число <span class="tex-span"><i>len</i></span> — длину каждой из строк. В <span class="tex-span"><i>i</i></span>-й из следующих четырех строк выведите строку <span class="tex-span"><i>s</i>'<sub class="lower-index"><i>i</i></sub></span>. Если возможных наборов с минимальной длиной строк несколько — выведите любой из них. </p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4 4 4<br />4 4<br />4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6<br />aaaabb<br />aabbaa<br />bbaaaa<br />bbbbbb<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Два отрезка</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>У Николая есть некоторая перестановка <span class="tex-span"><i>p</i></span> целых чисел от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>. Отрезком <span class="tex-span">[<i>l</i>, <i>r</i>]</span> (<span class="tex-span"><i>l</i> ≤ <i>r</i></span>) называется множество элементов перестановки <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i></sub></span> таких, что <span class="tex-span"><i>l</i> ≤ <i>i</i> ≤ <i>r</i></span>.</p><p>Пару отрезков <span class="tex-span">[<i>a</i><sub class="lower-index">0</sub>, <i>a</i><sub class="lower-index">1</sub>]</span> и <span class="tex-span">[<i>b</i><sub class="lower-index">0</sub>, <i>b</i><sub class="lower-index">1</sub>]</span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index">0</sub> ≤ <i>a</i><sub class="lower-index">1</sub> &lt; <i>b</i><sub class="lower-index">0</sub> ≤ <i>b</i><sub class="lower-index">1</sub> ≤ <i>n</i></span>) Николай называет хорошей, если все их <span class="tex-span">(<i>a</i><sub class="lower-index">1</sub> - <i>a</i><sub class="lower-index">0</sub> + <i>b</i><sub class="lower-index">1</sub> - <i>b</i><sub class="lower-index">0</sub> + 2)</span> элементов, отсортированные в порядке возрастания, образуют арифметическую прогрессию с разностью <span class="tex-span">1</span>. То есть, элементы, выписанные в отсортированном порядке образуют последовательность <span class="tex-span">{<i>x</i>, <i>x</i> + 1, <i>x</i> + 2, ..., <i>x</i> + <i>m</i> - 1}</span> для некоторых <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>m</i></span>.</p><p>Вам требуется найти в заданной перестановке количество различных пар хороших отрезков. Две пары отрезков считаются различными, если различны множества элементов, которые содержатся в этих парах отрезков. Например, любой отрезок <span class="tex-span">[<i>l</i>, <i>r</i>]</span> <span class="tex-span">(<i>l</i> &lt; <i>r</i>)</span> может быть представлен в виде пары отрезков, как <span class="tex-span">[<i>l</i>, <i>i</i>]</span> и <span class="tex-span">[<i>i</i> + 1, <i>r</i>]</span> (<span class="tex-span"><i>l</i> ≤ <i>i</i> ≤ <i>r</i></span>). Так как все эти пары образуют одно множество элементов, все они считаются одинаковыми.</p><p>Для лучшего понимания условия, смотрите комментарии к примерам.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 3·10<sup class="upper-index">5</sup></span>) — размер перестановки. Во второй строке через пробел записано <span class="tex-span"><i>n</i></span> различных целых чисел <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i></sub></span>, (<span class="tex-span">1 ≤ <i>p</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное число — количество хороших пар отрезков перестановки <span class="tex-span"><i>p</i></span>.</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битовых чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> или спецификатор <span class="tex-font-style-tt">%I64d</span>. </p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />1 2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />1 4 5 3 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>10<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />5 4 3 1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>10<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p> </p><p>В первом примере подходят следующие пары отрезков: (<span class="tex-span">[1, 1]</span>, <span class="tex-span">[2, 2]</span>); (<span class="tex-span">[2, 2]</span>, <span class="tex-span">[3, 3]</span>); (<span class="tex-span">[1, 2]</span>, <span class="tex-span">[3, 3]</span>). Пара отрезков (<span class="tex-span">[1, 1]</span>, <span class="tex-span">[2, 3]</span>), по определению, эквивалентна паре (<span class="tex-span">[1, 2]</span>, <span class="tex-span">[3, 3]</span>), так как обе эти пары соответствуют множеству элементов <span class="tex-span">{1, 2, 3}</span>.</p><p>В третьем примере подходят следующие пары отрезков: (<span class="tex-span">[4, 4]</span>, <span class="tex-span">[5, 5]</span>); (<span class="tex-span">[3, 3]</span>,<span class="tex-span">[4, 5]</span>); (<span class="tex-span">[2, 2]</span>,<span class="tex-span">[3, 5]</span>); (<span class="tex-span">[1, 1]</span>,<span class="tex-span">[2, 5]</span>); (<span class="tex-span">[3, 3]</span>,<span class="tex-span">[5, 5]</span>); (<span class="tex-span">[2, 3]</span>,<span class="tex-span">[5, 5]</span>); (<span class="tex-span">[1, 3]</span>,<span class="tex-span">[5, 5]</span>); (<span class="tex-span">[2, 2]</span>,<span class="tex-span">[3, 3]</span>); (<span class="tex-span">[1, 1]</span>,<span class="tex-span">[2, 3]</span>); (<span class="tex-span">[1, 1]</span>,<span class="tex-span">[2, 2]</span>).</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Число Фибоначчи</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>3 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>У Джона Доу есть список всех чисел Фибоначчи по модулю <span class="tex-span">10<sup class="upper-index">13</sup></span>. Этот список бесконечен, он начинается с чисел <span class="tex-span">0</span> и <span class="tex-span">1</span>. Каждое число в этом списке, кроме двух первых, является суммой двух предыдущих по модулю <span class="tex-span">10<sup class="upper-index">13</sup></span>, то есть список Джона получается из списка чисел Фибоначчи заменой каждого числа в нем его остатком от деления на <span class="tex-span">10<sup class="upper-index">13</sup></span>. </p><p>Теперь Джон загадал число <span class="tex-span"><i>f</i></span> (<span class="tex-span">0 ≤ <i>f</i> &lt; 10<sup class="upper-index">13</sup></span>), и хочет найти его первое вхождение в описанный выше список. Помогите Джону, найдите номер первого вхождения числа <span class="tex-span"><i>f</i></span> в список или сообщите, что число <span class="tex-span"><i>f</i></span> в списке не встречается. </p><p>Нумерация в списке ведется с нуля. Под номером <span class="tex-span">0</span> в списке Джона стоит число <span class="tex-span">0</span>, под номером <span class="tex-span">1</span> — число <span class="tex-span">1</span>, под номером <span class="tex-span">2</span> — число <span class="tex-span">1</span>, под номером <span class="tex-span">3</span> — число <span class="tex-span">2</span>, под номером <span class="tex-span">4</span> — число <span class="tex-span">3</span> и так далее. Таким образом, начало списка выглядит следующим образом: <span class="tex-span">0, 1, 1, 2, 3, 5, 8, 13, 21, ...</span></p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано единственное целое число <span class="tex-span"><i>f</i></span> (<span class="tex-span">0 ≤ <i>f</i> &lt; 10<sup class="upper-index">13</sup></span>) — число, позицию которого в списке нужно найти.</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битовых чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> или спецификатор <span class="tex-font-style-tt">%I64d</span>. </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное число — номер первого вхождения заданного числа в список Джона или -1, если это число не входит в список Джона.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>13<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>7<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>377<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>14<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
