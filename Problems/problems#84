
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="cc04d55d2468cd441886c52831b66636"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="1dpl0p2q0x2q"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='cc04d55d2468cd441886c52831b66636'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Beta Round #72 (Div. 2 Only)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Игрушечные армии</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Герой нашего повествования Валерий и его лучший друг Аркадий еще только учатся в школе, и поэтому все свободное время они проводят играя в пошаговую стратегию «GAGA: Go And Go Again». Процесс игры выглядит следующим образом.</p><p>На игровом поле располагаются две армии, каждая из которых состоит из <span class="tex-span"><i>n</i></span> солдат (<span class="tex-span"><i>n</i></span> всегда четное). Текущий игрок указывает для каждого своего солдата, в какого солдата противника тот будет стрелять, а после этого все солдаты игрока стреляют одновременно. Это игровой мир, и поэтому каждый солдат стреляет идеально, то есть абсолютно всегда попадает в указанную цель. Если в солдата противника стреляли, он обязательно погибает. Может случиться, что нескольким солдатам была указана одна и та же цель. Убитые солдаты больше не принимают участия в игре.</p><p>Игра «GAGA» состоит из трех шагов: сначала делает ход Валерий, потом Аркадий, после чего опять Валерий, — и игра заканчивается.</p><p>Вас попросили подсчитать, какое максимальное суммарное количество солдат может быть убито в процессе игры?</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Входные данные состоят из единственного целого числа <span class="tex-span"><i>n</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 10<sup class="upper-index">8</sup></span>, <span class="tex-span"><i>n</i></span> — четное). Обратите внимание, что до начала игры на поле располагаются <span class="tex-span">2<i>n</i></span> солдат.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное число — какое максимальное суммарное количество солдат могло быть убито в процессе игры за три хода.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Первый пример из условия:</p><p>1) Солдаты Валерия с номерами 1 и 2 стреляют в солдата Аркадия с номером 1.</p><p>2) Солдат Аркадия с номером 2 стреляет в солдата Валерия с номером 1.</p><p>3) Солдат Валерия с номером 1 стреляет в солдата Аркадия с номером 2.</p><p>Всего убито 3 солдата: солдат Валерия с номером 1 и солдаты Аркадия с номерами 1 и 2.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Магический массив</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p><span class="tex-font-style-it">Валерий очень интересуется магией. Магия настолько его привлекает, что он видит её повсюду. Любые странные и непонятные явления он объясняет вмешательством потусторонних сил. Но кто бы мог подумать, что даже в обыкновенном массиве чисел Валера умудрится заметить что-то прекрасное и магическое.</span></p><p>Совершенно случайным образом к Валере попал кусок старинного пергамента, на котором был записан массив чисел. Он сразу же подумал, что числа в этом массиве вовсе не случайные. В результате продолжительных исследований Валера вывел чудесное свойство, которым должен обладать магический массив: массив называется магическим, если в нем <span class="tex-font-style-bf">минимум и максимум совпадают</span>.</p><p>Этим своим знаменательным открытием он решил поделиться с вами, но взамен попросил о помощи. Несмотря на потрясающий ум и смекалку, Валера очень плохо считает и поэтому вам придется довести его работу до конца. Все, что от вас требуется, это посчитать количество магических подмассивов исходного массива чисел, записанных на пергаменте. Подмассивом будем называть <span class="tex-font-style-bf">непустую последовательность подряд идущих элементов</span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных задано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>). Во второй строке записан массив исходных целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> (<span class="tex-span"> - 10<sup class="upper-index">9</sup> ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>). </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственной строке выведите ответ на задачу: количество подмассивов, являющихся магическими.</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битовых чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> (также вы можете использовать спецификатор <span class="tex-font-style-tt">%I64d</span>).</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4<br />2 1 1 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />-2 -2 -2 0 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>8<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Комментарии к примерам из условия:</p><p>Подходящие подмассивы обозначим в виде пары индексов [a;b] начала и конца.</p><p>В первом примере такими являются [1;1], [2;2], [3;3], [4;4], [2;3].</p><p>Во втором — [1;1], [2;2], [3;3], [4;4], [5;5], [1;2], [2;3], [1;3]. </p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Биатлон</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p><span class="tex-font-style-it">Пожалуй многие слышали о том, что недавно завершился чемпионат мира по биатлону. Хотя наш герой Валерий сам и не присутствовал на этом зрелищном мероприятии, а лишь наблюдал за ним по телевизору, оно так его привлекло, что он решил записаться в биатлонную секцию.</span></p><p><span class="tex-font-style-it">Разумеется, как впрочем и любой спорт, биатлон на практике оказался очень трудным, требующим много времени и усилий занятием. Тренировки, тренировки и тренировки — вот что ждало Валеру на его пути к великим биатлонным свершениям.</span></p><p><span class="tex-font-style-it">Что касается самих тренировок, вы все, наверно, знаете что каждый профессиональный биатлонист должен быстро бегать на лыжах и точно стрелять на огневом рубеже. Только в этом случае можно рассчитывать на успех, потому что бег и стрельба - две основные составляющие биатлона. Что касается лыжной подготовки, то Валеру можно смело похвалить, поскольку бегает он действительно быстро, а в меткости стрельбы ему похвастаться особо нечем.</span></p><p>На биатлонной базе, где Валера готовится к соревнованиям, расположено огромное стрельбище, на котором находится <span class="tex-span"><i>n</i></span> мишеней. Каждая мишень имеет форму круга, а <span class="tex-font-style-bf">центры всех кругов расположены на оси <span class="tex-span"><i>Ох</i></span></span>. На последней тренировке Валера сделал целых <span class="tex-span"><i>m</i></span> выстрелов. Для того чтобы ему было проще следить за собственными результатами, одному небезызвестному программисту, которым, разумеется, являетесь вы, было поручено написать программу, которая бы сообщала, сколько и какие мишени Валера закрыл, а какие ему так и не удалось поразить. Более конкретно, для каждой мишени программа должна выдать номер <span class="tex-font-style-bf">первого</span> успешного попадания в нее или «-1», если такого не оказалось. <span class="tex-font-style-bf">Мишень считается закрытой, если выстрел попал внутрь круга или на его границу</span>. Он очень рассчитывает на вас, и, возможно, благодаря вам он когда-нибудь будет побеждать на международной арене.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла содержится целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">4</sup></span>) — количество мишеней. В последующих <span class="tex-span"><i>n</i></span> строках содержатся описания мишеней. Каждая мишень представляет собой круг, центр которого расположен на оси <span class="tex-span"><i>Ox</i></span>. Каждый круг задан координатой центра <span class="tex-span"><i>x</i></span> (<span class="tex-span"> - 2·10<sup class="upper-index">4</sup> ≤ <i>x</i> ≤ 2·10<sup class="upper-index">4</sup></span>), а также своим радиусом <span class="tex-span"><i>r</i></span> (<span class="tex-span">1 ≤ <i>r</i> ≤ 1000</span>). <span class="tex-font-style-bf">Гарантируется, что никакая пара мишеней не совпадает, не пересекается и не вкладывается друг в друга, однако может касаться.</span></p><p>В следующей строке содержится целое число <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>m</i> ≤ 2·10<sup class="upper-index">5</sup></span>) — количество выстрелов. Последующие <span class="tex-span"><i>m</i></span> строк содержат описания выстрелов, которые являются точками на плоскости, заданными своими координатами <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span> (<span class="tex-span"> - 2·10<sup class="upper-index">4</sup> ≤ <i>x</i>, <i>y</i> ≤ 2·10<sup class="upper-index">4</sup></span>).</p><p>Все числа во входных данных целые.</p><p>Мишени и выстрелы нумеруются с единицы в том порядке, в котором они заданы во входных данных.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите единственное число — число закрытых Валерой мишеней. Во вторую строку для каждой из мишеней выведите номер первого в неё попадания или «-1» (без кавычек), если такого не существует. Числа разделяйте пробелами.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />2 1<br />5 2<br />10 1<br />5<br />0 1<br />1 3<br />3 0<br />4 0<br />4 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />3 3 -1 <br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br />3 2<br />7 1<br />11 2<br />4<br />2 1<br />6 0<br />6 4<br />11 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />1 2 4 <br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Доктор</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В очереди к доктору Айболиту стоят <span class="tex-span"><i>n</i></span> животных. Когда животное заходит в кабинет, доктор его осматривает, выписывает рецепты, назначает анализы, и, возможно, назначает дополнительный прием. Доктор отлично знаком со всеми животными в лесу, и поэтому точно знает, что животное номер <span class="tex-span"><i>i</i></span> в очереди должно будет посетить его кабинет ровно <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> раз. Мы будем считать, что осмотр занимает гораздо больше времени, чем сдача анализов и других дополнительных процедур, и поэтому будем считать, что как только животное покидает кабинет, оно сразу же встает в конец очереди к доктору. Разумеется, если животное уже побывало у доктора необходимое количество раз, то вставать еще раз в очередь ненужно, и оно сразу же уходит домой.</p><p>Доктор планирует уйти домой после того, как завершит прием <span class="tex-span"><i>k</i></span> животных, и поэтому ему важно, как будет выглядеть очередь в этот момент. Так как у доктора очень длинный рабочий день, да и вообще, отвлекаться ему некогда, то он попросил вас выяснить это.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записаны через пробел два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>, <span class="tex-span">0 ≤ <i>k</i> ≤ 10<sup class="upper-index">14</sup></span>). Во второй строке заданы через пробел целые числа <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>).</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битовых чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> (также вы можете использовать спецификатор <span class="tex-font-style-tt">%I64d</span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если доктор осуществит в сумме меньше чем <span class="tex-span"><i>k</i></span> приемов, то выведите единственное число «-1» (без кавычек). Иначе выведите последовательность чисел — номера животных в порядке, в котором они стоят в очереди. </p><p><span class="tex-font-style-bf">Обратите внимание, что эта последовательность может быть пустой.</span> Этот случай присутствует в претестах. Вы можете ничего не выводить или выводить один символ конца строки. Оба варианта будут засчитаны за правильный ответ.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 3<br />1 2 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2 </pre></div><div class="input"><div class="title">Входные данные</div><pre>4 10<br />3 3 2 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>7 10<br />1 3 3 1 2 3 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6 2 3 </pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Объяснение первого примера:</p><p><ul> <li> До приема: <span class="tex-span">{1, 2, 3}</span> </li><li> После первого приема: <span class="tex-span">{2, 3}</span> </li><li> После второго приема: <span class="tex-span">{3, 2}</span> </li><li> После третьего приема: <span class="tex-span">{2}</span> </li></ul></p><p>Объяснение второго примера:</p><p><ul> <li> До приема: <span class="tex-span">{1, 2, 3, 4, 5, 6, 7}</span> </li><li> После первого приема: <span class="tex-span">{2, 3, 4, 5, 6, 7}</span> </li><li> После второго приема: <span class="tex-span">{3, 4, 5, 6, 7, 2}</span> </li><li> После третьего приема: <span class="tex-span">{4, 5, 6, 7, 2, 3}</span> </li><li> После четвертого приема: <span class="tex-span">{5, 6, 7, 2, 3}</span> </li><li> После пятого приема: <span class="tex-span">{6, 7, 2, 3, 5}</span> </li><li> После шестого приема: <span class="tex-span">{7, 2, 3, 5, 6}</span> </li><li> После седьмого приема: <span class="tex-span">{2, 3, 5, 6}</span> </li><li> После восьмого приема: <span class="tex-span">{3, 5, 6, 2}</span> </li><li> После девятого приема: <span class="tex-span">{5, 6, 2, 3}</span> </li><li> После десятого приема: <span class="tex-span">{6, 2, 3}</span> </li></ul></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Трасса</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вы уже точно знаете, что любимый спорт Валерия — биатлон. Благодаря Вашей помощи, он уже научился стрелять без промаха, и на огневом рубеже ему нет равных. Но теперь остается дело за малым — научиться быстрее всех преодолевать маршрут.</p><p>Карта трассы представляет собой прямоугольник размером <span class="tex-span"><i>n</i> × <i>m</i></span> разбитый на клетки. Каждая клетка помечена маленькой латинской буквой (которая означает тип участка), исключение составляют клетка-старт (она помечена заглавной латинской буквой <span class="tex-span"><i>S</i></span>) и клетка-финиш (она помечена заглавной латинской буквой <span class="tex-span"><i>T</i></span>). Время перехода от одной клетки к другой равно 1 минуте, временем пути внутри клетки можно пренебречь. Из клетки можно перейти только в соседние по стороне, но запрещается выходить за пределы карты. Также на маршрут накладывается ограничение — запрещается посещать более <span class="tex-span"><i>k</i></span> <span class="tex-font-style-bf">различных типов</span> клеток (клетки одного типа можно посещать бесконечное количество раз). Клетки, помеченные символами <span class="tex-span"><i>S</i></span> и <span class="tex-span"><i>T</i></span>, не имеют типа, поэтому они не считаются. Но клетка <span class="tex-span"><i>S</i></span> должна быть посещена ровно один раз — в самом начале, и клетка <span class="tex-span"><i>T</i></span> должна быть посещена ровно один раз — в самом конце.</p><p>Ваша задача найти кратчайший по времени маршрут из клетки <span class="tex-span"><i>S</i></span> в клетку <span class="tex-span"><i>T</i></span>, а из всех кратчайших маршрутов нужно выбрать <span class="tex-font-style-bf">лексикографически минимальный</span>. При сравнении маршрутов лексикографически следует их представлять как последовательность символов — типов участков.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла заданы три целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span> и <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 50, <i>n</i>·<i>m</i> ≥ 2, 1 ≤ <i>k</i> ≤ 4</span>). Далее в <span class="tex-span"><i>n</i></span> строках задана карта. Каждая строка имеет длину ровно <span class="tex-span"><i>m</i></span> символов и состоит из строчных латинских букв и символов <span class="tex-span"><i>S</i></span> и <span class="tex-span"><i>T</i></span>. Гарантируется, что карта содержит ровно один символ <span class="tex-span"><i>S</i></span> и ровно один символ <span class="tex-span"><i>T</i></span>.</p><p>Претест 12 является одним из максимальных тестов в этой задаче.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если существует путь, удовлетворяющий условию, выведите его как последовательность символов — типов участков, <span class="tex-font-style-bf">символ <span class="tex-span"><i>S</i></span> в начале и символ <span class="tex-span"><i>T</i></span> в конце выводить не следует</span>. Иначе выведите «-1» (без кавычек).</p><p><span class="tex-font-style-bf">Обратите внимание, что эта последовательность может быть пустой.</span> Этот случай присутствует в претестах. Вы можете ничего не выводить или выводить один символ конца строки. Оба варианта будут засчитаны за правильный ответ.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5 3 2<br />Sba<br />ccc<br />aac<br />ccc<br />abT<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>bcccc<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 4 1<br />Sxyy<br />yxxx<br />yyyT<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>xxxx<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 3 3<br />TyS<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>y<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 4 1<br />SxyT<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
