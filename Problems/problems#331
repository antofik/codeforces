
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="cadfg674h645fa7e4db240b35e826173"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="1561q5jhuil7g"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='cadfg674h645fa7e4db240b35e826173'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">ABBYY Cup 3.0 - Finals (&#1086;&#1085;&#1083;&#1072;&#1081;&#1085;-&#1090;&#1088;&#1072;&#1085;&#1089;&#1083;&#1103;&#1094;&#1080;&#1103;)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A1. Милая сердцу Бобрунья</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p><span class="tex-font-style-it"> — О, милая сердцу Бобрунья, не желаете ли вы прогуляться со мной по расчудесной лесополосе? </span> </p><p><span class="tex-font-style-it"> — Конечно, мой Умный Бобр, давайте насладимся прекрасными видами вместе. Как насчет вечера пятницы? </span></p><p>Умный Бобер засуетился. К пятнице все должно быть идеально, поэтому срочно нужно подготовить лесополосу к предстоящей прогулке — выпилить некоторые деревья.</p><p>Рассмотрим лесополосу как последовательность деревьев. Каждое дерево <span class="tex-span"><i>i</i></span> характеризуется своей эстетической привлекательностью <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> — одни деревья очень красивы, другие так себе, а третьи даже пугают своим внешним видом!</p><p>Умный Бобер вычислил, что для завоевания сердца Бобруньи нужно добиться следующих эффектов: <ul> <li> во-первых, Бобрунью нужно порадовать: сумма эстетических привлекательностей оставшихся в лесополосе деревьев должна быть максимально возможной; </li><li> во-вторых, Бобрунью нужно удивить: эстетические привлекательности первого и последнего деревьев лесополосы должны быть равны; </li><li> ну и, конечно, прогулка должна состояться: нужно оставить хотя бы два дерева в лесополосе. </li></ul></p><p>Теперь помогите Умному Бобру! Какие деревья придется выпилить для завоевания сердца Бобруньи?</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке содержится единственное целое число <span class="tex-span"><i>n</i></span> — изначальное количество деревьев в лесополосе, <span class="tex-span">2 ≤ <i>n</i></span>. Во второй строке через пробел перечислены целые числа <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> — эстетические привлекательности каждого из деревьев. Все эстетические привлекательности не превосходят <span class="tex-span">10<sup class="upper-index">9</sup></span> по модулю.</p><p><ul> <li> для получения 30 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 100</span> (подзадача A1); </li><li> для получения 100 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 3·10<sup class="upper-index">5</sup></span> (подзадачи A1+A2). </li></ul></p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите два целых числа — суммарную эстетическую привлекательность лесополосы после ее обработки Умным Бобром и количество выпиливаемых деревьев <span class="tex-span"><i>k</i></span>.</p><p>В следующей строке выведите <span class="tex-span"><i>k</i></span> чисел — номера деревьев, которые стоит выпилить. Считайте, что деревья пронумерованы от 1 до <span class="tex-span"><i>n</i></span> слева направо.</p><p>Если существует несколько решений, то выведите любое из них. Гарантируется, что хотя бы два дерева имеют одинаковую эстетическую привлекательность.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br />1 2 3 1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>8 1<br />1 </pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />1 -2 3 1 -2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5 2<br />2 5 </pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A2. Милая сердцу Бобрунья</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p><span class="tex-font-style-it"> — О, милая сердцу Бобрунья, не желаете ли вы прогуляться со мной по расчудесной лесополосе? </span> </p><p><span class="tex-font-style-it"> — Конечно, мой Умный Бобр, давайте насладимся прекрасными видами вместе. Как насчет вечера пятницы? </span></p><p>Умный Бобер засуетился. К пятнице все должно быть идеально, поэтому срочно нужно подготовить лесополосу к предстоящей прогулке — выпилить некоторые деревья.</p><p>Рассмотрим лесополосу как последовательность деревьев. Каждое дерево <span class="tex-span"><i>i</i></span> характеризуется своей эстетической привлекательностью <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> — одни деревья очень красивы, другие так себе, а третьи даже пугают своим внешним видом!</p><p>Умный Бобер вычислил, что для завоевания сердца Бобруньи нужно добиться следующих эффектов: <ul> <li> во-первых, Бобрунью нужно порадовать: сумма эстетических привлекательностей оставшихся в лесополосе деревьев должна быть максимально возможной; </li><li> во-вторых, Бобрунью нужно удивить: эстетические привлекательности первого и последнего деревьев лесополосы должны быть равны; </li><li> ну и, конечно, прогулка должна состояться: нужно оставить хотя бы два дерева в лесополосе. </li></ul></p><p>Теперь помогите Умному Бобру! Какие деревья придется выпилить для завоевания сердца Бобруньи?</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке содержится единственное целое число <span class="tex-span"><i>n</i></span> — изначальное количество деревьев в лесополосе, <span class="tex-span">2 ≤ <i>n</i></span>. Во второй строке через пробел перечислены целые числа <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> — эстетические привлекательности каждого из деревьев. Все эстетические привлекательности не превосходят <span class="tex-span">10<sup class="upper-index">9</sup></span> по модулю.</p><p><ul> <li> для получения 30 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 100</span> (подзадача A1); </li><li> для получения 100 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 3·10<sup class="upper-index">5</sup></span> (подзадачи A1+A2). </li></ul></p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите два целых числа — суммарную эстетическую привлекательность лесополосы после ее обработки Умным Бобром и количество выпиливаемых деревьев <span class="tex-span"><i>k</i></span>.</p><p>В следующей строке выведите <span class="tex-span"><i>k</i></span> чисел — номера деревьев, которые стоит выпилить. Считайте, что деревья пронумерованы от 1 до <span class="tex-span"><i>n</i></span> слева направо.</p><p>Если существует несколько решений, то выведите любое из них. Гарантируется, что хотя бы два дерева имеют одинаковую эстетическую привлекательность.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br />1 2 3 1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>8 1<br />1 </pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />1 -2 3 1 -2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5 2<br />2 5 </pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B1. Побрей бобра!</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Умный Бобер недавно спроектировал и построил нанотехнологичный инновационный универсальный инструмент массового обривания бобров — «Брабобрей-5000». Брабобрей-5000 умеет обривать бобров целыми семьями! Как он работает? Очень просто!</p><p>Имеется <span class="tex-span"><i>n</i></span> бобров, каждый из них имеет уникальный номер от 1 до <span class="tex-span"><i>n</i></span>. Рассмотрим перестановку <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> этих <span class="tex-span"><i>n</i></span> бобров. Брабобрей-5000 за один запуск может обрить бобров с номерами от <span class="tex-span"><i>x</i></span> до <span class="tex-span"><i>y</i></span> (включительно) тогда и только тогда, когда найдутся такие индексы <span class="tex-span"><i>i</i><sub class="lower-index">1</sub> &lt; <i>i</i><sub class="lower-index">2</sub> &lt; ... &lt; <i>i</i><sub class="lower-index"><i>k</i></sub></span>, что <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i><sub class="lower-index">1</sub></sub> = <i>x</i></span>, <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i><sub class="lower-index">2</sub></sub> = <i>x</i> + 1</span>, ..., <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i><sub class="lower-index"><i>k</i> - 1</sub></sub> = <i>y</i> - 1</span>, <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i><sub class="lower-index"><i>k</i></sub></sub> = <i>y</i></span>. И это действительно очень удобно. Например, перестановку бобров <span class="tex-span">1, 2, 3, ..., <i>n</i></span> можно обрить за один раз.</p><p>Если за один запуск обрить бобров с <span class="tex-span"><i>x</i></span> по <span class="tex-span"><i>y</i></span> нельзя, то можно найти такое разбиение на группы <span class="tex-span">[<i>x</i>, <i>p</i><sub class="lower-index">1</sub>]</span>, <span class="tex-span">[<i>p</i><sub class="lower-index">1</sub> + 1, <i>p</i><sub class="lower-index">2</sub>]</span>, ..., <span class="tex-span">[<i>p</i><sub class="lower-index"><i>m</i></sub> + 1, <i>y</i>]</span> <span class="tex-span">(<i>x</i> ≤ <i>p</i><sub class="lower-index">1</sub> &lt; <i>p</i><sub class="lower-index">2</sub> &lt; ... &lt; <i>p</i><sub class="lower-index"><i>m</i></sub> &lt; <i>y</i>)</span>, что в каждой группе обрить бобров за один запуск можно. Но тогда потребуется <span class="tex-span"><i>m</i> + 1</span> запусков Брабобрея-5000.</p><p>Все бобры взбалмошны, поэтому так и норовят поменяться местами. Поэтому, подходя к задаче более формально, можно рассматривать запросы двух видов: <ul> <li> какое минимальное количество запусков Брабобрея-5000 потребуется, чтобы обрить бобров с номерами от <span class="tex-span"><i>x</i></span> до <span class="tex-span"><i>y</i></span> включительно? </li><li> два бобра на позициях <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span> (то есть бобры <span class="tex-span"><i>a</i><sub class="lower-index"><i>x</i></sub></span> и <span class="tex-span"><i>a</i><sub class="lower-index"><i>y</i></sub></span>) поменялись местами. </li></ul></p><p>Можно считать, что одного и того же бобра можно обривать сколь угодно много раз.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке задано целое число <span class="tex-span"><i>n</i></span> — общее количество бобров, <span class="tex-span">2 ≤ <i>n</i></span>. Во второй строке записаны через пробел <span class="tex-span"><i>n</i></span> целых чисел — исходная перестановка бобров.</p><p>В третьей строке задано целое число <span class="tex-span"><i>q</i></span> — количество запросов, <span class="tex-span">1 ≤ <i>q</i> ≤ 10<sup class="upper-index">5</sup></span>. В последующих <span class="tex-span"><i>q</i></span> строках содержатся сами запросы. Каждый запрос <span class="tex-span"><i>i</i></span> имеет вид <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span>, где <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i></sub></span> — вид запроса (<span class="tex-span">1</span> — обрить бобров с <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> по <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> включительно, <span class="tex-span">2</span> — поменять местами бобров, стоящих на позициях <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span>). Для всех запросов выполняется: <span class="tex-span">1 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub> &lt; <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>.</p><p><ul> <li> для получения 30 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 100</span> (подзадача B1); </li><li> для получения 100 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 3·10<sup class="upper-index">5</sup></span> (подзадачи B1+B2). </li></ul></p><p>Обратите внимание, что количество запросов <span class="tex-span"><i>q</i></span> и в подзадаче B1, и в подзадаче B2 ограничено <span class="tex-span">1 ≤ <i>q</i> ≤ 10<sup class="upper-index">5</sup></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждого запроса с <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i></sub> = 1</span> выведите минимальное количество запусков Брабобрея-5000.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br />1 3 4 2 5<br />6<br />1 1 5<br />1 3 4<br />2 2 3<br />1 1 5<br />2 1 5<br />1 1 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />1<br />3<br />5<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B2. Побрей бобра!</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Умный Бобер недавно спроектировал и построил нанотехнологичный инновационный универсальный инструмент массового обривания бобров — «Брабобрей-5000». Брабобрей-5000 умеет обривать бобров целыми семьями! Как он работает? Очень просто!</p><p>Имеется <span class="tex-span"><i>n</i></span> бобров, каждый из них имеет уникальный номер от 1 до <span class="tex-span"><i>n</i></span>. Рассмотрим перестановку <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> этих <span class="tex-span"><i>n</i></span> бобров. Брабобрей-5000 за один запуск может обрить бобров с номерами от <span class="tex-span"><i>x</i></span> до <span class="tex-span"><i>y</i></span> (включительно) тогда и только тогда, когда найдутся такие индексы <span class="tex-span"><i>i</i><sub class="lower-index">1</sub> &lt; <i>i</i><sub class="lower-index">2</sub> &lt; ... &lt; <i>i</i><sub class="lower-index"><i>k</i></sub></span>, что <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i><sub class="lower-index">1</sub></sub> = <i>x</i></span>, <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i><sub class="lower-index">2</sub></sub> = <i>x</i> + 1</span>, ..., <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i><sub class="lower-index"><i>k</i> - 1</sub></sub> = <i>y</i> - 1</span>, <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i><sub class="lower-index"><i>k</i></sub></sub> = <i>y</i></span>. И это действительно очень удобно. Например, перестановку бобров <span class="tex-span">1, 2, 3, ..., <i>n</i></span> можно обрить за один раз.</p><p>Если за один запуск обрить бобров с <span class="tex-span"><i>x</i></span> по <span class="tex-span"><i>y</i></span> нельзя, то можно найти такое разбиение на группы <span class="tex-span">[<i>x</i>, <i>p</i><sub class="lower-index">1</sub>]</span>, <span class="tex-span">[<i>p</i><sub class="lower-index">1</sub> + 1, <i>p</i><sub class="lower-index">2</sub>]</span>, ..., <span class="tex-span">[<i>p</i><sub class="lower-index"><i>m</i></sub> + 1, <i>y</i>]</span> <span class="tex-span">(<i>x</i> ≤ <i>p</i><sub class="lower-index">1</sub> &lt; <i>p</i><sub class="lower-index">2</sub> &lt; ... &lt; <i>p</i><sub class="lower-index"><i>m</i></sub> &lt; <i>y</i>)</span>, что в каждой группе обрить бобров за один запуск можно. Но тогда потребуется <span class="tex-span"><i>m</i> + 1</span> запусков Брабобрея-5000.</p><p>Все бобры взбалмошны, поэтому так и норовят поменяться местами. Поэтому, подходя к задаче более формально, можно рассматривать запросы двух видов: <ul> <li> какое минимальное количество запусков Брабобрея-5000 потребуется, чтобы обрить бобров с номерами от <span class="tex-span"><i>x</i></span> до <span class="tex-span"><i>y</i></span> включительно? </li><li> два бобра на позициях <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span> (то есть бобры <span class="tex-span"><i>a</i><sub class="lower-index"><i>x</i></sub></span> и <span class="tex-span"><i>a</i><sub class="lower-index"><i>y</i></sub></span>) поменялись местами. </li></ul></p><p>Можно считать, что одного и того же бобра можно обривать сколь угодно много раз.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке задано целое число <span class="tex-span"><i>n</i></span> — общее количество бобров, <span class="tex-span">2 ≤ <i>n</i></span>. Во второй строке записаны через пробел <span class="tex-span"><i>n</i></span> целых чисел — исходная перестановка бобров.</p><p>В третьей строке задано целое число <span class="tex-span"><i>q</i></span> — количество запросов, <span class="tex-span">1 ≤ <i>q</i> ≤ 10<sup class="upper-index">5</sup></span>. В последующих <span class="tex-span"><i>q</i></span> строках содержатся сами запросы. Каждый запрос <span class="tex-span"><i>i</i></span> имеет вид <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span>, где <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i></sub></span> — вид запроса (<span class="tex-span">1</span> — обрить бобров с <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> по <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> включительно, <span class="tex-span">2</span> — поменять местами бобров, стоящих на позициях <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span>). Для всех запросов выполняется: <span class="tex-span">1 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub> &lt; <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>.</p><p><ul> <li> для получения 30 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 100</span> (подзадача B1); </li><li> для получения 100 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 3·10<sup class="upper-index">5</sup></span> (подзадачи B1+B2). </li></ul></p><p>Обратите внимание, что количество запросов <span class="tex-span"><i>q</i></span> и в подзадаче B1, и в подзадаче B2 ограничено <span class="tex-span">1 ≤ <i>q</i> ≤ 10<sup class="upper-index">5</sup></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждого запроса с <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i></sub> = 1</span> выведите минимальное количество запусков Брабобрея-5000.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br />1 3 4 2 5<br />6<br />1 1 5<br />1 3 4<br />2 2 3<br />1 1 5<br />2 1 5<br />1 1 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />1<br />3<br />5<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C1. Великий календарь Июйля</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>И снова наступает очередной Конец Света! На этот раз во всем виноват календарь племени Июйля.</p><p>Бобры этого племени знали толк в математике. Археологу Умному Бобру досталась священная скрижаль с магическим числом. Перевод со старобобруйского гласит: </p><p>«<span class="tex-font-style-it">Да снизойдет на тебя благодать Великого Бобра, да раскроются чакры твои, да не ослепнет третий глаз твой от созерцания Истины! Возьми магическое число, вычти из него любую цифру, которая входит в написание этого числа и получи новое магическое число. Повтори эту операцию до тех пор, пока очередное магическое число не обратится в ноль. Сколько вычитаний сделаешь, столько и будет Земля стоять на Трех Бобрах!</span>»</p><p>Очевидно, что при разной последовательности вычитаний можно получить различное количество операций. Но Умный Бобер готовится к худшему и просит рассчитать наименьшее количество операций, которое потребуется для обращения магического числа в ноль.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке задано целое магическое число <span class="tex-span"><i>n</i></span>, <span class="tex-span">0 ≤ <i>n</i></span>.</p><p><ul> <li> для получения 20 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 10<sup class="upper-index">6</sup></span> (подзадача C1); </li><li> для получения 40 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 10<sup class="upper-index">12</sup></span> (подзадачи C1+C2); </li><li> для получения 100 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 10<sup class="upper-index">18</sup></span> (подзадачи C1+C2+C3). </li></ul></p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число — наименьшее количество вычитаний, которое обратит магическое число в ноль.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>24<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5</pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Пояснение к примеру. Наименьшее количество операций достигается следующей последовательностью вычитаний: </p><p><center> <span><span><span><span class="tex-span">24 → 20 → 18 → 10 → 9 → 0</span></span></span></span> </center></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C2. Великий календарь Июйля</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>И снова наступает очередной Конец Света! На этот раз во всем виноват календарь племени Июйля.</p><p>Бобры этого племени знали толк в математике. Археологу Умному Бобру досталась священная скрижаль с магическим числом. Перевод со старобобруйского гласит: </p><p>«<span class="tex-font-style-it">Да снизойдет на тебя благодать Великого Бобра, да раскроются чакры твои, да не ослепнет третий глаз твой от созерцания Истины! Возьми магическое число, вычти из него любую цифру, которая входит в написание этого числа и получи новое магическое число. Повтори эту операцию до тех пор, пока очередное магическое число не обратится в ноль. Сколько вычитаний сделаешь, столько и будет Земля стоять на Трех Бобрах!</span>»</p><p>Очевидно, что при разной последовательности вычитаний можно получить различное количество операций. Но Умный Бобер готовится к худшему и просит рассчитать наименьшее количество операций, которое потребуется для обращения магического числа в ноль.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке задано целое магическое число <span class="tex-span"><i>n</i></span>, <span class="tex-span">0 ≤ <i>n</i></span>.</p><p><ul> <li> для получения 20 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 10<sup class="upper-index">6</sup></span> (подзадача C1); </li><li> для получения 40 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 10<sup class="upper-index">12</sup></span> (подзадачи C1+C2); </li><li> для получения 100 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 10<sup class="upper-index">18</sup></span> (подзадачи C1+C2+C3). </li></ul></p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число — наименьшее количество вычитаний, которое обратит магическое число в ноль.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>24<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5</pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Пояснение к примеру. Наименьшее количество операций достигается следующей последовательностью вычитаний: </p><p><center> <span><span><span><span class="tex-span">24 → 20 → 18 → 10 → 9 → 0</span></span></span></span> </center></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C3. Великий календарь Июйля</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>И снова наступает очередной Конец Света! На этот раз во всем виноват календарь племени Июйля.</p><p>Бобры этого племени знали толк в математике. Археологу Умному Бобру досталась священная скрижаль с магическим числом. Перевод со старобобруйского гласит: </p><p>«<span class="tex-font-style-it">Да снизойдет на тебя благодать Великого Бобра, да раскроются чакры твои, да не ослепнет третий глаз твой от созерцания Истины! Возьми магическое число, вычти из него любую цифру, которая входит в написание этого числа и получи новое магическое число. Повтори эту операцию до тех пор, пока очередное магическое число не обратится в ноль. Сколько вычитаний сделаешь, столько и будет Земля стоять на Трех Бобрах!</span>»</p><p>Очевидно, что при разной последовательности вычитаний можно получить различное количество операций. Но Умный Бобер готовится к худшему и просит рассчитать наименьшее количество операций, которое потребуется для обращения магического числа в ноль.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке задано целое магическое число <span class="tex-span"><i>n</i></span>, <span class="tex-span">0 ≤ <i>n</i></span>.</p><p><ul> <li> для получения 20 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 10<sup class="upper-index">6</sup></span> (подзадача C1); </li><li> для получения 40 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 10<sup class="upper-index">12</sup></span> (подзадачи C1+C2); </li><li> для получения 100 баллов требуется решить задачу при <span class="tex-span"><i>n</i> ≤ 10<sup class="upper-index">18</sup></span> (подзадачи C1+C2+C3). </li></ul></p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число — наименьшее количество вычитаний, которое обратит магическое число в ноль.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>24<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5</pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Пояснение к примеру. Наименьшее количество операций достигается следующей последовательностью вычитаний: </p><p><center> <span><span><span><span class="tex-span">24 → 20 → 18 → 10 → 9 → 0</span></span></span></span> </center></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D1. Побег на Бобракторе</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>6 секунд</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>512 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Хватит это терпеть! Умный Бобер решил устроить побег из академгородка Бобруйской Академии Наук (БАН). БАН представляет собой квадрат <span class="tex-span"><i>b</i> × <i>b</i></span> на плоскости, ему принадлежат точки с координатами <span class="tex-span"><i>x</i>, <i>y</i></span> <span class="tex-span">(0 ≤ <i>x</i>, <i>y</i> ≤ <i>b</i>)</span>. А чтобы путь прошел быстрее и веселее, наш Умный Бобер соорудил из отечественных пиломатериалов Бобрактор — удобное и эффективное транспортное средство.</p><p>На территории академгородка существуют правила дорожного движения — <span class="tex-span"><i>n</i></span> стрелок, параллельные осям координат. Эти стрелки не пересекаются и не касаются друг друга. Когда Бобрактор доезжает до какой-нибудь стрелки, то он поворачивается в направлении этой стрелки и продолжает свое движение либо до тех пор, пока не доедет до следующей стрелки, либо пока не покинет пределы академгородка. За одну единицу времени Бобрактор преодолевает ровно одну единицу расстояния. Можно считать, что для Бобрактора не существует никаких других препятствий.</p><p>Академики БАН хотят отправить новенький Бобрактор в НИИ «Академтрактор», а самого Умного Бобра — в аспирантуру, точить карандаши. У них есть <span class="tex-span"><i>q</i></span> планов, представляющих собой потенциальное стартовое положение Бобрактора <span class="tex-span">(<i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub>)</span>, начальный вектор движения <span class="tex-span"><i>w</i><sub class="lower-index"><i>i</i></sub></span> и время <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span>, прошедшее с начала побега.</p><p>Необходимо для каждого из <span class="tex-span"><i>q</i></span> планов определить, где будет находиться Умный Бобер через заданное время.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке содержится два целых числа: количество правил дорожного движения <span class="tex-span"><i>n</i></span> и размер академгородка <span class="tex-span"><i>b</i></span>, <span class="tex-span">0 ≤ <i>n</i></span>, <span class="tex-span">1 ≤ <i>b</i></span>. В последующих <span class="tex-span"><i>n</i></span> строках указаны сами правила. Каждая строка правил содержит четыре целых числа <span class="tex-span"><i>x</i><sub class="lower-index">0</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">0</sub></span>, <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">1</sub></span>, разделенных одиночными пробелами — начало и конец стрелки. Гарантируется, что все стрелки параллельны осям координат и не имеют общих точек. Все стрелки находятся внутри академгородка, то есть выполняется <span class="tex-span">0 ≤ <i>x</i><sub class="lower-index">0</sub>, <i>y</i><sub class="lower-index">0</sub>, <i>x</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">1</sub> ≤ <i>b</i></span>.</p><p>В последующей строке содержится целое число <span class="tex-span"><i>q</i></span> — количество планов академиков, <span class="tex-span">1 ≤ <i>q</i> ≤ 10<sup class="upper-index">5</sup></span>: <span class="tex-span"><i>i</i></span>-ый план представляет собой два целых числа, <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> — координаты Бобрактора в начальный момент времени, <span class="tex-span">0 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ <i>b</i></span>, символ <span class="tex-span"><i>w</i><sub class="lower-index"><i>i</i></sub></span>, принимающий значение <span class="tex-font-style-tt">U</span>, <span class="tex-font-style-tt">D</span>, <span class="tex-font-style-tt">L</span>, <span class="tex-font-style-tt">R</span> и задающий начальное направление вверх, вниз, влево или вправо соответственно (ось Y направлена вверх), а также <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span> — время, прошедшее с начала побега, <span class="tex-span">0 ≤ <i>t</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">15</sup></span>.</p><p><ul> <li> для получения 30 баллов требуется решить задачу при <span class="tex-span"><i>n</i>, <i>b</i> ≤ 30</span> (подзадача D1); </li><li> для получения 60 баллов требуется решить задачу при <span class="tex-span"><i>n</i>, <i>b</i> ≤ 1000</span> (подзадачи D1+D2); </li><li> для получения 100 баллов требуется решить задачу при <span class="tex-span"><i>n</i>, <i>b</i> ≤ 10<sup class="upper-index">5</sup></span> (подзадачи D1+D2+D3). </li></ul></p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>q</i></span> строк. В каждой строке должно содержаться два числа — координаты Бобрактора в конечный момент времени для каждого из планов. Если Умный Бобер успеет покинуть академгородок за время <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span>, то выведите координаты последней точки, которую он посетил внутри академгородка.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 3<br />0 0 0 1<br />0 2 2 2<br />3 3 2 3<br />12<br />0 0 L 0<br />0 0 L 1<br />0 0 L 2<br />0 0 L 3<br />0 0 L 4<br />0 0 L 5<br />0 0 L 6<br />2 0 U 2<br />2 0 U 3<br />3 0 U 5<br />1 3 D 2<br />1 3 R 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 0<br />0 1<br />0 2<br />1 2<br />2 2<br />3 2<br />3 2<br />2 2<br />3 2<br />1 3<br />2 2<br />1 3<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D2. Побег на Бобракторе</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>6 секунд</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>512 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Хватит это терпеть! Умный Бобер решил устроить побег из академгородка Бобруйской Академии Наук (БАН). БАН представляет собой квадрат <span class="tex-span"><i>b</i> × <i>b</i></span> на плоскости, ему принадлежат точки с координатами <span class="tex-span"><i>x</i>, <i>y</i></span> <span class="tex-span">(0 ≤ <i>x</i>, <i>y</i> ≤ <i>b</i>)</span>. А чтобы путь прошел быстрее и веселее, наш Умный Бобер соорудил из отечественных пиломатериалов Бобрактор — удобное и эффективное транспортное средство.</p><p>На территории академгородка существуют правила дорожного движения — <span class="tex-span"><i>n</i></span> стрелок, параллельные осям координат. Эти стрелки не пересекаются и не касаются друг друга. Когда Бобрактор доезжает до какой-нибудь стрелки, то он поворачивается в направлении этой стрелки и продолжает свое движение либо до тех пор, пока не доедет до следующей стрелки, либо пока не покинет пределы академгородка. За одну единицу времени Бобрактор преодолевает ровно одну единицу расстояния. Можно считать, что для Бобрактора не существует никаких других препятствий.</p><p>Академики БАН хотят отправить новенький Бобрактор в НИИ «Академтрактор», а самого Умного Бобра — в аспирантуру, точить карандаши. У них есть <span class="tex-span"><i>q</i></span> планов, представляющих собой потенциальное стартовое положение Бобрактора <span class="tex-span">(<i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub>)</span>, начальный вектор движения <span class="tex-span"><i>w</i><sub class="lower-index"><i>i</i></sub></span> и время <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span>, прошедшее с начала побега.</p><p>Необходимо для каждого из <span class="tex-span"><i>q</i></span> планов определить, где будет находиться Умный Бобер через заданное время.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке содержится два целых числа: количество правил дорожного движения <span class="tex-span"><i>n</i></span> и размер академгородка <span class="tex-span"><i>b</i></span>, <span class="tex-span">0 ≤ <i>n</i></span>, <span class="tex-span">1 ≤ <i>b</i></span>. В последующих <span class="tex-span"><i>n</i></span> строках указаны сами правила. Каждая строка правил содержит четыре целых числа <span class="tex-span"><i>x</i><sub class="lower-index">0</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">0</sub></span>, <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">1</sub></span>, разделенных одиночными пробелами — начало и конец стрелки. Гарантируется, что все стрелки параллельны осям координат и не имеют общих точек. Все стрелки находятся внутри академгородка, то есть выполняется <span class="tex-span">0 ≤ <i>x</i><sub class="lower-index">0</sub>, <i>y</i><sub class="lower-index">0</sub>, <i>x</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">1</sub> ≤ <i>b</i></span>.</p><p>В последующей строке содержится целое число <span class="tex-span"><i>q</i></span> — количество планов академиков, <span class="tex-span">1 ≤ <i>q</i> ≤ 10<sup class="upper-index">5</sup></span>: <span class="tex-span"><i>i</i></span>-ый план представляет собой два целых числа, <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> — координаты Бобрактора в начальный момент времени, <span class="tex-span">0 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ <i>b</i></span>, символ <span class="tex-span"><i>w</i><sub class="lower-index"><i>i</i></sub></span>, принимающий значение <span class="tex-font-style-tt">U</span>, <span class="tex-font-style-tt">D</span>, <span class="tex-font-style-tt">L</span>, <span class="tex-font-style-tt">R</span> и задающий начальное направление вверх, вниз, влево или вправо соответственно (ось Y направлена вверх), а также <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span> — время, прошедшее с начала побега, <span class="tex-span">0 ≤ <i>t</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">15</sup></span>.</p><p><ul> <li> для получения 30 баллов требуется решить задачу при <span class="tex-span"><i>n</i>, <i>b</i> ≤ 30</span> (подзадача D1); </li><li> для получения 60 баллов требуется решить задачу при <span class="tex-span"><i>n</i>, <i>b</i> ≤ 1000</span> (подзадачи D1+D2); </li><li> для получения 100 баллов требуется решить задачу при <span class="tex-span"><i>n</i>, <i>b</i> ≤ 10<sup class="upper-index">5</sup></span> (подзадачи D1+D2+D3). </li></ul></p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>q</i></span> строк. В каждой строке должно содержаться два числа — координаты Бобрактора в конечный момент времени для каждого из планов. Если Умный Бобер успеет покинуть академгородок за время <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span>, то выведите координаты последней точки, которую он посетил внутри академгородка.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 3<br />0 0 0 1<br />0 2 2 2<br />3 3 2 3<br />12<br />0 0 L 0<br />0 0 L 1<br />0 0 L 2<br />0 0 L 3<br />0 0 L 4<br />0 0 L 5<br />0 0 L 6<br />2 0 U 2<br />2 0 U 3<br />3 0 U 5<br />1 3 D 2<br />1 3 R 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 0<br />0 1<br />0 2<br />1 2<br />2 2<br />3 2<br />3 2<br />2 2<br />3 2<br />1 3<br />2 2<br />1 3<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D3. Побег на Бобракторе</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>6 секунд</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>512 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Хватит это терпеть! Умный Бобер решил устроить побег из академгородка Бобруйской Академии Наук (БАН). БАН представляет собой квадрат <span class="tex-span"><i>b</i> × <i>b</i></span> на плоскости, ему принадлежат точки с координатами <span class="tex-span"><i>x</i>, <i>y</i></span> <span class="tex-span">(0 ≤ <i>x</i>, <i>y</i> ≤ <i>b</i>)</span>. А чтобы путь прошел быстрее и веселее, наш Умный Бобер соорудил из отечественных пиломатериалов Бобрактор — удобное и эффективное транспортное средство.</p><p>На территории академгородка существуют правила дорожного движения — <span class="tex-span"><i>n</i></span> стрелок, параллельные осям координат. Эти стрелки не пересекаются и не касаются друг друга. Когда Бобрактор доезжает до какой-нибудь стрелки, то он поворачивается в направлении этой стрелки и продолжает свое движение либо до тех пор, пока не доедет до следующей стрелки, либо пока не покинет пределы академгородка. За одну единицу времени Бобрактор преодолевает ровно одну единицу расстояния. Можно считать, что для Бобрактора не существует никаких других препятствий.</p><p>Академики БАН хотят отправить новенький Бобрактор в НИИ «Академтрактор», а самого Умного Бобра — в аспирантуру, точить карандаши. У них есть <span class="tex-span"><i>q</i></span> планов, представляющих собой потенциальное стартовое положение Бобрактора <span class="tex-span">(<i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub>)</span>, начальный вектор движения <span class="tex-span"><i>w</i><sub class="lower-index"><i>i</i></sub></span> и время <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span>, прошедшее с начала побега.</p><p>Необходимо для каждого из <span class="tex-span"><i>q</i></span> планов определить, где будет находиться Умный Бобер через заданное время.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке содержится два целых числа: количество правил дорожного движения <span class="tex-span"><i>n</i></span> и размер академгородка <span class="tex-span"><i>b</i></span>, <span class="tex-span">0 ≤ <i>n</i></span>, <span class="tex-span">1 ≤ <i>b</i></span>. В последующих <span class="tex-span"><i>n</i></span> строках указаны сами правила. Каждая строка правил содержит четыре целых числа <span class="tex-span"><i>x</i><sub class="lower-index">0</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">0</sub></span>, <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">1</sub></span>, разделенных одиночными пробелами — начало и конец стрелки. Гарантируется, что все стрелки параллельны осям координат и не имеют общих точек. Все стрелки находятся внутри академгородка, то есть выполняется <span class="tex-span">0 ≤ <i>x</i><sub class="lower-index">0</sub>, <i>y</i><sub class="lower-index">0</sub>, <i>x</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">1</sub> ≤ <i>b</i></span>.</p><p>В последующей строке содержится целое число <span class="tex-span"><i>q</i></span> — количество планов академиков, <span class="tex-span">1 ≤ <i>q</i> ≤ 10<sup class="upper-index">5</sup></span>: <span class="tex-span"><i>i</i></span>-ый план представляет собой два целых числа, <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> — координаты Бобрактора в начальный момент времени, <span class="tex-span">0 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ <i>b</i></span>, символ <span class="tex-span"><i>w</i><sub class="lower-index"><i>i</i></sub></span>, принимающий значение <span class="tex-font-style-tt">U</span>, <span class="tex-font-style-tt">D</span>, <span class="tex-font-style-tt">L</span>, <span class="tex-font-style-tt">R</span> и задающий начальное направление вверх, вниз, влево или вправо соответственно (ось Y направлена вверх), а также <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span> — время, прошедшее с начала побега, <span class="tex-span">0 ≤ <i>t</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">15</sup></span>.</p><p><ul> <li> для получения 30 баллов требуется решить задачу при <span class="tex-span"><i>n</i>, <i>b</i> ≤ 30</span> (подзадача D1); </li><li> для получения 60 баллов требуется решить задачу при <span class="tex-span"><i>n</i>, <i>b</i> ≤ 1000</span> (подзадачи D1+D2); </li><li> для получения 100 баллов требуется решить задачу при <span class="tex-span"><i>n</i>, <i>b</i> ≤ 10<sup class="upper-index">5</sup></span> (подзадачи D1+D2+D3). </li></ul></p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>q</i></span> строк. В каждой строке должно содержаться два числа — координаты Бобрактора в конечный момент времени для каждого из планов. Если Умный Бобер успеет покинуть академгородок за время <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span>, то выведите координаты последней точки, которую он посетил внутри академгородка.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 3<br />0 0 0 1<br />0 2 2 2<br />3 3 2 3<br />12<br />0 0 L 0<br />0 0 L 1<br />0 0 L 2<br />0 0 L 3<br />0 0 L 4<br />0 0 L 5<br />0 0 L 6<br />2 0 U 2<br />2 0 U 3<br />3 0 U 5<br />1 3 D 2<br />1 3 R 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 0<br />0 1<br />0 2<br />1 2<br />2 2<br />3 2<br />3 2<br />2 2<br />3 2<br />1 3<br />2 2<br />1 3<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E1. Дежа вю</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Как известно, мы все давно загружены в Матрицу. И в новой, седьмой версии Матрицы миром правят бобры.</p><p>Вот взять, скажем, бобра Нео. У Нео бывают так называемые всплески «дежа вю», когда ему мерещатся события о каком-то месте, где он был или побывает. Изучим этот феномен поподробнее.</p><p>Можно сказать, что родной город Нео представляет собой ориентированный граф, состоящий из <span class="tex-span"><i>n</i></span> магазинов и <span class="tex-span"><i>m</i></span> улиц, соединяющих эти магазины. Никакие две улицы не соединяют одну и ту же пару магазинов (в том числе не может быть одной улицы туда и одной улицы обратно). Никакая улица не соединяет магазин с собой. Во время прохождения некоторых улиц у Нео проявляются видения, причем сколько бы он раз не прошел по улице <span class="tex-span"><i>k</i></span>, каждый раз его будут посещать одни и те же видения и в том же самом порядке. Видения проявляются исключительно о магазинах.</p><p>Известно, что Нео будет по-настоящему шокирован, если он пройдет путь от некоторого магазина <span class="tex-span"><i>a</i></span> до некоторого магазина <span class="tex-span"><i>b</i></span>, возможно совпадающего с <span class="tex-span"><i>a</i></span>, такой, что список посещенных магазинов в реальности и в видениях совпадет точь-в-точь.</p><p>Предложите бобру Нео такой путь ненулевой длины. А может даже получится посчитать количество таких путей по модулю <span class="tex-span">1000000007</span> <span class="tex-span">(10<sup class="upper-index">9</sup> + 7)</span>?..</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> — количество магазинов и количество улиц соответственно, <span class="tex-span">1 ≤ <i>n</i> ≤ 50</span>, <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/8ea7e8d4963d7e2e692b960f3208e1550d376981.png" />. В последующих <span class="tex-span"><i>m</i></span> строках содержится описание улиц в следующем формате: <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>k</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>v</i><sub class="lower-index">1</sub></span> <span class="tex-span"><i>v</i><sub class="lower-index">2</sub></span> ... <span class="tex-span"><i>v</i><sub class="lower-index"><i>k</i></sub></span>, где <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>, <i>x</i><sub class="lower-index"><i>i</i></sub> ≠ <i>y</i><sub class="lower-index"><i>i</i></sub>)</span> — номера магазинов, соединенных улицей, <span class="tex-span"><i>k</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(0 ≤ <i>k</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>)</span> — количество видений на пути из <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> в <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span>; <span class="tex-span"><i>v</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>v</i><sub class="lower-index">2</sub></span>, ..., <span class="tex-span"><i>v</i><sub class="lower-index"><i>k</i></sub></span> <span class="tex-span">(1 ≤ <i>v</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>)</span> описывают сами видения — номера магазинов, которые увидел Нео. Обратите внимание, что порядок видений важен.</p><p>Гарантируется, что суммарное количество видений на всех улицах не превосходит <span class="tex-span">10<sup class="upper-index">5</sup></span>.</p><p><ul> <li> для получения 50 баллов требуется найти любой (не обязательно простой) путь длины не более <span class="tex-span">2·<i>n</i></span>, удовлетворяющий описанным выше свойствам (подзадача E1); </li><li> для получения еще 50 баллов требуется для каждой длины от <span class="tex-span">1</span> до <span class="tex-span">2·<i>n</i></span> посчитать количество путей, обладающих описанным выше свойством (подзадача E2). </li></ul></p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Подзадача E1. В первой строке выведите целое число <span class="tex-span"><i>k</i></span> <span class="tex-span">(1 ≤ <i>k</i> ≤ 2·<i>n</i>)</span> — количество магазинов на пути Нео. В следующей строке выведите <span class="tex-span"><i>k</i></span> чисел — номера магазинов в порядке обхода. Если в графе требуемых путей нет или длина кратчайшего из них включает в себя более, чем <span class="tex-span">2·<i>n</i></span> магазинов, выведите в единственной строке <span class="tex-span">0</span>.</p><p>Подзадача E2. Выведите <span class="tex-span">2·<i>n</i></span> строк. В <span class="tex-span"><i>i</i></span>-ой строке должно содержаться единственное число — количество искомых путей длины <span class="tex-span"><i>i</i></span> по модулю <span class="tex-span">1000000007</span> <span class="tex-span">(10<sup class="upper-index">9</sup> + 7)</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6 6<br />1 2 2 1 2<br />2 3 1 3<br />3 4 2 4 5<br />4 5 0<br />5 3 1 3<br />6 1 1 6<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br />6 1 2 3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>6 6<br />1 2 2 1 2<br />2 3 1 3<br />3 4 2 4 5<br />4 5 0<br />5 3 1 3<br />6 1 1 6<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br />2<br />1<br />1<br />2<br />1<br />1<br />2<br />1<br />1<br />2<br />1</pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Входные данные в примерах одинаковы. В первом примере приведен ответ для первой подзадачи, во втором — для второй.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E2. Дежа вю</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Как известно, мы все давно загружены в Матрицу. И в новой, седьмой версии Матрицы миром правят бобры.</p><p>Вот взять, скажем, бобра Нео. У Нео бывают так называемые всплески «дежа вю», когда ему мерещатся события о каком-то месте, где он был или побывает. Изучим этот феномен поподробнее.</p><p>Можно сказать, что родной город Нео представляет собой ориентированный граф, состоящий из <span class="tex-span"><i>n</i></span> магазинов и <span class="tex-span"><i>m</i></span> улиц, соединяющих эти магазины. Никакие две улицы не соединяют одну и ту же пару магазинов (в том числе не может быть одной улицы туда и одной улицы обратно). Никакая улица не соединяет магазин с собой. Во время прохождения некоторых улиц у Нео проявляются видения, причем сколько бы он раз не прошел по улице <span class="tex-span"><i>k</i></span>, каждый раз его будут посещать одни и те же видения и в том же самом порядке. Видения проявляются исключительно о магазинах.</p><p>Известно, что Нео будет по-настоящему шокирован, если он пройдет путь от некоторого магазина <span class="tex-span"><i>a</i></span> до некоторого магазина <span class="tex-span"><i>b</i></span>, возможно совпадающего с <span class="tex-span"><i>a</i></span>, такой, что список посещенных магазинов в реальности и в видениях совпадет точь-в-точь.</p><p>Предложите бобру Нео такой путь ненулевой длины. А может даже получится посчитать количество таких путей по модулю <span class="tex-span">1000000007</span> <span class="tex-span">(10<sup class="upper-index">9</sup> + 7)</span>?..</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> — количество магазинов и количество улиц соответственно, <span class="tex-span">1 ≤ <i>n</i> ≤ 50</span>, <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/8ea7e8d4963d7e2e692b960f3208e1550d376981.png" />. В последующих <span class="tex-span"><i>m</i></span> строках содержится описание улиц в следующем формате: <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>k</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>v</i><sub class="lower-index">1</sub></span> <span class="tex-span"><i>v</i><sub class="lower-index">2</sub></span> ... <span class="tex-span"><i>v</i><sub class="lower-index"><i>k</i></sub></span>, где <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>, <i>x</i><sub class="lower-index"><i>i</i></sub> ≠ <i>y</i><sub class="lower-index"><i>i</i></sub>)</span> — номера магазинов, соединенных улицей, <span class="tex-span"><i>k</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(0 ≤ <i>k</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>)</span> — количество видений на пути из <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> в <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span>; <span class="tex-span"><i>v</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>v</i><sub class="lower-index">2</sub></span>, ..., <span class="tex-span"><i>v</i><sub class="lower-index"><i>k</i></sub></span> <span class="tex-span">(1 ≤ <i>v</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>)</span> описывают сами видения — номера магазинов, которые увидел Нео. Обратите внимание, что порядок видений важен.</p><p>Гарантируется, что суммарное количество видений на всех улицах не превосходит <span class="tex-span">10<sup class="upper-index">5</sup></span>.</p><p><ul> <li> для получения 50 баллов требуется найти любой (не обязательно простой) путь длины не более <span class="tex-span">2·<i>n</i></span>, удовлетворяющий описанным выше свойствам (подзадача E1); </li><li> для получения еще 50 баллов требуется для каждой длины от <span class="tex-span">1</span> до <span class="tex-span">2·<i>n</i></span> посчитать количество путей, обладающих описанным выше свойством (подзадача E2). </li></ul></p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Подзадача E1. В первой строке выведите целое число <span class="tex-span"><i>k</i></span> <span class="tex-span">(1 ≤ <i>k</i> ≤ 2·<i>n</i>)</span> — количество магазинов на пути Нео. В следующей строке выведите <span class="tex-span"><i>k</i></span> чисел — номера магазинов в порядке обхода. Если в графе требуемых путей нет или длина кратчайшего из них включает в себя более, чем <span class="tex-span">2·<i>n</i></span> магазинов, выведите в единственной строке <span class="tex-span">0</span>.</p><p>Подзадача E2. Выведите <span class="tex-span">2·<i>n</i></span> строк. В <span class="tex-span"><i>i</i></span>-ой строке должно содержаться единственное число — количество искомых путей длины <span class="tex-span"><i>i</i></span> по модулю <span class="tex-span">1000000007</span> <span class="tex-span">(10<sup class="upper-index">9</sup> + 7)</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6 6<br />1 2 2 1 2<br />2 3 1 3<br />3 4 2 4 5<br />4 5 0<br />5 3 1 3<br />6 1 1 6<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br />6 1 2 3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>6 6<br />1 2 2 1 2<br />2 3 1 3<br />3 4 2 4 5<br />4 5 0<br />5 3 1 3<br />6 1 1 6<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br />2<br />1<br />1<br />2<br />1<br />1<br />2<br />1<br />1<br />2<br />1</pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Входные данные в примерах одинаковы. В первом примере приведен ответ для первой подзадачи, во втором — для второй.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
