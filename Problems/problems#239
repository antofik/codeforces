
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="b6h8h5bd19db58db8aba9066c29dac2h"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="rdpjkyh8nvki"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='b6h8h5bd19db58db8aba9066c29dac2h'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Round #148 (Div. 2)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Два Мешка Картошки</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>У Валеры было два мешка картошки, в первом из них было <span class="tex-span"><i>x</i></span> <span class="tex-span">(<i>x</i> ≥ 1)</span> картофелин, а во втором — <span class="tex-span"><i>y</i></span> <span class="tex-span">(<i>y</i> ≥ 1)</span> картофелин. Валера — очень рассеянный мальчик, поэтому первый мешок картошки (в нем было <span class="tex-span"><i>x</i></span> картофелин) Валера потерял. Валера хорошо помнит, что суммарное количество картофелин <span class="tex-span">(<i>x</i> + <i>y</i>)</span> в обоих мешках, во-первых, было не больше <span class="tex-span"><i>n</i></span>, a, во-вторых, делилось на <span class="tex-span"><i>k</i></span>.</p><p>Помогите Валере определить сколько картофелин могло быть в первом мешке. Выведите все такие возможные количества в возрастающем порядке.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны три целых числа через пробел <span class="tex-span"><i>y</i></span>, <span class="tex-span"><i>k</i></span>, <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>y</i>, <i>k</i>, <i>n</i> ≤ 10<sup class="upper-index">9</sup>;</span> <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/e8f8616e518b67af73332593c4c73ae9f207dc04.png" /> <span class="tex-span"> ≤ 10<sup class="upper-index">5</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите список целых чисел разделенных пробельными символами — все возможные значения <span class="tex-span"><i>x</i></span> в возрастающем порядке. Каждое значение, должно быть выведено ровно один раз. </p><p>Если нет ни одного подходящего значения <span class="tex-span"><i>x</i></span>, выведите единственное целое число -1.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>10 1 10<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>10 6 40<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2 8 14 20 26 <br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Простое Ленточное Программирование</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Существует язык программирования, в котором каждая программа представлена непустой последовательностью символов «<span class="tex-font-style-tt">&lt;</span>» и «<span class="tex-font-style-tt">&gt;</span>» и цифр. Объясним, как работает интерпретатор этого языка программирования. Программа интерпретируется посредством движения указателя команды (IP), который состоит из двух частей.</p><p><ul> <li> Указатель текущего символа (CP); </li><li> Указатель направления (DP), который может указывать налево или направо; </li></ul></p><p>Изначально CP указывает на крайний левый символ в последовательности, а DP указывает направо.</p><p>Мы повторяем следующие шаги до тех пор, пока CP впервые укажет куда-то за пределы последовательности.</p><p><ul> <li> Если CP указывает на цифру, то интерпретатор выводит эту цифру. Затем CP перемещается на один шаг согласно направлению DP. После этого значение написанной в последовательности цифры уменьшается на один. Если выведенная цифра была <span class="tex-span">0</span>, значит, ее нельзя уменьшить. Поэтому она удаляется из последовательности, и длина последовательности уменьшается на один. </li><li> Если CP указывает на «<span class="tex-font-style-tt">&lt;</span>» или «<span class="tex-font-style-tt">&gt;</span>», то направление DP меняется на «влево» или «вправо», соответственно. Затем CP двигается на один шаг согласно DP. Если новый символ, на который указывает CP — это «<span class="tex-font-style-tt">&lt;</span>» или «<span class="tex-font-style-tt">&gt;</span>», то предыдущий символ будет удален из последовательности. </li></ul></p><p>Если в какой-то момент выполнения программы CP выходит за пределы последовательности, то выполнение программы завершается. </p><p>Очевидно, что любая программа на этом языке завершается после некоторого количества шагов.</p><p>У Вас есть последовательность <span class="tex-span"><i>s</i><sub class="lower-index">1</sub>, <i>s</i><sub class="lower-index">2</sub>, ..., <i>s</i><sub class="lower-index"><i>n</i></sub></span>, состоящая из символов «<span class="tex-font-style-tt">&lt;</span>», «<span class="tex-font-style-tt">&gt;</span>» и чисел. Вы должны ответить на <span class="tex-span"><i>q</i></span> запросов. Каждый запрос характеризуется двумя целыми числами <span class="tex-span"><i>l</i></span> и <span class="tex-span"><i>r</i></span> и спрашивает, сколько раз будет выведена каждая цифра, если мы запустим последовательность <span class="tex-span"><i>s</i><sub class="lower-index"><i>l</i></sub>, <i>s</i><sub class="lower-index"><i>l</i> + 1</sub>, ..., <i>s</i><sub class="lower-index"><i>r</i></sub></span> как независимую программу на описанном языке.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных содержатся два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>q</i></span> <span class="tex-span">(1 ≤ <i>n</i>, <i>q</i> ≤ 100)</span> — длина последовательности <span class="tex-span"><i>s</i></span> и количество запросов. </p><p>Вторая строка содержит <span class="tex-span"><i>s</i></span>, последовательность из «<span class="tex-font-style-tt">&lt;</span>», «<span class="tex-font-style-tt">&gt;</span>» и цифр (<span class="tex-font-style-tt">0..9</span>), записанных слева направо. Заметьте, что символы <span class="tex-span"><i>s</i></span> не разделяются пробелами. </p><p>Каждая из следующих <span class="tex-span"><i>q</i></span> строк содержит по два целых числа <span class="tex-span"><i>l</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>r</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>l</i><sub class="lower-index"><i>i</i></sub> ≤ <i>r</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>)</span> — <span class="tex-span"><i>i</i></span>-ый запрос.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждого запроса выведите <span class="tex-span">10</span> целых чисел, записанных через пробел: <span class="tex-span"><i>x</i><sub class="lower-index">0</sub>, <i>x</i><sub class="lower-index">1</sub>, ..., <i>x</i><sub class="lower-index">9</sub></span>, где <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> равняется количеству выведенных цифр <span class="tex-span"><i>i</i></span> при выполнении соответствующей программы из запроса. Выводите ответы на запросы в том порядке, в каком запросы даны во входных данных.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>7 4<br />1&gt;3&gt;22&lt;<br />1 3<br />4 7<br />7 7<br />1 7<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 1 0 1 0 0 0 0 0 0 <br />2 2 2 0 0 0 0 0 0 0 <br />0 0 0 0 0 0 0 0 0 0 <br />2 3 2 1 0 0 0 0 0 0 <br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Шерстяная Последовательность</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Последовательность неотрицательных целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> длины <span class="tex-span"><i>n</i></span> называется <span class="tex-font-style-it">шерстяной последовательностью</span> тогда и только тогда, когда существует два целых числа <span class="tex-span"><i>l</i></span> и <span class="tex-span"><i>r</i></span> <span class="tex-span">(1 ≤ <i>l</i> ≤ <i>r</i> ≤ <i>n</i>)</span>, таких, что <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/9219edd0b72e5f72af3aa48a488d5734a75213f9.png" />. Иными словами, шерстяная последовательность содержит подпоследовательность из последовательных элементов, xor которых равен 0.</p><p>Выражение <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/b364f2e04c665b78b924ec10666327a4ef4635bc.png" /> означает применение побитовой операции xor к числам <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span>. Данная операция существует во всех современных языках программирования, например, в языках <span class="tex-font-style-it">C++</span> и <span class="tex-font-style-it">Java</span> она обозначена как «<span class="tex-font-style-tt">^</span>», в <span class="tex-font-style-it">Pascal</span> — как «<span class="tex-font-style-tt">xor</span>».</p><p>В этой задаче Вас попросили подсчитать количество последовательностей, составленных из <span class="tex-span"><i>n</i></span> чисел от 0 до <span class="tex-span">2<sup class="upper-index"><i>m</i></sup> - 1</span>, не являющихся шерстяными последовательностями. Выведите это количество по модулю <span class="tex-span">1000000009</span> <span class="tex-span">(10<sup class="upper-index">9</sup> + 9)</span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Единственная строка входных данных содержит через пробел целые числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> <span class="tex-span">(1 ≤ <i>n</i>, <i>m</i> ≤ 10<sup class="upper-index">5</sup>)</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственной строке выходных данных выведите искомое количество последовательностей по модулю <span class="tex-span">1000000009</span> <span class="tex-span">(10<sup class="upper-index">9</sup> + 9)</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Последовательности длины <span class="tex-span">3</span>, сделанные из целых чисел 0, 1, 2 и 3, не являющиеся шерстяными последовательностями, таковы: <span class="tex-font-style-tt">(1, 3, 1)</span>, <span class="tex-font-style-tt">(1, 2, 1)</span>, <span class="tex-font-style-tt">(2, 1, 2)</span>, <span class="tex-font-style-tt">(2, 3, 2)</span>, <span class="tex-font-style-tt">(3, 1, 3)</span> и <span class="tex-font-style-tt">(3, 2, 3)</span>.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Скучное Разбиение</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Эта задача самая скучная из всех, которые Вы когда-либо видели. </p><p>Дана последовательность целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> и неотрицательное целое число <span class="tex-span"><i>h</i></span>, наша задача — разбить последовательность на две подпоследовательности (не обязательно состоящие из подряд идущих элементов). Каждый элемент исходной последовательности должен содержаться ровно в одной из полученных подпоследовательностей. Заметьте, что одна из полученных подпоследовательностей может быть пустой.</p><p>Определим функцию <span class="tex-span"><i>f</i>(<i>a</i><sub class="lower-index"><i>i</i></sub>, <i>a</i><sub class="lower-index"><i>j</i></sub>)</span>, аргументами которой являются два различных элемента (то есть, <span class="tex-span"><i>i</i> ≠ <i>j</i></span>) исходной последовательности. Если <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>a</i><sub class="lower-index"><i>j</i></sub></span> находятся в одной и той же подпоследовательности в текущем разбиении, <span class="tex-span"><i>f</i>(<i>a</i><sub class="lower-index"><i>i</i></sub>, <i>a</i><sub class="lower-index"><i>j</i></sub>) = <i>a</i><sub class="lower-index"><i>i</i></sub> + <i>a</i><sub class="lower-index"><i>j</i></sub></span> в противном случае <span class="tex-span"><i>f</i>(<i>a</i><sub class="lower-index"><i>i</i></sub>, <i>a</i><sub class="lower-index"><i>j</i></sub>) = <i>a</i><sub class="lower-index"><i>i</i></sub> + <i>a</i><sub class="lower-index"><i>j</i></sub> + <i>h</i></span>. </p><p>Рассмотрим все возможные значения функции <span class="tex-span"><i>f</i></span> для некоторого разбиения. Назовем <span class="tex-font-style-it">хорошестью</span> данного разбиения разность между максимальным значением функции <span class="tex-span"><i>f</i></span> и минимальным значением функции <span class="tex-span"><i>f</i></span>.</p><p>Ваша задача — найти разбиение данной последовательности <span class="tex-span"><i>a</i></span>, которое имеет минимально возможную хорошесть среди всех возможных разбиений.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит целые числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>h</i></span> <span class="tex-span">(2 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup>, 0 ≤ <i>h</i> ≤ 10<sup class="upper-index">8</sup>)</span>. Во второй строке записан список <span class="tex-span"><i>n</i></span> целых чисел через пробел, обозначающих <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> <span class="tex-span">(0 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">8</sup>)</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Первая строка выходных данных должна содержать искомую минимальную хорошесть.</p><p>Вторая строка описывает оптимальное разбиение. Выведите <span class="tex-span"><i>n</i></span> разделенных пробелами целых чисел: <span class="tex-span"><i>i</i></span>-ое целое число равняется <span class="tex-span">1</span>, если <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> находится в первой подпоследовательности, в противном случае оно должно равняться <span class="tex-span">2</span>.</p><p>Если есть несколько возможных правильных ответов, Вам разрешается вывести любой.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 2<br />1 2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br />1 2 2 <br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5 10<br />0 1 0 2 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />2 2 2 2 2 <br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере значения <span class="tex-span"><i>f</i></span> таковы: <span class="tex-span"><i>f</i>(1, 2) = 1 + 2 + 2 = 5</span>, <span class="tex-span"><i>f</i>(1, 3) = 1 + 3 + 2 = 6</span> и <span class="tex-span"><i>f</i>(2, 3) = 2 + 3 = 5</span>. Таким образом, разность между максимальным и минимальным значением <span class="tex-span"><i>f</i></span> равняется <span class="tex-span">1</span>.</p><p>Во втором примере значение <span class="tex-span"><i>h</i></span> велико, следовательно, лучше оставить одну из подпоследовательностей пустой.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Братья-Пожиратели Мира</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вы, наверное, слышали о двух братьях, мечтающих править миром. Коль скоро все их предыдущие планы провалились, на этот раз они решили сотрудничать друг с другом для того, чтобы править миром.</p><p>Как вы знаете, в мире существует <span class="tex-span"><i>n</i></span> стран. Эти страны связаны <span class="tex-span"><i>n</i> - 1</span> направленными дорогами. Если не учитывать направлений дорог, то между каждой парой стран в мире существует уникальный путь, проходящий по каждой дороге не более одного раза.</p><p>Каждый из братьев хочет установить свое правление в какой-то стране, сделав это, он сможет контролировать страны, до которых можно добраться из его страны по направленным дорогам.</p><p>Братья смогут править миром, если найдется не более двух стран, которые они могут выбрать (и установить свои правления в этих странах), таких, что любая другая страна находится под контролем по крайней мере одной из них. Для того, чтобы сделать это возможным, братья хотят, изменить направление минимального количества дорог. Ваша задача — вычислить это минимальное количество дорог.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит целое число <span class="tex-span"><i>n</i></span> <span class="tex-span">(1 ≤ <i>n</i> ≤ 3000)</span>. Каждая из последующих <span class="tex-span"><i>n</i> - 1</span> строк содержит два целых числа, разделенных пробелом, <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>; <i>a</i><sub class="lower-index"><i>i</i></sub> ≠ <i>b</i><sub class="lower-index"><i>i</i></sub>)</span>, которые означают, что есть дорога из страны <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> в страну <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span>.</p><p>Вы можете считать страны пронумерованными от 1 до <span class="tex-span"><i>n</i></span>. Гарантируется, что если не учитывать направление дорог, то есть уникальный путь между каждой парой стран в мире, проходящий по каждой дороге не более одного раза.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственной строке выходных данных выведите минимальное количество дорог, которым надо поменять направление для того, чтобы братья смогли управлять миром.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4<br />2 1<br />3 1<br />4 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />2 1<br />2 3<br />4 3<br />4 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
