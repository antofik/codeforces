
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="b3d8f6342bec0fc08f72a5403a8cff14"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="10lr1v84dpy8d"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='b3d8f6342bec0fc08f72a5403a8cff14'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
            <div style="padding:1em 0 0 2px;color:#C60C30;font-size:18px;font-weight:bold;">
<a href="/abbyycup20"><img src="http://www.abbyy.ru/images/logo.gif"/></a>
<span style="padding:1.5em;position:relative;bottom:7px;">Умный Бобер ждет вас на ABBYY Cup 2.0!</span>
</div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">ABBYY Cup 2.0 - Easy</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A1. Хорошие элементы матрицы</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Умный Бобер из ABBYY увлекся изучением квадратных матриц. Сейчас он занят исследованием матрицы размера <span class="tex-span"><i>n</i> × <i>n</i></span>, где <span class="tex-span"><i>n</i></span> — нечетно. Умный Бобер считает хорошими следующие элементы матрицы:  <ul> <li> Элементы главной диагонали.  </li><li> Элементы побочной диагонали.  </li><li> Элементы «средней» строки — строки, ниже которой и выше которой находится ровно по <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/55e8f30a55c1086f22e41e6036894dfd3c68d3a3.png" /> строк.  </li><li> Элементы «среднего» столбца — столбца, левее которого и правее которого находится ровно по <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/55e8f30a55c1086f22e41e6036894dfd3c68d3a3.png" /> столбцов. </li></ul></p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/5d4040b1701244b5ef46da7bc920ea728ad9f5dd.png" />   <span class="tex-font-size-script"> На рисунке изображена матрица <span class="tex-span">5 × 5</span>.   Зеленым цветом отмечены хорошие элементы. </span> </center></p><p>Помогите Умному Бобру подсчитать сумму хороших элементов заданной матрицы.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит единственное целое нечетное число <span class="tex-span"><i>n</i></span>. Следующие <span class="tex-span"><i>n</i></span> строк входных данных содержат по <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>ij</i></sub></span> <span class="tex-span">(0 ≤ <i>a</i><sub class="lower-index"><i>ij</i></sub> ≤ 100)</span>, разделенных единичными пробелами, — элементы заданной матрицы.</p><p>Ограничения на входные данные для получения 30 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>n</i> ≤ 5</span> </li></ul></p><p>Ограничения на входные данные для получения 100 баллов:</p><p><ul> <li> <span class="tex-span">1 ≤ <i>n</i> ≤ 101</span> </li></ul></p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — сумму хороших элементов матрицы.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />1 2 3<br />4 5 6<br />7 8 9<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>45<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />1 1 1 1 1<br />1 1 1 1 1<br />1 1 1 1 1<br />1 1 1 1 1<br />1 1 1 1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>17<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере хорошими будут все элементы матрицы. Хорошие элементы матрицы из второго примера изображены на рисунке.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A2. Хорошие элементы матрицы</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Умный Бобер из ABBYY увлекся изучением квадратных матриц. Сейчас он занят исследованием матрицы размера <span class="tex-span"><i>n</i> × <i>n</i></span>, где <span class="tex-span"><i>n</i></span> — нечетно. Умный Бобер считает хорошими следующие элементы матрицы:  <ul> <li> Элементы главной диагонали.  </li><li> Элементы побочной диагонали.  </li><li> Элементы «средней» строки — строки, ниже которой и выше которой находится ровно по <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/55e8f30a55c1086f22e41e6036894dfd3c68d3a3.png" /> строк.  </li><li> Элементы «среднего» столбца — столбца, левее которого и правее которого находится ровно по <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/55e8f30a55c1086f22e41e6036894dfd3c68d3a3.png" /> столбцов. </li></ul></p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/5d4040b1701244b5ef46da7bc920ea728ad9f5dd.png" />   <span class="tex-font-size-script"> На рисунке изображена матрица <span class="tex-span">5 × 5</span>.   Зеленым цветом отмечены хорошие элементы. </span> </center></p><p>Помогите Умному Бобру подсчитать сумму хороших элементов заданной матрицы.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит единственное целое нечетное число <span class="tex-span"><i>n</i></span>. Следующие <span class="tex-span"><i>n</i></span> строк входных данных содержат по <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>ij</i></sub></span> <span class="tex-span">(0 ≤ <i>a</i><sub class="lower-index"><i>ij</i></sub> ≤ 100)</span>, разделенных единичными пробелами, — элементы заданной матрицы.</p><p>Ограничения на входные данные для получения 30 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>n</i> ≤ 5</span> </li></ul></p><p>Ограничения на входные данные для получения 100 баллов:</p><p><ul> <li> <span class="tex-span">1 ≤ <i>n</i> ≤ 101</span> </li></ul></p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — сумму хороших элементов матрицы.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />1 2 3<br />4 5 6<br />7 8 9<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>45<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />1 1 1 1 1<br />1 1 1 1 1<br />1 1 1 1 1<br />1 1 1 1 1<br />1 1 1 1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>17<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере хорошими будут все элементы матрицы. Хорошие элементы матрицы из второго примера изображены на рисунке.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B1. Прямоугольная игра</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Умный Бобер из ABBYY решил устроить себе выходной. Но бездельничать целый день оказалось слишком скучно, и он решил поиграть в игру с камешками. Изначально у Бобра есть <span class="tex-span"><i>n</i></span> камешков. Он раскладывает их в <span class="tex-span"><i>a</i></span> одинаковых рядов по <span class="tex-span"><i>b</i></span> штук в каждом (<span class="tex-span"><i>a</i> &gt; 1</span>). Учтите, что Бобер обязательно использует все камешки, то есть <span class="tex-span"><i>n</i> = <i>a</i>·<i>b</i></span>.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/158d78785b93d9fa6b2c15419c78d1571aec480b.png" /> <span class="tex-font-size-script"> 10 камешков, разложенных в два ряда по 5 штук в каждом </span> </center></p><p>После того, как он разложил камешки, Умный Бобер забирает обратно любой из полученных рядов (то есть <span class="tex-span"><i>b</i></span> камешков) и выбрасывает все остальные камешки. Затем он снова раскладывает <span class="tex-font-style-bf">все</span> свои камешки (выбирая, возможно, другие <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span>) и снова забирает себе один ряд, и так далее. Игра продолжается до тех пор, пока в какой-то момент у Бобра не останется ровно один камешек.</p><p>Игровой процесс можно представить себе как конечную последовательность целых чисел <span class="tex-span"><i>c</i><sub class="lower-index">1</sub>, ..., <i>c</i><sub class="lower-index"><i>k</i></sub></span>, где: <ul> <li> <span class="tex-span"><i>c</i><sub class="lower-index">1</sub> = <i>n</i></span> </li><li> <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i> + 1</sub></span> — количество камешков, которые останутся у Бобра после <span class="tex-span"><i>i</i></span>-ого хода, то есть количество камешков в ряду некоторого разложения <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> камешков (<span class="tex-span">1 ≤ <i>i</i> &lt; <i>k</i></span>). Заметим, что <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub> &gt; <i>c</i><sub class="lower-index"><i>i</i> + 1</sub></span>. </li><li> <span class="tex-span"><i>c</i><sub class="lower-index"><i>k</i></sub> = 1</span> </li></ul></p><p>Результатом игры называется сумма чисел <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span>. Вам дано число <span class="tex-span"><i>n</i></span>. Найдите максимальный возможный результат игры.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Единственная строка входных данных содержит единственное целое число <span class="tex-span"><i>n</i></span> — начальное количество камешков у Умного Бобра.</p><p>Ограничения на входные данные для получения 30 баллов: <ul> <li> <span class="tex-span">2 ≤ <i>n</i> ≤ 50</span> </li></ul> </p><p>Ограничения на входные данные для получения 100 баллов: <ul> <li> <span class="tex-span">2 ≤ <i>n</i> ≤ 10<sup class="upper-index">9</sup></span> </li></ul> </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — максимальный возможный результат игры.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>10<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>16<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>8<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>15<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Рассмотрим первый пример (<span class="tex-span"><i>c</i><sub class="lower-index">1</sub> = 10</span>). Возможные варианты развития игры:</p><p><ul> <li> Можно разложить камешки в 10 рядов по одному в каждом. Тогда <span class="tex-span"><i>c</i><sub class="lower-index">2</sub> = 1</span>, и игра закончится после первого же хода с результатом 11. </li><li> Можно разложить камешки в 5 рядов по два камешка в каждом. Тогда <span class="tex-span"><i>c</i><sub class="lower-index">2</sub> = 2</span>, и игра продолжается. На втором ходе 2 камешка можно разложить единственным способом (помните, что выкладывать все камешки в один ряд нельзя!) — в 2 ряда по одному камешку. <span class="tex-span"><i>c</i><sub class="lower-index">3</sub> = 1</span>, и игра закончится с результатом 13. </li><li> Наконец, можно разложить камешки в 2 ряда по пять камешков. Аналогичными рассуждениями получим <span class="tex-span"><i>c</i><sub class="lower-index">2</sub> = 5, <i>c</i><sub class="lower-index">3</sub> = 1</span>, и игра закончится с результатом 16 — максимальным из возможных. </li></ul></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B2. Прямоугольная игра</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Умный Бобер из ABBYY решил устроить себе выходной. Но бездельничать целый день оказалось слишком скучно, и он решил поиграть в игру с камешками. Изначально у Бобра есть <span class="tex-span"><i>n</i></span> камешков. Он раскладывает их в <span class="tex-span"><i>a</i></span> одинаковых рядов по <span class="tex-span"><i>b</i></span> штук в каждом (<span class="tex-span"><i>a</i> &gt; 1</span>). Учтите, что Бобер обязательно использует все камешки, то есть <span class="tex-span"><i>n</i> = <i>a</i>·<i>b</i></span>.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/158d78785b93d9fa6b2c15419c78d1571aec480b.png" /> <span class="tex-font-size-script"> 10 камешков, разложенных в два ряда по 5 штук в каждом </span> </center></p><p>После того, как он разложил камешки, Умный Бобер забирает обратно любой из полученных рядов (то есть <span class="tex-span"><i>b</i></span> камешков) и выбрасывает все остальные камешки. Затем он снова раскладывает <span class="tex-font-style-bf">все</span> свои камешки (выбирая, возможно, другие <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span>) и снова забирает себе один ряд, и так далее. Игра продолжается до тех пор, пока в какой-то момент у Бобра не останется ровно один камешек.</p><p>Игровой процесс можно представить себе как конечную последовательность целых чисел <span class="tex-span"><i>c</i><sub class="lower-index">1</sub>, ..., <i>c</i><sub class="lower-index"><i>k</i></sub></span>, где: <ul> <li> <span class="tex-span"><i>c</i><sub class="lower-index">1</sub> = <i>n</i></span> </li><li> <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i> + 1</sub></span> — количество камешков, которые останутся у Бобра после <span class="tex-span"><i>i</i></span>-ого хода, то есть количество камешков в ряду некоторого разложения <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> камешков (<span class="tex-span">1 ≤ <i>i</i> &lt; <i>k</i></span>). Заметим, что <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub> &gt; <i>c</i><sub class="lower-index"><i>i</i> + 1</sub></span>. </li><li> <span class="tex-span"><i>c</i><sub class="lower-index"><i>k</i></sub> = 1</span> </li></ul></p><p>Результатом игры называется сумма чисел <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span>. Вам дано число <span class="tex-span"><i>n</i></span>. Найдите максимальный возможный результат игры.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Единственная строка входных данных содержит единственное целое число <span class="tex-span"><i>n</i></span> — начальное количество камешков у Умного Бобра.</p><p>Ограничения на входные данные для получения 30 баллов: <ul> <li> <span class="tex-span">2 ≤ <i>n</i> ≤ 50</span> </li></ul> </p><p>Ограничения на входные данные для получения 100 баллов: <ul> <li> <span class="tex-span">2 ≤ <i>n</i> ≤ 10<sup class="upper-index">9</sup></span> </li></ul> </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — максимальный возможный результат игры.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>10<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>16<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>8<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>15<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Рассмотрим первый пример (<span class="tex-span"><i>c</i><sub class="lower-index">1</sub> = 10</span>). Возможные варианты развития игры:</p><p><ul> <li> Можно разложить камешки в 10 рядов по одному в каждом. Тогда <span class="tex-span"><i>c</i><sub class="lower-index">2</sub> = 1</span>, и игра закончится после первого же хода с результатом 11. </li><li> Можно разложить камешки в 5 рядов по два камешка в каждом. Тогда <span class="tex-span"><i>c</i><sub class="lower-index">2</sub> = 2</span>, и игра продолжается. На втором ходе 2 камешка можно разложить единственным способом (помните, что выкладывать все камешки в один ряд нельзя!) — в 2 ряда по одному камешку. <span class="tex-span"><i>c</i><sub class="lower-index">3</sub> = 1</span>, и игра закончится с результатом 13. </li><li> Наконец, можно разложить камешки в 2 ряда по пять камешков. Аналогичными рассуждениями получим <span class="tex-span"><i>c</i><sub class="lower-index">2</sub> = 5, <i>c</i><sub class="lower-index">3</sub> = 1</span>, и игра закончится с результатом 16 — максимальным из возможных. </li></ul></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C1. Вечеринка</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В честь проведения второго турнира ABBYY Cup Умный Бобер решил устроить вечеринку. У Бобра много знакомых, и некоторые из них дружат друг с другом, а некоторые друг другу не нравятся. Чтобы вечеринка удалась на славу, Умный Бобер хочет пригласить только тех своих знакомых, которые дружат, и не приглашать тех, кто не нравится друг другу. Отношения дружбы и антипатии симметричны.</p><p>Более формально, для каждого приглашенного человека должны выполняться следующие условия: <ul> <li> все его друзья должны быть также приглашены на вечеринку; </li><li> среди приглашенных не должно быть людей, которые ему не нравятся; </li><li> все приглашенные на вечеринку должны быть связаны с ним дружбой напрямую или через цепь общих друзей произвольной длины. Будем говорить, что люди <span class="tex-span"><i>a</i><sub class="lower-index">1</sub></span> и <span class="tex-span"><i>a</i><sub class="lower-index"><i>p</i></sub></span> связаны цепью общих друзей, если существует последовательность людей <span class="tex-span"><i>a</i><sub class="lower-index">2</sub>, <i>a</i><sub class="lower-index">3</sub>, ..., <i>a</i><sub class="lower-index"><i>p</i> - 1</sub></span> такая, что все пары людей <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i> + 1</sub></span> (<span class="tex-span">1 ≤ <i>i</i> &lt; <i>p</i></span>) — друзья. </li></ul></p><p>Помогите Бобру определить максимальное количество знакомых, которых он сможет пригласить.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записано целое число <span class="tex-span"><i>n</i></span> — количество знакомых Бобра. </p><p>Во второй строке записано целое число <span class="tex-span"><i>k</i></span> <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/4723a08673d63c25b651f89d58d47e46a4430ea9.png" /> — количество пар друзей. В следующих <span class="tex-span"><i>k</i></span> строках через пробел записаны пары чисел <span class="tex-span"><i>u</i><sub class="lower-index"><i>i</i></sub>, <i>v</i><sub class="lower-index"><i>i</i></sub></span> <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/447b0a18d2967dc78efba89fef879ac76d26c94a.png" /> — номера людей, которые входят в <span class="tex-span"><i>i</i></span>-ую пару друзей.</p><p>В следующей строке записано число <span class="tex-span"><i>m</i></span> <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/8c1e79cb16ccc4416463a48018b8621e92ff2f48.png" /> — количество пар людей, которые друг другу не нравятся. В следующих <span class="tex-span"><i>m</i></span> строках перечислены пары таких людей в том же формате, что и пары друзей.</p><p>Каждая пара людей упоминается во входных данных не более одного раза <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/9a7d2d374a0c2f92f490cea488df2d83503da07b.png" />. В частности, два человека не могут быть друзьями и одновременно не нравиться друг другу.</p><p>Ограничения на входные данные для получения 30 баллов: <ul> <li> <span class="tex-span">2 ≤ <i>n</i> ≤ 14</span> </li></ul> </p><p>Ограничения на входные данные для получения 100 баллов: <ul> <li> <span class="tex-span">2 ≤ <i>n</i> ≤ 2000</span> </li></ul> </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное число — максимальное количество людей, которых Бобер сможет пригласить на вечеринку. Если группу людей, удовлетворяющую всем требованиям, выбрать невозможно, выведите 0.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>9<br />8<br />1 2<br />1 3<br />2 3<br />4 5<br />6 7<br />7 8<br />8 9<br />9 6<br />2<br />1 6<br />7 9<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3</pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Рассмотрим пример. <center> <img class="tex-graphics" src="http://codeforces.ru/renderer/c89167f597e66e26accf419fd20b583752b3732f.png" /> </center></p><p>Под условия задачи подходят две группы людей: <span class="tex-span">{1, 2, 3}</span> и <span class="tex-span">{4, 5}</span>, при этом ответом будет размер наибольшей из этих групп. Группа <span class="tex-span">{6, 7, 8, 9}</span> не подходит, так как в ней есть люди <span class="tex-span">7</span> и <span class="tex-span">9</span>, которые не нравятся друг другу. Группа <span class="tex-span">{1, 2, 3, 4, 5}</span> также не подходит, так как не все ее члены связаны цепью общих друзей (например, люди <span class="tex-span">2</span> и <span class="tex-span">5</span> не связаны).</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C2. Вечеринка</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В честь проведения второго турнира ABBYY Cup Умный Бобер решил устроить вечеринку. У Бобра много знакомых, и некоторые из них дружат друг с другом, а некоторые друг другу не нравятся. Чтобы вечеринка удалась на славу, Умный Бобер хочет пригласить только тех своих знакомых, которые дружат, и не приглашать тех, кто не нравится друг другу. Отношения дружбы и антипатии симметричны.</p><p>Более формально, для каждого приглашенного человека должны выполняться следующие условия: <ul> <li> все его друзья должны быть также приглашены на вечеринку; </li><li> среди приглашенных не должно быть людей, которые ему не нравятся; </li><li> все приглашенные на вечеринку должны быть связаны с ним дружбой напрямую или через цепь общих друзей произвольной длины. Будем говорить, что люди <span class="tex-span"><i>a</i><sub class="lower-index">1</sub></span> и <span class="tex-span"><i>a</i><sub class="lower-index"><i>p</i></sub></span> связаны цепью общих друзей, если существует последовательность людей <span class="tex-span"><i>a</i><sub class="lower-index">2</sub>, <i>a</i><sub class="lower-index">3</sub>, ..., <i>a</i><sub class="lower-index"><i>p</i> - 1</sub></span> такая, что все пары людей <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i> + 1</sub></span> (<span class="tex-span">1 ≤ <i>i</i> &lt; <i>p</i></span>) — друзья. </li></ul></p><p>Помогите Бобру определить максимальное количество знакомых, которых он сможет пригласить.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записано целое число <span class="tex-span"><i>n</i></span> — количество знакомых Бобра. </p><p>Во второй строке записано целое число <span class="tex-span"><i>k</i></span> <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/4723a08673d63c25b651f89d58d47e46a4430ea9.png" /> — количество пар друзей. В следующих <span class="tex-span"><i>k</i></span> строках через пробел записаны пары чисел <span class="tex-span"><i>u</i><sub class="lower-index"><i>i</i></sub>, <i>v</i><sub class="lower-index"><i>i</i></sub></span> <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/447b0a18d2967dc78efba89fef879ac76d26c94a.png" /> — номера людей, которые входят в <span class="tex-span"><i>i</i></span>-ую пару друзей.</p><p>В следующей строке записано число <span class="tex-span"><i>m</i></span> <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/8c1e79cb16ccc4416463a48018b8621e92ff2f48.png" /> — количество пар людей, которые друг другу не нравятся. В следующих <span class="tex-span"><i>m</i></span> строках перечислены пары таких людей в том же формате, что и пары друзей.</p><p>Каждая пара людей упоминается во входных данных не более одного раза <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/9a7d2d374a0c2f92f490cea488df2d83503da07b.png" />. В частности, два человека не могут быть друзьями и одновременно не нравиться друг другу.</p><p>Ограничения на входные данные для получения 30 баллов: <ul> <li> <span class="tex-span">2 ≤ <i>n</i> ≤ 14</span> </li></ul> </p><p>Ограничения на входные данные для получения 100 баллов: <ul> <li> <span class="tex-span">2 ≤ <i>n</i> ≤ 2000</span> </li></ul> </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное число — максимальное количество людей, которых Бобер сможет пригласить на вечеринку. Если группу людей, удовлетворяющую всем требованиям, выбрать невозможно, выведите 0.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>9<br />8<br />1 2<br />1 3<br />2 3<br />4 5<br />6 7<br />7 8<br />8 9<br />9 6<br />2<br />1 6<br />7 9<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3</pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Рассмотрим пример. <center> <img class="tex-graphics" src="http://codeforces.ru/renderer/c89167f597e66e26accf419fd20b583752b3732f.png" /> </center></p><p>Под условия задачи подходят две группы людей: <span class="tex-span">{1, 2, 3}</span> и <span class="tex-span">{4, 5}</span>, при этом ответом будет размер наибольшей из этих групп. Группа <span class="tex-span">{6, 7, 8, 9}</span> не подходит, так как в ней есть люди <span class="tex-span">7</span> и <span class="tex-span">9</span>, которые не нравятся друг другу. Группа <span class="tex-span">{1, 2, 3, 4, 5}</span> также не подходит, так как не все ее члены связаны цепью общих друзей (например, люди <span class="tex-span">2</span> и <span class="tex-span">5</span> не связаны).</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D1. Шифрование сообщений</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Умный Бобер из ABBYY придумал новый вид шифрования сообщений и хочет проверить его работу. Делать это вручную долго и трудоемко, поэтому он решил обратиться к участникам ABBYY Cup. </p><p>Сообщение представляет собой <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span>. Для шифрования используется ключ, который представляет собой <span class="tex-span"><i>m</i></span> целых чисел <span class="tex-span"><i>b</i><sub class="lower-index">1</sub>, <i>b</i><sub class="lower-index">2</sub>, ..., <i>b</i><sub class="lower-index"><i>m</i></sub></span> (<span class="tex-span"><i>m</i> ≤ <i>n</i></span>). Все числа из сообщения и из ключа лежат в интервале от <span class="tex-span">0</span> до <span class="tex-span"><i>c</i> - 1</span>, включительно, и все последующие вычисления проводятся по модулю <span class="tex-span"><i>c</i></span>.</p><p>Шифрование проводится в <span class="tex-span"><i>n</i> - <i>m</i> + 1</span> этапов. На первом этапе к каждому из чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>m</i></sub></span> прибавляются соответствующие числа <span class="tex-span"><i>b</i><sub class="lower-index">1</sub>, <i>b</i><sub class="lower-index">2</sub>, ..., <i>b</i><sub class="lower-index"><i>m</i></sub></span>. На втором этапе к числам <span class="tex-span"><i>a</i><sub class="lower-index">2</sub>, <i>a</i><sub class="lower-index">3</sub>, ..., <i>a</i><sub class="lower-index"><i>m</i> + 1</sub></span> (измененным на предыдущем этапе) прибавляются числа <span class="tex-span"><i>b</i><sub class="lower-index">1</sub>, <i>b</i><sub class="lower-index">2</sub>, ..., <i>b</i><sub class="lower-index"><i>m</i></sub></span>. И так далее: на этапе номер <span class="tex-span"><i>i</i></span> к числам <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub>, <i>a</i><sub class="lower-index"><i>i</i> + 1</sub>, ..., <i>a</i><sub class="lower-index"><i>i</i> + <i>m</i> - 1</sub></span> прибавляются числа <span class="tex-span"><i>b</i><sub class="lower-index">1</sub>, <i>b</i><sub class="lower-index">2</sub>, ..., <i>b</i><sub class="lower-index"><i>m</i></sub></span>. Результатом шифрования является последовательность <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> после <span class="tex-span"><i>n</i> - <i>m</i> + 1</span> этапов шифрования.</p><p>Помогите Бобру: напишите программу, которая будет осуществлять шифрование сообщений описанным способом.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит три целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span> и <span class="tex-span"><i>c</i></span>, разделенных единичными пробелами. </p><p>Вторая строка входных данных содержит <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> &lt; <i>c</i></span>), разделенных единичными пробелами, — исходное сообщение. </p><p>Третья строка входных данных содержит <span class="tex-span"><i>m</i></span> целых чисел <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>b</i><sub class="lower-index"><i>i</i></sub> &lt; <i>c</i></span>), разделенных единичными пробелами, — ключ шифрования.</p><p>Ограничения на входные данные для получения 30 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>m</i> ≤ <i>n</i> ≤ 10<sup class="upper-index">3</sup></span> </li><li> <span class="tex-span">1 ≤ <i>c</i> ≤ 10<sup class="upper-index">3</sup></span> </li></ul> </p><p>Ограничения на входные данные для получения 100 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>m</i> ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span> </li><li> <span class="tex-span">1 ≤ <i>c</i> ≤ 10<sup class="upper-index">3</sup></span> </li></ul> </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>n</i></span> целых чисел, разделенных пробелами, — результат шифрования сообщения.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4 3 2<br />1 1 1 1<br />1 1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 1 1 0<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 1 5<br />1 2 3<br />4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 1 2<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере шифрование проводится в два этапа: после первого этапа <span class="tex-span"><i>a</i> = (0, 0, 0, 1)</span> (вычисления производятся по модулю 2), после второго — <span class="tex-span"><i>a</i> = (0, 1, 1, 0)</span>, что и будет ответом. </p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D2. Шифрование сообщений</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Умный Бобер из ABBYY придумал новый вид шифрования сообщений и хочет проверить его работу. Делать это вручную долго и трудоемко, поэтому он решил обратиться к участникам ABBYY Cup. </p><p>Сообщение представляет собой <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span>. Для шифрования используется ключ, который представляет собой <span class="tex-span"><i>m</i></span> целых чисел <span class="tex-span"><i>b</i><sub class="lower-index">1</sub>, <i>b</i><sub class="lower-index">2</sub>, ..., <i>b</i><sub class="lower-index"><i>m</i></sub></span> (<span class="tex-span"><i>m</i> ≤ <i>n</i></span>). Все числа из сообщения и из ключа лежат в интервале от <span class="tex-span">0</span> до <span class="tex-span"><i>c</i> - 1</span>, включительно, и все последующие вычисления проводятся по модулю <span class="tex-span"><i>c</i></span>.</p><p>Шифрование проводится в <span class="tex-span"><i>n</i> - <i>m</i> + 1</span> этапов. На первом этапе к каждому из чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>m</i></sub></span> прибавляются соответствующие числа <span class="tex-span"><i>b</i><sub class="lower-index">1</sub>, <i>b</i><sub class="lower-index">2</sub>, ..., <i>b</i><sub class="lower-index"><i>m</i></sub></span>. На втором этапе к числам <span class="tex-span"><i>a</i><sub class="lower-index">2</sub>, <i>a</i><sub class="lower-index">3</sub>, ..., <i>a</i><sub class="lower-index"><i>m</i> + 1</sub></span> (измененным на предыдущем этапе) прибавляются числа <span class="tex-span"><i>b</i><sub class="lower-index">1</sub>, <i>b</i><sub class="lower-index">2</sub>, ..., <i>b</i><sub class="lower-index"><i>m</i></sub></span>. И так далее: на этапе номер <span class="tex-span"><i>i</i></span> к числам <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub>, <i>a</i><sub class="lower-index"><i>i</i> + 1</sub>, ..., <i>a</i><sub class="lower-index"><i>i</i> + <i>m</i> - 1</sub></span> прибавляются числа <span class="tex-span"><i>b</i><sub class="lower-index">1</sub>, <i>b</i><sub class="lower-index">2</sub>, ..., <i>b</i><sub class="lower-index"><i>m</i></sub></span>. Результатом шифрования является последовательность <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> после <span class="tex-span"><i>n</i> - <i>m</i> + 1</span> этапов шифрования.</p><p>Помогите Бобру: напишите программу, которая будет осуществлять шифрование сообщений описанным способом.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит три целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span> и <span class="tex-span"><i>c</i></span>, разделенных единичными пробелами. </p><p>Вторая строка входных данных содержит <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> &lt; <i>c</i></span>), разделенных единичными пробелами, — исходное сообщение. </p><p>Третья строка входных данных содержит <span class="tex-span"><i>m</i></span> целых чисел <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>b</i><sub class="lower-index"><i>i</i></sub> &lt; <i>c</i></span>), разделенных единичными пробелами, — ключ шифрования.</p><p>Ограничения на входные данные для получения 30 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>m</i> ≤ <i>n</i> ≤ 10<sup class="upper-index">3</sup></span> </li><li> <span class="tex-span">1 ≤ <i>c</i> ≤ 10<sup class="upper-index">3</sup></span> </li></ul> </p><p>Ограничения на входные данные для получения 100 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>m</i> ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span> </li><li> <span class="tex-span">1 ≤ <i>c</i> ≤ 10<sup class="upper-index">3</sup></span> </li></ul> </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>n</i></span> целых чисел, разделенных пробелами, — результат шифрования сообщения.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4 3 2<br />1 1 1 1<br />1 1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 1 1 0<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 1 5<br />1 2 3<br />4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 1 2<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере шифрование проводится в два этапа: после первого этапа <span class="tex-span"><i>a</i> = (0, 0, 0, 1)</span> (вычисления производятся по модулю 2), после второго — <span class="tex-span"><i>a</i> = (0, 1, 1, 0)</span>, что и будет ответом. </p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E1. Космическое путешествие</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Умный Бобер из ABBYY планирует совершить космическое путешествие на суперсовременном космическом корабле, за время которого он посетит <span class="tex-span"><i>n</i></span> планет. Для <span class="tex-span"><i>i</i></span>-ой планеты известны числа <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> — максимальное число чемоданов, которые инопланетному туристу разрешено провезти на планету, и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> — число жителей на планете.</p><p>В путешествие Умный Бобер возьмет с собой сувениры из ABBYY. Сувениры упаковываются в чемоданы, по <span class="tex-span"><i>x</i></span> штук в каждый. На корабль Бобер возьмет ровно <span class="tex-span"><i>a</i><sub class="lower-index">1</sub> + ... + <i>a</i><sub class="lower-index"><i>n</i></sub></span> чемоданов. </p><p>Высаживаясь на <span class="tex-span"><i>i</i></span>-ой планете, Бобер берет с собой <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> чемоданов. В первый день пребывания на планете Бобер гуляет и знакомится с жителями. Во второй и все последующие дни Бобер дарит жителям сувениры — каждому из <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> жителей по сувениру каждый день. Бобер покидает планету вечером того дня, когда сувениров становится меньше, чем жителей (то есть как только на следующий день он не сможет подарить нужное количество сувениров). Оставшиеся сувениры он оставляет в отеле.</p><p>Всего Бобер собирается путешествовать ровно <span class="tex-span"><i>c</i></span> дней. Время, затраченное на перелеты между планетами, считается равным нулю. Сколькими способами можно выбрать целое положительное число <span class="tex-span"><i>x</i></span> так, чтобы планируемое путешествие заняло ровно <span class="tex-span"><i>c</i></span> дней?</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит целые числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>c</i></span>, разделенные пробелом, — число планет, которые Бобер собирается посетить, и число дней, отведенных на путешествие, соответственно.</p><p>Следующие <span class="tex-span"><i>n</i></span> строк содержат пары целых чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>n</i></span>), разделенных пробелом, — число чемоданов, разрешенных для ввоза на <span class="tex-span"><i>i</i></span>-ю планету, и число жителей на <span class="tex-span"><i>i</i></span>-ой планете, соответственно.</p><p>Ограничения на входные данные для получения 30 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>n</i> ≤ 100</span> </li><li> <span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 100</span> </li><li> <span class="tex-span">1 ≤ <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ 100</span> </li><li> <span class="tex-span">1 ≤ <i>c</i> ≤ 100</span> </li></ul> </p><p>Ограничения на входные данные для получения 100 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">4</sup></span> </li><li> <span class="tex-span">0 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span> </li><li> <span class="tex-span">1 ≤ <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span> </li><li> <span class="tex-span">1 ≤ <i>c</i> ≤ 10<sup class="upper-index">9</sup></span> </li></ul> </p><p>В связи с возможностью переполнения рекомендуется использовать 64-битную арифметику. Возможны варианты решений, в которых переполняется даже 64-битная арифметика. Поэтому будьте аккуратны в вычислениях!</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число <span class="tex-span"><i>k</i></span> — количество способов выбрать <span class="tex-span"><i>x</i></span> так, чтобы путешествовать ровно <span class="tex-span"><i>c</i></span> дней. Если существует бесконечно много вариантов выбора <span class="tex-span"><i>x</i></span>, выведите -1.</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битовых чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> или спецификатор <span class="tex-font-style-tt">%I64d</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 5<br />1 5<br />2 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере существует единственное подходящее значение <span class="tex-span"><i>x</i> = 5</span>. Тогда на первую планету Бобер берет 1 чемодан с 5 сувенирами. Здесь он проводит 2 дня: первый день гуляет, второй день дарит 5 сувениров. На вторую планету он берет 2 чемодана с 10 сувенирами. Здесь он проводит 3 дня — один день гуляет, еще два дня дарит по 4 сувенира и последние 2 сувенира оставляет в отеле. Всего в путешествии бобер проводит 5 дней.</p><p>При <span class="tex-span"><i>x</i> = 4</span> и меньше Бобру не хватит сувениров на второй день на первой планете, и путешествие закончится слишком быстро. При <span class="tex-span"><i>x</i> = 6</span> и больше Бобер проведет как минимум на один день больше на второй планете, и путешествие затянется.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E2. Космическое путешествие</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Умный Бобер из ABBYY планирует совершить космическое путешествие на суперсовременном космическом корабле, за время которого он посетит <span class="tex-span"><i>n</i></span> планет. Для <span class="tex-span"><i>i</i></span>-ой планеты известны числа <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> — максимальное число чемоданов, которые инопланетному туристу разрешено провезти на планету, и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> — число жителей на планете.</p><p>В путешествие Умный Бобер возьмет с собой сувениры из ABBYY. Сувениры упаковываются в чемоданы, по <span class="tex-span"><i>x</i></span> штук в каждый. На корабль Бобер возьмет ровно <span class="tex-span"><i>a</i><sub class="lower-index">1</sub> + ... + <i>a</i><sub class="lower-index"><i>n</i></sub></span> чемоданов. </p><p>Высаживаясь на <span class="tex-span"><i>i</i></span>-ой планете, Бобер берет с собой <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> чемоданов. В первый день пребывания на планете Бобер гуляет и знакомится с жителями. Во второй и все последующие дни Бобер дарит жителям сувениры — каждому из <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> жителей по сувениру каждый день. Бобер покидает планету вечером того дня, когда сувениров становится меньше, чем жителей (то есть как только на следующий день он не сможет подарить нужное количество сувениров). Оставшиеся сувениры он оставляет в отеле.</p><p>Всего Бобер собирается путешествовать ровно <span class="tex-span"><i>c</i></span> дней. Время, затраченное на перелеты между планетами, считается равным нулю. Сколькими способами можно выбрать целое положительное число <span class="tex-span"><i>x</i></span> так, чтобы планируемое путешествие заняло ровно <span class="tex-span"><i>c</i></span> дней?</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит целые числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>c</i></span>, разделенные пробелом, — число планет, которые Бобер собирается посетить, и число дней, отведенных на путешествие, соответственно.</p><p>Следующие <span class="tex-span"><i>n</i></span> строк содержат пары целых чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>n</i></span>), разделенных пробелом, — число чемоданов, разрешенных для ввоза на <span class="tex-span"><i>i</i></span>-ю планету, и число жителей на <span class="tex-span"><i>i</i></span>-ой планете, соответственно.</p><p>Ограничения на входные данные для получения 30 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>n</i> ≤ 100</span> </li><li> <span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 100</span> </li><li> <span class="tex-span">1 ≤ <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ 100</span> </li><li> <span class="tex-span">1 ≤ <i>c</i> ≤ 100</span> </li></ul> </p><p>Ограничения на входные данные для получения 100 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">4</sup></span> </li><li> <span class="tex-span">0 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span> </li><li> <span class="tex-span">1 ≤ <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span> </li><li> <span class="tex-span">1 ≤ <i>c</i> ≤ 10<sup class="upper-index">9</sup></span> </li></ul> </p><p>В связи с возможностью переполнения рекомендуется использовать 64-битную арифметику. Возможны варианты решений, в которых переполняется даже 64-битная арифметика. Поэтому будьте аккуратны в вычислениях!</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число <span class="tex-span"><i>k</i></span> — количество способов выбрать <span class="tex-span"><i>x</i></span> так, чтобы путешествовать ровно <span class="tex-span"><i>c</i></span> дней. Если существует бесконечно много вариантов выбора <span class="tex-span"><i>x</i></span>, выведите -1.</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битовых чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> или спецификатор <span class="tex-font-style-tt">%I64d</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 5<br />1 5<br />2 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере существует единственное подходящее значение <span class="tex-span"><i>x</i> = 5</span>. Тогда на первую планету Бобер берет 1 чемодан с 5 сувенирами. Здесь он проводит 2 дня: первый день гуляет, второй день дарит 5 сувениров. На вторую планету он берет 2 чемодана с 10 сувенирами. Здесь он проводит 3 дня — один день гуляет, еще два дня дарит по 4 сувенира и последние 2 сувенира оставляет в отеле. Всего в путешествии бобер проводит 5 дней.</p><p>При <span class="tex-span"><i>x</i> = 4</span> и меньше Бобру не хватит сувениров на второй день на первой планете, и путешествие закончится слишком быстро. При <span class="tex-span"><i>x</i> = 6</span> и больше Бобер проведет как минимум на один день больше на второй планете, и путешествие затянется.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F1. Генератор сценариев</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Умному Бобру из ABBYY предложили поработать сценаристом сериала. В частности, ему нужно автоматизировать выбор того, какие из главных героев сыграют свадьбы к концу сериала. </p><p>Среди главных героев сериала есть <span class="tex-span"><i>n</i></span> неженатых мужчин и <span class="tex-span"><i>n</i></span> незамужних женщин. Социологический опрос показал, что зрители симпатизируют некоторым парам, и их свадьба обрадует зрителей. Умный Бобер формализовал этот факт в виде <span class="tex-span"><i>k</i></span> троек чисел <span class="tex-span">(<i>h</i>, <i>w</i>, <i>r</i>)</span>, где <span class="tex-span"><i>h</i></span> — номер мужчины, <span class="tex-span"><i>w</i></span> — номер женщины, <span class="tex-span"><i>r</i></span> — мера радости зрителей, которую вызовет свадьба этой пары. Этот же опрос показал, что свадьба любой другой пары оставит зрителей равнодушными, и сценаристы решили не включать такие свадьбы в сюжет.</p><p>Сценарий позволяет провести несколько свадеб героев или не проводить свадеб вообще. Подмножество этих <span class="tex-span"><i>k</i></span> свадеб считается допустимым, если каждый мужчина и каждая женщина задействованы не более чем в одной свадьбе из подмножества (разводов в сериале не будет). Ценностью допустимого набора свадеб будем называть суммарную радость зрителей от свадеб, входящих в этот набор.</p><p>Очевидно, допустимых наборов конечное число, и все они описывают некоторые варианты развития сценария. Сценаристы не хотят выбирать набор максимальной ценности — это сделало бы сюжет слишком предсказуемым. Поэтому Умный Бобер предлагает следующий вариант: отсортировать все допустимые наборы по возрастанию их ценности и выбрать <span class="tex-span"><i>t</i></span>-ый набор из отсортированного списка. Таким образом <span class="tex-span"><i>t</i> = 1</span> будет соответствовать сценарию без свадеб, <span class="tex-span"><i>t</i> = 2</span> — единственной свадьбе, минимально радующей зрителей, и так далее.</p><p>Помогите Бобру реализовать алгоритм выбора нужного набора.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит целые числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>k</i></span> и <span class="tex-span"><i>t</i></span> (<span class="tex-span">1 ≤ <i>k</i> ≤ <i>min</i>(100, <i>n</i><sup class="upper-index">2</sup>)</span>, <span class="tex-span">1 ≤ <i>t</i> ≤ 2·10<sup class="upper-index">5</sup></span>), разделенные единичными пробелами. Следующие <span class="tex-span"><i>k</i></span> строк содержат тройки целых чисел <span class="tex-span">(<i>h</i>, <i>w</i>, <i>r</i>)</span> <span class="tex-span">(1 ≤ <i>h</i>, <i>w</i> ≤ <i>n</i>; 1 ≤ <i>r</i> ≤ 1000)</span>, разделенных единичными пробелами, которые описывают варианты свадеб. Гарантируется, что исходные данные корректны: <span class="tex-span"><i>t</i></span> не превосходит общего числа возможных допустимых вариантов, и каждой паре <span class="tex-span">(<i>h</i>, <i>w</i>)</span> соответствует не более одной тройки.</p><p>Ограничения на входные данные для получения 30 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>n</i> ≤ 5</span> </li></ul> </p><p>Ограничения на входные данные для получения 100 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>n</i> ≤ 20</span> </li></ul> </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — ценность <span class="tex-span"><i>t</i></span>-го допустимого варианта.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 4 3<br />1 1 1<br />1 2 2<br />2 1 3<br />2 2 7<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 4 7<br />1 1 1<br />1 2 2<br />2 1 3<br />2 2 7<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>8<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>На рисунке изображены 7 допустимых вариантов, существующих в условиях первого примера. <center> <img class="tex-graphics" src="http://codeforces.ru/renderer/525cf08f9f6151fd93b3d77f645b26bf52031adb.png" /> </center></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F2. Генератор сценариев</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Умному Бобру из ABBYY предложили поработать сценаристом сериала. В частности, ему нужно автоматизировать выбор того, какие из главных героев сыграют свадьбы к концу сериала. </p><p>Среди главных героев сериала есть <span class="tex-span"><i>n</i></span> неженатых мужчин и <span class="tex-span"><i>n</i></span> незамужних женщин. Социологический опрос показал, что зрители симпатизируют некоторым парам, и их свадьба обрадует зрителей. Умный Бобер формализовал этот факт в виде <span class="tex-span"><i>k</i></span> троек чисел <span class="tex-span">(<i>h</i>, <i>w</i>, <i>r</i>)</span>, где <span class="tex-span"><i>h</i></span> — номер мужчины, <span class="tex-span"><i>w</i></span> — номер женщины, <span class="tex-span"><i>r</i></span> — мера радости зрителей, которую вызовет свадьба этой пары. Этот же опрос показал, что свадьба любой другой пары оставит зрителей равнодушными, и сценаристы решили не включать такие свадьбы в сюжет.</p><p>Сценарий позволяет провести несколько свадеб героев или не проводить свадеб вообще. Подмножество этих <span class="tex-span"><i>k</i></span> свадеб считается допустимым, если каждый мужчина и каждая женщина задействованы не более чем в одной свадьбе из подмножества (разводов в сериале не будет). Ценностью допустимого набора свадеб будем называть суммарную радость зрителей от свадеб, входящих в этот набор.</p><p>Очевидно, допустимых наборов конечное число, и все они описывают некоторые варианты развития сценария. Сценаристы не хотят выбирать набор максимальной ценности — это сделало бы сюжет слишком предсказуемым. Поэтому Умный Бобер предлагает следующий вариант: отсортировать все допустимые наборы по возрастанию их ценности и выбрать <span class="tex-span"><i>t</i></span>-ый набор из отсортированного списка. Таким образом <span class="tex-span"><i>t</i> = 1</span> будет соответствовать сценарию без свадеб, <span class="tex-span"><i>t</i> = 2</span> — единственной свадьбе, минимально радующей зрителей, и так далее.</p><p>Помогите Бобру реализовать алгоритм выбора нужного набора.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит целые числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>k</i></span> и <span class="tex-span"><i>t</i></span> (<span class="tex-span">1 ≤ <i>k</i> ≤ <i>min</i>(100, <i>n</i><sup class="upper-index">2</sup>)</span>, <span class="tex-span">1 ≤ <i>t</i> ≤ 2·10<sup class="upper-index">5</sup></span>), разделенные единичными пробелами. Следующие <span class="tex-span"><i>k</i></span> строк содержат тройки целых чисел <span class="tex-span">(<i>h</i>, <i>w</i>, <i>r</i>)</span> <span class="tex-span">(1 ≤ <i>h</i>, <i>w</i> ≤ <i>n</i>; 1 ≤ <i>r</i> ≤ 1000)</span>, разделенных единичными пробелами, которые описывают варианты свадеб. Гарантируется, что исходные данные корректны: <span class="tex-span"><i>t</i></span> не превосходит общего числа возможных допустимых вариантов, и каждой паре <span class="tex-span">(<i>h</i>, <i>w</i>)</span> соответствует не более одной тройки.</p><p>Ограничения на входные данные для получения 30 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>n</i> ≤ 5</span> </li></ul> </p><p>Ограничения на входные данные для получения 100 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>n</i> ≤ 20</span> </li></ul> </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — ценность <span class="tex-span"><i>t</i></span>-го допустимого варианта.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 4 3<br />1 1 1<br />1 2 2<br />2 1 3<br />2 2 7<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 4 7<br />1 1 1<br />1 2 2<br />2 1 3<br />2 2 7<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>8<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>На рисунке изображены 7 допустимых вариантов, существующих в условиях первого примера. <center> <img class="tex-graphics" src="http://codeforces.ru/renderer/525cf08f9f6151fd93b3d77f645b26bf52031adb.png" /> </center></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">G1. Строки Фибоначчи</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Строки Фибоначчи определяются следующим образом: <ul> <li> <span class="tex-span"><i>f</i><sub class="lower-index">1</sub></span> = «<span class="tex-font-style-tt">a</span>» </li><li> <span class="tex-span"><i>f</i><sub class="lower-index">2</sub></span> = «<span class="tex-font-style-tt">b</span>» </li><li> <span class="tex-span"><i>f</i><sub class="lower-index"><i>n</i></sub></span> = <span class="tex-span"><i>f</i><sub class="lower-index"><i>n</i> - 1</sub> <i>f</i><sub class="lower-index"><i>n</i> - 2</sub></span>, <span class="tex-span"><i>n</i> &gt; 2</span> </li></ul></p><p>Таким образом, первые пять строк Фибоначчи: «<span class="tex-font-style-tt">a</span>», «<span class="tex-font-style-tt">b</span>», «<span class="tex-font-style-tt">ba</span>», «<span class="tex-font-style-tt">bab</span>», «<span class="tex-font-style-tt">babba</span>».</p><p>Вам дана строка Фибоначчи и <span class="tex-span"><i>m</i></span> строк <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span>. Для каждой строки <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> найдите, сколько раз она встречается в данной строке Фибоначчи в качестве подстроки.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано два целых числа через пробел <span class="tex-span"><i>k</i></span> и <span class="tex-span"><i>m</i></span> — номер строки Фибоначчи и количество запросов, соответственно.</p><p>В следующих <span class="tex-span"><i>m</i></span> строках записаны строки <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span>, соответствующие запросам. Гарантируется, что строки <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> непусты и состоят только из символов «<span class="tex-font-style-tt">a</span>» и «<span class="tex-font-style-tt">b</span>».</p><p>Ограничения на входные данные для получения 30 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>k</i> ≤ 3000</span> </li><li> <span class="tex-span">1 ≤ <i>m</i> ≤ 3000</span> </li><li> Суммарная длина строк <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> не превосходит <span class="tex-span">3000</span> </li></ul> </p><p>Ограничения на входные данные для получения 100 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>k</i> ≤ 10<sup class="upper-index">18</sup></span> </li><li> <span class="tex-span">1 ≤ <i>m</i> ≤ 10<sup class="upper-index">4</sup></span> </li><li> Суммарная длина строк <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> не превосходит <span class="tex-span">10<sup class="upper-index">5</sup></span> </li></ul> </p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битовых чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> или спецификатор <span class="tex-font-style-tt">%I64d</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждой строки <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> выведите, сколько раз она встречается в заданной строке Фибоначчи в качестве подстроки. Так как числа могут оказаться достаточно большими, выводите их остатки от деления на <span class="tex-span">1000000007</span> <span class="tex-span">(10<sup class="upper-index">9</sup> + 7)</span>. Ответы для строк выводите в том порядке, в котором строки записаны во входных данных.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6 5<br />a<br />b<br />ab<br />ba<br />aba<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />5<br />3<br />3<br />1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">G2. Строки Фибоначчи</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Строки Фибоначчи определяются следующим образом: <ul> <li> <span class="tex-span"><i>f</i><sub class="lower-index">1</sub></span> = «<span class="tex-font-style-tt">a</span>» </li><li> <span class="tex-span"><i>f</i><sub class="lower-index">2</sub></span> = «<span class="tex-font-style-tt">b</span>» </li><li> <span class="tex-span"><i>f</i><sub class="lower-index"><i>n</i></sub></span> = <span class="tex-span"><i>f</i><sub class="lower-index"><i>n</i> - 1</sub> <i>f</i><sub class="lower-index"><i>n</i> - 2</sub></span>, <span class="tex-span"><i>n</i> &gt; 2</span> </li></ul></p><p>Таким образом, первые пять строк Фибоначчи: «<span class="tex-font-style-tt">a</span>», «<span class="tex-font-style-tt">b</span>», «<span class="tex-font-style-tt">ba</span>», «<span class="tex-font-style-tt">bab</span>», «<span class="tex-font-style-tt">babba</span>».</p><p>Вам дана строка Фибоначчи и <span class="tex-span"><i>m</i></span> строк <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span>. Для каждой строки <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> найдите, сколько раз она встречается в данной строке Фибоначчи в качестве подстроки.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано два целых числа через пробел <span class="tex-span"><i>k</i></span> и <span class="tex-span"><i>m</i></span> — номер строки Фибоначчи и количество запросов, соответственно.</p><p>В следующих <span class="tex-span"><i>m</i></span> строках записаны строки <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span>, соответствующие запросам. Гарантируется, что строки <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> непусты и состоят только из символов «<span class="tex-font-style-tt">a</span>» и «<span class="tex-font-style-tt">b</span>».</p><p>Ограничения на входные данные для получения 30 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>k</i> ≤ 3000</span> </li><li> <span class="tex-span">1 ≤ <i>m</i> ≤ 3000</span> </li><li> Суммарная длина строк <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> не превосходит <span class="tex-span">3000</span> </li></ul> </p><p>Ограничения на входные данные для получения 100 баллов: <ul> <li> <span class="tex-span">1 ≤ <i>k</i> ≤ 10<sup class="upper-index">18</sup></span> </li><li> <span class="tex-span">1 ≤ <i>m</i> ≤ 10<sup class="upper-index">4</sup></span> </li><li> Суммарная длина строк <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> не превосходит <span class="tex-span">10<sup class="upper-index">5</sup></span> </li></ul> </p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битовых чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> или спецификатор <span class="tex-font-style-tt">%I64d</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждой строки <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> выведите, сколько раз она встречается в заданной строке Фибоначчи в качестве подстроки. Так как числа могут оказаться достаточно большими, выводите их остатки от деления на <span class="tex-span">1000000007</span> <span class="tex-span">(10<sup class="upper-index">9</sup> + 7)</span>. Ответы для строк выводите в том порядке, в котором строки записаны во входных данных.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6 5<br />a<br />b<br />ab<br />ba<br />aba<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />5<br />3<br />3<br />1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
