
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="g96cfd7a8hc27a99176c4aeb4b65cdeh"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="187flap40eim6"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='g96cfd7a8hc27a99176c4aeb4b65cdeh'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Round #114 (Div. 1)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Волшебники и троллейбусы</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В некоторой стране живут волшебники. Они любят ездить на троллейбусах.</p><p>В одном городе этой страны есть троллейбусное депо с <span class="tex-span"><i>n</i></span> троллейбусами. Каждый день троллейбусы выезжают из депо один за другим и едут до конечной станции. Конечная станция находится на расстоянии <span class="tex-span"><i>d</i></span> метров от депо. Про <span class="tex-span"><i>i</i></span>-ый троллейбус известно, что он выезжает в момент времени <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span> секунд, может ехать со скоростью не более <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub></span> метров в секунду и ускоряться с ускорением, не превосходящем <span class="tex-span"><i>a</i></span> метров в секунду за секунду. Замедляться троллейбус может сколь угодно быстро (магия!). Менять свое ускорение троллейбус может также сколь угодно быстро. Обратите внимание, что максимальное ускорение у всех троллейбусов одинаковое. </p><p>Несмотря на волшебство, троллейбусы все еще питаются от электрической цепи и не могут обгонять друг друга (во всем виноваты, конечно же, провода). Если один троллейбус догоняет другой, то они едут вплотную друг за другом, пока не приедут на конечную станцию. При этом водители едут так, чтобы приехать на конечную станцию как можно быстрее. </p><p>Вам, как главе клуба любителей троллейбусов, предстоит определить для каждого троллейбуса минимальное время, к которому он может доехать до конечной станции. Во время приезда на конечную станцию не обязательно иметь нулевую скорость. При выезде из депо скорость троллейбуса считается равной нулю. С точки зрения физики, троллейбусы можно считать материальными точками, а также следует пренебречь воздействием на скорость троллейбуса всего, кроме ускорения и замедления, обеспечиваемого двигателем.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записаны три целых числа через пробел <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>d</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>, <span class="tex-span">1 ≤ <i>a</i>, <i>d</i> ≤ 10<sup class="upper-index">6</sup></span>) — количество троллейбусов, максимальное ускорение троллейбусов и расстояние от депо до конечной станции, соответственно.</p><p>В следующих <span class="tex-span"><i>n</i></span> строках записаны пары целых чисел <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>t</i><sub class="lower-index">1</sub> &lt; <i>t</i><sub class="lower-index">2</sub>... &lt; <i>t</i><sub class="lower-index"><i>n</i> - 1</sub> &lt; <i>t</i><sub class="lower-index"><i>n</i></sub> ≤ 10<sup class="upper-index">6</sup></span>, <span class="tex-span">1 ≤ <i>v</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">6</sup></span>) — время отправления из депо <span class="tex-span"><i>i</i></span>-го троллейбуса и его максимальная скорость, соответственно. Числа в строках разделяются пробелами.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждого троллейбуса выведите время приезда на конечную станцию в отдельной строке. Времена для троллейбусов выводите в порядке задания троллейбусов во входном файле. Ответ будет засчитан, если абсолютная или относительная погрешность не превосходит <span class="tex-span">10<sup class="upper-index"> - 4</sup></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 10 10000<br />0 10<br />5 11<br />1000 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1000.5000000000<br />1000.5000000000<br />11000.0500000000<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 2 26<br />28 29<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>33.0990195136<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере второй троллейбус догонит первый, это произойдет на расстоянии 510.5 метров от депо. Оставшиеся 9489.5 метров они проедут вместе со скоростью 10 метров в секунду. В итоге оба троллейбуса прибудут на конечную станцию к моменту времени 1000.5 секунд. Третий троллейбус их не догонит. Он приедет на конечную станцию к моменту времени 11000.05 секунд.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Волшебники и здоровенный приз</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Для успешного участия в соревнованиях волшебников, нужно много тренироваться, поэтому проводятся многочисленные волшебные школы и магические сборы.</p><p>Одна из таких волшебных школ состоит из <span class="tex-span"><i>n</i></span> туров, за каждый из которых победителю дают здоровенный приз. Школа проводится достаточно далеко, поэтому везти домой все призы придется сразу. А в сумках, которые Вы привезли с собой, есть место не более чем для <span class="tex-span"><i>k</i></span> здоровенных призов.</p><p>Помимо того, что вы хотите суметь увезти все призы, вы также хотите хорошо выступить. Вы будете считать выступление хорошим, если вы выиграете не менее <span class="tex-span"><i>l</i></span> туров. </p><p>Так как организаторы заметили по прошлым годам, что у участников есть проблемы с транспортировкой здоровенных призов (заклинание уменьшения призов еще, к сожалению, не изобретено), то за некоторые туры победителю, вместо здоровенного приза, выдают сумку. Каждая сумка характеризуется числом <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> — количеством здоровенных призов, которые в нее поместятся.</p><p>Так же вы уже знаете тематику всех туров, поэтому можете оценить вероятность <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i></sub></span> того, что вы выиграете <span class="tex-span"><i>i</i></span>-ый тур. Пропускать тур вы не можете ни при каких обстоятельствах.</p><p>Найдите, с какой вероятностью вы выступите на сборах хорошо, но при этом сможете увести все призы (то есть все выигранные здоровенные призы можно будет поместить в выигранные и привезенные сумки).</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано три целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>l</i></span>, <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 200, 0 ≤ <i>l</i>, <i>k</i> ≤ 200</span>) — количество туров, минимальное количество туров, которое надо выиграть, и количество свободных мест в сумках, которые вы привезли с собой под призы, соответственно.</p><p>Во второй строке записаны <span class="tex-span"><i>n</i></span> целых чисел через пробел, <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>p</i><sub class="lower-index"><i>i</i></sub> ≤ 100</span>) — вероятность выигрыша <span class="tex-span"><i>i</i></span>-ого тура в процентах.</p><p>В третьей строке записаны <span class="tex-span"><i>n</i></span> целых чисел через пробел, <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 200</span>) — вместимость сумки, которую выдают за <span class="tex-span"><i>i</i></span>-ый тур, или же -1, если в <span class="tex-span"><i>i</i></span>-ый тур выдают здоровенный приз, а не сумку.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное вещественное число — ответ на задачу. Ответ будет засчитан, если абсолютная или относительная погрешность не превосходит <span class="tex-span">10<sup class="upper-index"> - 6</sup></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 1 0<br />10 20 30<br />-1 -1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0.300000000000<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 1 1<br />100<br />123<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1.000000000000<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере, чтобы увезти все призы необходимо либо ничего не выиграть, либо выиграть третий тур. Вариант «ничего не выиграть» не подходит под условие хорошего выступления. Значит, надо обязательно выиграть третий тур. При этом остальные условия будут соблюдены всегда. Вероятность выиграть третий тур равна 0.3.</p><p>Во втором примере с вероятностью 1.0 мы выигрываем единственный тур, и радостно увозим большую сумку за него.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Волшебники и числа</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В некоторой стране живут волшебники. Они любят играть с числами.</p><p>На доске записано два числа — <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span>. Порядок чисел не важен. Пусть для определенности <span class="tex-span"><i>a</i> ≤ <i>b</i></span>. Игроки по очереди могут колдовать одно из двух заклинаний.</p><p><ul> <li> Заменить <span class="tex-span"><i>b</i></span> на <span class="tex-span"><i>b</i> - <i>a</i><sup class="upper-index"><i>k</i></sup></span>. Число <span class="tex-span"><i>k</i></span> может выбрать игрок, с ограничениями, что <span class="tex-span"><i>k</i> &gt; 0</span> и <span class="tex-span"><i>b</i> - <i>a</i><sup class="upper-index"><i>k</i></sup> ≥ 0</span>. Число <span class="tex-span"><i>k</i></span> выбирается независимо при каждом использовании заклинания игроком, делающим ход. </li><li> Заменить <span class="tex-span"><i>b</i></span> на <span class="tex-span"><i>b</i> <i>mod</i> <i>a</i></span>. </li></ul></p><p>В случае, когда <span class="tex-span"><i>a</i> &gt; <i>b</i></span> возможны аналогичные ходы.</p><p>Если хотя бы одно из чисел равно нулю, ход сделать нельзя, так как брать остаток по модулю ноля считается некультурным, а вычитать ноль слишком скучно. Проигрывает игрок, который не может ходить.</p><p>Чтобы успешно участвовать в волшебном тотализаторе, Вам надо научиться быстро определять, какой из волшебников выиграет, если оба играют оптимально: тот, который ходит первым, или же тот, который ходит вторым.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке дано одно целое число <span class="tex-span"><i>t</i></span> — количество наборов входных данных (<span class="tex-span">1 ≤ <i>t</i> ≤ 10<sup class="upper-index">4</sup></span>). Далее в <span class="tex-span"><i>t</i></span> строках даны по два целых числа <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>b</i></span> (<span class="tex-span">0 ≤ <i>a</i>, <i>b</i> ≤ 10<sup class="upper-index">18</sup></span>). Числа записаны через пробел.</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битовых чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> или спецификатор <span class="tex-font-style-tt">%I64d</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждого из <span class="tex-span"><i>t</i></span> наборов входных данных выведите «<span class="tex-font-style-tt">First</span>» (без кавычек), если, при оптимальной игре, выиграет игрок, который ходит первым, и «<span class="tex-font-style-tt">Second</span>» (без кавычек), если выиграет игрок, который ходит вторым. Ответы на разные наборы данных выводите в разных строках в том порядке, в котором они записаны во входных данных.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4<br />10 21<br />31 10<br />0 1<br />10 30<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>First<br />Second<br />Second<br />First<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере первому игроку следует пойти в (11,10). Тогда, после единственного хода второго игрока в (1,10), он возьмет 10 по модулю 1 и выиграет.</p><p>Во втором примере у первого игрока есть два хода в (1,10) и в (21,10). После обоих ходов второй может выиграть.</p><p>В третьем примере у первого игрока нет хода.</p><p>В четвертом примере первый игрок выигрывает за один ход, взяв 30 по модулю 10.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Волшебники и дороги</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>3 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В некоторой стране живут волшебники. Они любят строить города и дороги.</p><p>Раньше в стране было <span class="tex-span"><i>k</i></span> городов, <span class="tex-span"><i>j</i></span>-ый (<span class="tex-span">1 ≤ <i>j</i> ≤ <i>k</i></span>) был расположен в точке (<span class="tex-span"><i>x</i><sub class="lower-index"><i>j</i></sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index"><i>j</i></sub></span>). Было решено наколдовать еще <span class="tex-span"><i>n</i> - <i>k</i></span> городов. Причем <span class="tex-span"><i>i</i></span>-ый (<span class="tex-span"><i>k</i> &lt; <i>i</i> ≤ <i>n</i></span>) город колдовался в точку с координатами (<span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span>):</p><p><ul> <li> <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub> = (<i>a</i>·<i>x</i><sub class="lower-index"><i>i</i> - 1</sub> + <i>b</i>) <i>mod</i> (10<sup class="upper-index">9</sup> + 9)</span> </li><li> <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub> = (<i>c</i>·<i>y</i><sub class="lower-index"><i>i</i> - 1</sub> + <i>d</i>) <i>mod</i> (10<sup class="upper-index">9</sup> + 9)</span> </li></ul></p><p>Здесь <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>b</i></span>, <span class="tex-span"><i>c</i></span>, <span class="tex-span"><i>d</i></span> — простые числа. Причем <span class="tex-span"><i>a</i> ≠ <i>c</i>, <i>b</i> ≠ <i>d</i></span>.</p><p>После постройки всех <span class="tex-span"><i>n</i></span> городов, волшебники заметили удивительное свойство. Для любых двух различных городов с номерами <span class="tex-span"><i>i</i></span> и <span class="tex-span"><i>j</i></span>: <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub> ≠ <i>x</i><sub class="lower-index"><i>j</i></sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub> ≠ <i>y</i><sub class="lower-index"><i>j</i></sub></span>.</p><p>Города построены, пора строить дороги! Было решено использовать самое сложное (и, конечно же, самое мощное) заклинание для постройки дорог. C использованием этого заклинания, между городами <span class="tex-span"><i>u</i></span>, <span class="tex-span"><i>v</i></span> (<span class="tex-span"><i>y</i><sub class="lower-index"><i>u</i></sub></span> &gt; <span class="tex-span"><i>y</i><sub class="lower-index"><i>v</i></sub></span>) проводится дорога тогда и только тогда, когда для любого города <span class="tex-span"><i>w</i></span>, лежащего строго внутри уголка на точках <span class="tex-span"><i>u</i></span>, <span class="tex-span"><i>v</i></span> (см. ниже), есть город <span class="tex-span"><i>s</i></span>, не лежащий в уголке, который находится по <span class="tex-span"><i>x</i></span>-координате строго между <span class="tex-span"><i>w</i></span> и <span class="tex-span"><i>u</i></span> и при этом <span class="tex-span"><i>y</i><sub class="lower-index"><i>s</i></sub> &gt; <i>y</i><sub class="lower-index"><i>v</i></sub></span>.</p><p><span class="tex-font-style-it">Уголком</span> на точках <span class="tex-span"><i>p</i><sub class="lower-index">2</sub></span>(<span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">2</sub></span>), <span class="tex-span"><i>p</i><sub class="lower-index">1</sub></span>(<span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">1</sub></span>) (<span class="tex-span"><i>y</i><sub class="lower-index">2</sub> &gt; <i>y</i><sub class="lower-index">1</sub></span>) называется множество точек (<span class="tex-span"><i>x</i>, <i>y</i></span>), для которых выполнено хотя бы одно из двух условий: <ul> <li> <span class="tex-span"><i>min</i>(<i>x</i><sub class="lower-index">1</sub>, <i>x</i><sub class="lower-index">2</sub>) ≤ <i>x</i> ≤ <i>max</i>(<i>x</i><sub class="lower-index">1</sub>, <i>x</i><sub class="lower-index">2</sub>)</span> и <span class="tex-span"><i>y</i> ≥ <i>y</i><sub class="lower-index">1</sub></span> </li><li> <span class="tex-span"><i>y</i><sub class="lower-index">1</sub> ≤ <i>y</i> ≤ <i>y</i><sub class="lower-index">2</sub></span> и <span class="tex-span">(<i>x</i> - <i>x</i><sub class="lower-index">2</sub>)·(<i>x</i><sub class="lower-index">1</sub> - <i>x</i><sub class="lower-index">2</sub>) ≥ 0</span> </li></ul></p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/b66cf8cda27865d75c7e7684895957b52651ed5f.png" /> <span class="tex-font-size-script"> На рисунке изображены примеры уголков </span> </center></p><p>Для того, чтобы опробовать заклинание, оно будет применено ко всем городам, лежащим по <span class="tex-span"><i>x</i></span>-координате в отрезке <span class="tex-span">[<i>L</i>, <i>R</i>]</span>. После постройки дорог руководство страны хочет выбрать как можно больше пар городов, соединенных дорогой, так, что никакой город не лежит в двух или более парах. Вам предлагается для каждого из <span class="tex-span"><i>m</i></span> предложенных вариантов выбора значений <span class="tex-span"><i>L</i></span>, <span class="tex-span"><i>R</i></span> посчитать максимальное количество таких пар после постройки дорог. Обратите внимание, что города, не лежащие в отрезке <span class="tex-span">[<i>L</i>, <i>R</i>]</span> по <span class="tex-span"><i>x</i></span>-координате, никак не влияют на постройку дорог.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке через пробел записаны два целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>k</i> ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>, <span class="tex-span"><i>k</i> ≤ 30</span>). В следующих <span class="tex-span"><i>k</i></span> строках записаны координаты точек расположения городов с первого по <span class="tex-span"><i>k</i></span>-ый. В <span class="tex-span"><i>j</i></span>-й строке записана через пробел пара целых чисел <span class="tex-span"><i>x</i><sub class="lower-index"><i>j</i></sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index"><i>j</i></sub></span> (<span class="tex-span">0 ≤ <i>x</i><sub class="lower-index"><i>j</i></sub>, <i>y</i><sub class="lower-index"><i>j</i></sub> &lt; 10<sup class="upper-index">9</sup> + 9</span>) — координаты <span class="tex-span"><i>j</i></span>-го города.</p><p>В следующей строке через пробел записаны целые числа <span class="tex-span"><i>a</i>, <i>b</i>, <i>c</i>, <i>d</i></span> (<span class="tex-span">2 ≤ <i>a</i>, <i>b</i>, <i>c</i>, <i>d</i> &lt; 10<sup class="upper-index">9</sup> + 9</span>). Гарантируется, что эти числа простые, а так же, что <span class="tex-span"><i>a</i> ≠ <i>c</i>, <i>b</i> ≠ <i>d</i></span>.</p><p>Гарантируется, что для любых двух различных городов с номерами <span class="tex-span"><i>i</i></span> и <span class="tex-span"><i>j</i></span>, <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub> ≠ <i>x</i><sub class="lower-index"><i>j</i></sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub> ≠ <i>y</i><sub class="lower-index"><i>j</i></sub></span>.</p><p>В следующей строке записано целое число <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>m</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество вариантов постройки дорог. В следующих <span class="tex-span"><i>m</i></span> строках через пробел записаны пары целых чисел <span class="tex-span"><i>L</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>R</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>L</i><sub class="lower-index"><i>i</i></sub> ≤ <i>R</i><sub class="lower-index"><i>i</i></sub> &lt; 10<sup class="upper-index">9</sup> + 9</span>) — варианты выбора городов, для постройки дорог.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждой пары чисел <span class="tex-span"><i>L</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>R</i><sub class="lower-index"><i>i</i></sub></span> выведите ответ на задачу в отдельной строке. Ответы для пар выводите в том порядке, в котором пары заданы во входных данных.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6 6<br />0 0<br />1 1<br />2 2<br />3 3<br />4 4<br />5 5<br />2 3 3 2<br />4<br />0 5<br />1 4<br />2 3<br />3 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />2<br />1<br />0<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>6 1<br />0 0<br />3 5 23917 11<br />4<br />0 1000000008<br />0 10<br />100 150<br />200 10000<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />1<br />0<br />1<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере дороги соединяют города в цепочку в порядке возрастания <span class="tex-span"><i>x</i></span>. </p><p>Во втором примере оставшиеся 5 городов будут построены в точках <span class="tex-span">(5,  11); (20,  263098); (65,  292514823); (200,  76958738); (605,  622120197)</span>.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Волшебники и пари</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>3 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В некоторой стране живут волшебники. Они любят заключать странные пари.</p><p>Два волшебника нарисовали ациклический ориентированный граф с <span class="tex-span"><i>n</i></span> вершинами и <span class="tex-span"><i>m</i></span> ребрами (вершины графа пронумерованы от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>). Назовем <span class="tex-font-style-it">истоком</span> вершину, в которую не входит ни одного ребра, а <span class="tex-font-style-it">стоком</span> — вершину, из которой не выходит ни одного ребра. Заметим, что вершина может быть стоком и истоком одновременно. В графе волшебников количество стоков и истоков совпадает. </p><p>Волшебники занумеровали истоки в порядке увеличения номера вершины от <span class="tex-span">1</span> до <span class="tex-span"><i>k</i></span>. Cтоки занумерованы от <span class="tex-span">1</span> до <span class="tex-span"><i>k</i></span> аналогичным способом. </p><p>Для заключения пари, они, как настоящие волшебники, применяют заклинание, которое выбирает набор из <span class="tex-span"><i>k</i></span> путей из всех истоков в стоки, причем так, что никакие два пути не пересекаются по вершинам. В таком случае в каждый сток ведет путь из ровно одного истока. Пусть в <span class="tex-span"><i>i</i></span>-ый сток ведет путь из <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> истока. Тогда назовем пару <span class="tex-span">(<i>i</i>, <i>j</i>)</span> <span class="tex-font-style-it">инверсией</span>, если <span class="tex-span"><i>i</i> &lt; <i>j</i></span> и <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub> &gt; <i>a</i><sub class="lower-index"><i>j</i></sub></span>. Если количество инверсий среди всевозможных пар <span class="tex-span">(<i>i</i>, <i>j</i>)</span>, таких что <span class="tex-span">(1 ≤ <i>i</i> &lt; <i>j</i> ≤ <i>k</i>)</span>, четно, то выиграл первый волшебник (второй отдает ему 1 волшебную монету). Иначе выиграл второй волшебник (он получает 1 волшебную монету от первого).</p><p>Наших волшебников охватил безумный азарт, поэтому они выбирали новые пути снова и снова так долго, что в итоге получили ровно по одному разу все возможные наборы путей. Наборы непересекающихся по вершинам путей считаются различными, если существует ребро, принадлежащее какому-то пути одного набора и не принадлежащее никакому пути другого набора. Для проверки своих записей они просят вас посчитать суммарный выигрыш первого игрока на этих наборах путей по модулю простого числа <span class="tex-span"><i>p</i></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла записано через пробел три целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span>, <span class="tex-span"><i>p</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 600</span>, <span class="tex-span">0 ≤ <i>m</i> ≤ 10<sup class="upper-index">5</sup></span>, <span class="tex-span">2 ≤ <i>p</i> ≤ 10<sup class="upper-index">9</sup> + 7</span>). Гарантируется, что <span class="tex-span"><i>p</i></span> — простое.</p><p>В следующих <span class="tex-span"><i>m</i></span> строках заданы ребра графа. В каждой строке находится пара целых чисел, разделенных пробелом, <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub> <i>b</i><sub class="lower-index"><i>i</i></sub></span> — ребро из вершины <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> в вершину <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span>. Гарантируется, что граф ациклический и что в графе одинаковое число стоков и истоков. Обратите внимание, в графе могут быть кратные ребра.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите ответ на задачу — суммарный выигрыш первого игрока по модулю простого числа <span class="tex-span"><i>p</i></span>. Обратите внимание, что выигрыш может быть отрицательным, но остаток по модулю должен быть неотрицательным (см. пример).</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4 2 1000003<br />1 3<br />2 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 2 1000003<br />4 1<br />3 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1000002<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 4 1000003<br />2 1<br />2 4<br />3 1<br />3 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>6 5 1000003<br />1 4<br />1 5<br />1 6<br />2 6<br />3 6<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5 2 1000003<br />5 1<br />3 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере существует ровно 1 набор путей — <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/4c100300071b70505c9eb8fd6f97456068e38f93.png" />. Число инверсий — 0, что является четным числом. Поэтому первый волшебник получает 1 монету.</p><p>Во втором примере существует ровно 1 набор путей — <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/83cf8c3e6763396a8ead42b4762ff62e4b01f917.png" />. Существует ровно одна инверсия. Поэтому первый получает -1 монету. <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/fa579688f149cd6ab8f4c3c99c47c5a65e52e87c.png" />.</p><p>В третьем примере существует два набора путей, которые учитываются с разными знаками.</p><p>В четвертом примере наборов путей вообще не существует.</p><p>В пятом примере есть три истока — вершины с номерами (2, 3, 5) и три стока — вершины с номерами (1, 2, 4). Для единственного набора путей <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/5ef1a2c8d476f3fea4b49124c0c23f371be35bb9.png" /> существует 2 инверсии, то есть их число <span class="tex-font-style-bf">четно</span>.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
