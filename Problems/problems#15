
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="6h0c6he5gb091e5hfb391hdh3a30h453"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="lw9p5o7wxz5d"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='6h0c6he5gb091e5hfb391hdh3a30h453'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Beta Round #15</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Коттеджный городок</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>64 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Во Флатландии строится коттеджный городок «Плоский». На данный момент в «Плоском» уже построено <span class="tex-span"><i>n</i></span> квадратных домов, центры которых лежат на оси <span class="tex-span"><i>Оx</i></span>. Стороны домов параллельны осям координат. Известно, что никакие два дома не пересекаются, хотя могут касаться друг друга.</p><p>Петя работает в архитектурном бюро, в которое поступил заказ на постройку нового дома в «Плоском». Заказчик хочет, чтобы его дом тоже находился на оси <span class="tex-span"><i>Оx</i></span>, имел форму квадрата со стороной <span class="tex-span"><i>t</i></span>, а также примыкал как минимум к одному из уже существующих домов. Разумеется, его стороны должны быть параллельны осям координат, центр должен находиться на оси <span class="tex-span"><i>Ox</i></span> и он не должен пересекаться ни с каким существующим домом.</p><p>Пете дан список всех домов в «Плоском», помогите ему найти количество возможных положений нового дома.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит целые числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>t</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>t</i> ≤ 1000</span>). Далее идут <span class="tex-span"><i>n</i></span> строк в которых два целых числа перечислены через пробел: <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>, где <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> — <span class="tex-span"><i>x</i></span>-координата центра <span class="tex-span"><i>i</i></span>-го дома, а <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> — длина его стороны (<span class="tex-span"> - 1000 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub> ≤ 1000</span>, <span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 1000</span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите количество возможных положений нового дома.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 2<br />0 4<br />6 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 2<br />0 4<br />5 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 3<br />0 4<br />5 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Центр нового дома не обязательно должен иметь целочисленную <span class="tex-span"><i>x</i></span>-координату.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Лазер</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 second</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>64 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Сегодня в НИИ Пете, как самому ответственному сотруднику, поручили провести очень важный эксперимент. Суть опыта заключается в том, чтобы расплавить плитку шоколада с помощью новой лазерной установки. Установка состоит из прямоугольного ячеистого оперативного поля размером <span class="tex-span"><i>n</i> × <i>m</i></span> сантиметров и руки-робота. Каждая ячейка поля представляет собой квадрат размера <span class="tex-span">1 × 1</span>. На руке-роботе расположены два лазера, направленные на поле перпендикулярно его плоскости. В любой момент времени лазеры попадают в центры некоторых двух клеток поля. Так как лазеры расположены на руке, то их движение происходит синхронно — при перемещении одного из лазеров на некоторый вектор, второй перемещается на тот же вектор.</p><p>Про эксперимент известно следующее: <ul> <li> изначально оперативное поле полностью покрывает шоколадка размером <span class="tex-span"><i>n</i> × <i>m</i></span>, а также оба лазера находятся над полем и включены; </li><li> шоколад, под воздействием лазера плавится только в пределах одной ячейки оперативного поля (над которой находится лазер), лазер должен попадать в центр ячейки поля; </li><li> руку-робота можно передвигать только параллельно краям оперативного поля, после каждого перемещения лазеры должны указывать в центры ячеек; </li><li> очень важно, чтобы в любой момент оба лазера находились над полем. Пете совсем не хочется стать вторым Гордоном Фрименом. </li></ul></p><p>Даны <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span>, а также ячейки <span class="tex-span">(<i>x</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">1</sub>)</span> и <span class="tex-span">(<i>x</i><sub class="lower-index">2</sub>, <i>y</i><sub class="lower-index">2</sub>)</span>, над которыми изначально висят лазеры (<span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> — номер столбца, <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> — номер строки). Будем считать, что строки нумеруются сверху вниз числами от <span class="tex-span">1</span> до <span class="tex-span"><i>m</i></span>, а столбцы — числами от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span> слева направо. Необходимо найти количество ячеек оперативного поля, шоколад на которых не может быть расплавлен при соблюдении указанных правил.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке задано число <span class="tex-span"><i>t</i></span> <span class="tex-span">(1 ≤ <i>t</i> ≤ 10000)</span> — количество наборов входных данных в тесте. В каждой из следующих <span class="tex-span"><i>t</i></span> строк перечислены через пробел целые числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span>, <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">2</sub></span> (<span class="tex-span">2 ≤ <i>n</i>, <i>m</i> ≤ 10<sup class="upper-index">9</sup></span>, <span class="tex-span">1 ≤ <i>x</i><sub class="lower-index">1</sub>, <i>x</i><sub class="lower-index">2</sub> ≤ <i>n</i></span>, <span class="tex-span">1 ≤ <i>y</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">2</sub> ≤ <i>m</i></span>). Ячейки <span class="tex-span">(<i>x</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">1</sub>)</span> и <span class="tex-span">(<i>x</i><sub class="lower-index">2</sub>, <i>y</i><sub class="lower-index">2</sub>)</span> различны.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В каждой из <span class="tex-span"><i>t</i></span> строк выходного файла должен содержатся ответ на соответствующий набор входных данных.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br />4 4 1 1 3 3<br />4 3 1 1 2 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>8<br />2<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Промышленный Ним</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>64 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В городе Петрограде есть <span class="tex-span"><i>n</i></span> камнедобывающих предприятий.</p><p>В каждом из них стоит в ряд <span class="tex-span"><i>m</i><sub class="lower-index"><i>i</i></sub></span> самосвалов (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>n</i></span>). Известно, что в первом самосвале <span class="tex-span"><i>i</i></span>-го предприятия лежит <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> камней. Во втором самосвале <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub> + 1</span> камень, в третьем <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub> + 2</span>, в <span class="tex-span"><i>m</i><sub class="lower-index"><i>i</i></sub></span>-ом (последнем для <span class="tex-span"><i>i</i></span>-го предприятия) <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub> + <i>m</i><sub class="lower-index"><i>i</i></sub> - 1</span> камней. </p><p>Двое олигархов играют во всем известную игру Ним. Игроки ходят по очереди. За свой ход игрок может выбрать любой самосвал и забрать из него любое ненулевое количество камней. Проигрывает тот из них, кто не может сделать ход. </p><p>Олигархи пожелали остаться неизвестными, но так как вам придется предугадывать, кто из них станет победителем при правильной игре, то если выиграет олигарх, который ходит первым, выведите «<span class="tex-font-style-tt">tolik</span>», иначе «<span class="tex-font-style-tt">bolik</span>».</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных находится число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество предприятий. Далее перечислено <span class="tex-span"><i>n</i></span> строк, в которых записано по два числа — количество камней <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">16</sup></span>) в первом самосвале <span class="tex-span"><i>i</i></span>-го предприятия и количество самосвалов <span class="tex-span"><i>i</i></span>-го предприятия <span class="tex-span"><i>m</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>m</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">16</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите «<span class="tex-font-style-tt">tolik</span>», если выиграл первый олигарх, иначе — «<span class="tex-font-style-tt">bolik</span>».</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br />2 1<br />3 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>tolik<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br />1 1<br />1 1<br />1 1<br />1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>bolik<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Карта</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>128 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Задана карта местности, представляющая собой прямоугольную матрицу <span class="tex-span"><i>n</i> × <i>m</i></span>, в каждой клетке которой записана средняя высота соответствующего участка местности. Прорабу Пете нужно расположить на карте несколько городов, каждый из которых на карте займет прямоугольник размера <span class="tex-span"><i>a</i> × <i>b</i></span> клеток. Но прежде чем построить город в определенном месте, Пете необходимо убрать лишнюю землю с участка, на котором будет строиться город. Для этого он выбирает клетку наименьшей высоты на этом участке и делает высоту всех клеток на участке равной высоте этой клетки. Будем считать, что для того, чтобы опустить уровень земли с <span class="tex-span"><i>h</i><sub class="lower-index">2</sub></span> до <span class="tex-span"><i>h</i><sub class="lower-index">1</sub></span> (<span class="tex-span"><i>h</i><sub class="lower-index">1</sub> ≤ <i>h</i><sub class="lower-index">2</sub></span>), необходимо вывезти <span class="tex-span"><i>h</i><sub class="lower-index">2</sub> - <i>h</i><sub class="lower-index">1</sub></span> единиц земли. </p><p>Назовем положение участка под город оптимальным, если количество вывозимой с него земли наименьшее из всех возможных положений. Петя строит города в соответствии со следующим алгоритмом: из всех оптимальных положений участка он выбирает самое верхнее. Если таких положений несколько, он выбирает среди них самое левое. На этом участке он строит город. Петя повторяет этот процесс до тех пор, пока он может построить хотя бы еще один город. На уже застроенных клетках, разумеется, строить вновь нельзя. Помогите Пете расположить города в соответствии с алгоритмом.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке перечислено через пробел четыре целых числа — размеры карты <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span> и размеры города <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>b</i></span> (<span class="tex-span">1 ≤ <i>a</i> ≤ <i>n</i> ≤ 1000</span>, <span class="tex-span">1 ≤ <i>b</i> ≤ <i>m</i> ≤ 1000</span>). Далее идут <span class="tex-span"><i>n</i></span> строк по <span class="tex-span"><i>m</i></span> неотрицательных целых чисел в каждой, задающие матрицу высот. Все числа не превышают <span class="tex-span">10<sup class="upper-index">9</sup></span>. Числа в строках разделяются пробелами.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите <span class="tex-span"><i>k</i></span> — число построенных городов. В следующих <span class="tex-span"><i>k</i></span> строках выведите по 3 числа, разделенных пробелами, — номер строки и номер столбца левого верхнего угла очередного участка, а также объем земли, который требуется с него вывезти. Участки выводите в порядке их построения.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 2 1 2<br />1 2<br />3 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />1 1 1<br />2 1 2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 4 2 2<br />1 5 3 4<br />2 7 6 1<br />1 1 2 2<br />2 2 1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />3 1 2<br />3 3 3<br />1 2 9<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Треугольники</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 second</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>64 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Летом Петя отдыхал у бабушки в селе, когда неподалеку на овец напал волк. Теперь Петя боится ходить через лес, боится обходить лес, боится даже выходить из дому. Объясняет свой страх Петя отнюдь не боязнью волка, а непонятным, на его взгляд, строением леса, который имеет <span class="tex-span"><i>n</i></span> уровней, где <span class="tex-span"><i>n</i></span> — четное число. </p><p>В местном муниципалитете Вам предоставили карту местности, на которой бабушкин домик отмечен точкой <span class="tex-span"><i>H</i></span>, а участки леса выделены заливкой серого цвета (см. рисунок для понимания того, как устроена местность).</p><p>Но все же, после долгого сидения дома, Петя решил поддаться на уговоры бабушки и пойти подышать свежим воздухом. Как человек предусмотрительный, Петя заранее планирует прогулку, и ему необходимо выбрать маршрут. Маршрут, который Петя считает приемлемым для себя, обладает следующими свойствами: <ul> <li> маршрут замкнут, он начинается и заканчивается в домике у бабушки; </li><li> маршрут проходит только по дорожкам леса (отрезки, выделенные черным на рисунке); </li><li> маршрут имеет ненулевую длину (для того чтобы подышать свежим воздухом, Пете все же нужно выйти из дому); </li><li> маршрут не может сам себя пересекать; </li><li> участок земли, очерченный таким замкнутым маршрутом, не должен содержать внутри ни одного участка леса. </li></ul></p><p>Необходимо посчитать количество таких приемлемых ориентированных маршрутов по модулю 1000000009.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/5945210be972aa5fe947f3b8a3a0378a4cade844.png" /> </center></p><p>На рисунке представлен пример карты местности для <span class="tex-span"><i>n</i> = 12</span>. Так как карта имеет регулярную структуру, для других значений <span class="tex-span"><i>n</i></span> ее можно построить самостоятельно по аналогии.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Входные данные содержат единственное целое четное число <span class="tex-span"><i>n</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 10<sup class="upper-index">6</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное число — количество путей Пети по модулю 1000000009.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>10<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>74<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
