
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="43e58186fac21cg9a16c68b5c5ecf9b9"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="cwapl9dnxhkz"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='43e58186fac21cg9a16c68b5c5ecf9b9'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
            <div style="padding:1em 0 0 2px;color:#00a651;">
<a href="/croc2012"><img src="/images/custom/croc-ru.png"/></a>
<span style="padding:1.5em;">Открытый чемпионат Москвы и МО по программированию</span>
</div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">&#1063;&#1077;&#1084;&#1087;&#1080;&#1086;&#1085;&#1072;&#1090; &#1050;&#1056;&#1054;&#1050; 2012 - &#1056;&#1072;&#1091;&#1085;&#1076; 2</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Торговое дело</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Чтобы раздобыть денег на новый эонический бластер, рейнджер Йцукен решил ненадолго заняться торговлей. Он хочет купить некоторое количество товаров (возможно, ничего не купить) на одной из планет, после чего продать купленные товары уже на другой планете. Обратите внимание, что данная операция не повторяется, то есть продажа и покупка производится ровно один раз. Чтобы осуществить свой план, Йцукен собирается взять в банке кредит, покрывающий все расходы, а по окончании операции возвратить взятые в долг деньги (деньги возвращаются без процентов). При этом Йцукен хочет получить как можно больше прибыли. </p><p>Всего в системе <span class="tex-span"><i>n</i></span> планет, на каждой из которых можно купить или продать товары <span class="tex-span"><i>m</i></span> типов (например, продовольствие, медикаменты, оружие, алкоголь и так далее). Для каждой планеты <span class="tex-span"><i>i</i></span> и каждого типа товара <span class="tex-span"><i>j</i></span> известны:</p><p><ul></ul></p><p><li> <span class="tex-span"><i>a</i><sub class="lower-index"><i>ij</i></sub></span> — стоимость покупки единицы товара; </li><li> <span class="tex-span"><i>b</i><sub class="lower-index"><i>ij</i></sub></span> — стоимость продажи единицы товара; </li><li> <span class="tex-span"><i>c</i><sub class="lower-index"><i>ij</i></sub></span> — количество оставшихся единиц товара.</li></p><p>Считается, что на планете <span class="tex-span"><i>i</i></span> можно купить не более <span class="tex-span"><i>c</i><sub class="lower-index"><i>ij</i></sub></span> единиц товара типа <span class="tex-span"><i>j</i></span>, однако продать можно всегда любое количество товаров любого типа.</p><p>Зная, что трюм корабля Йцукена вмещает не более <span class="tex-span"><i>k</i></span> единиц товаров, определите наибольшее количество прибыли, которое Йцукен может получить.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны через пробел три целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span> и <span class="tex-span"><i>k</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 10</span>, <span class="tex-span">1 ≤ <i>m</i>, <i>k</i> ≤ 100</span>) — количество планет, количество типов товаров и размер трюма Йцукена, соответственно.</p><p>Далее идут <span class="tex-span"><i>n</i></span> блоков с описанием каждой планеты.</p><p>В первой строке <span class="tex-span"><i>i</i></span>-ого блока находится название планеты — строка длиной от <span class="tex-span">1</span> до <span class="tex-span">10</span> латинских букв. Первая буква названия — большая, остальные — маленькие. Далее в <span class="tex-span"><i>i</i></span>-ом блоке идут <span class="tex-span"><i>m</i></span> строк, <span class="tex-span"><i>j</i></span>-ая из них содержит три целых числа <span class="tex-span"><i>a</i><sub class="lower-index"><i>ij</i></sub></span>, <span class="tex-span"><i>b</i><sub class="lower-index"><i>ij</i></sub></span> и <span class="tex-span"><i>c</i><sub class="lower-index"><i>ij</i></sub></span> (<span class="tex-span">1 ≤ <i>b</i><sub class="lower-index"><i>ij</i></sub> &lt; <i>a</i><sub class="lower-index"><i>ij</i></sub> ≤ 1000</span>, <span class="tex-span">0 ≤ <i>c</i><sub class="lower-index"><i>ij</i></sub> ≤ 100</span>) — числа, описывающие денежные операции с <span class="tex-span"><i>j</i></span>-м товаром на <span class="tex-span"><i>i</i></span>-й планете. Числа в строках разделяются пробелами.</p><p>Гарантируется, что названия всех планет различны.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число — наибольшее количество прибыли, которое можно получить.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 3 10<br />Venus<br />6 5 3<br />7 6 5<br />8 6 10<br />Earth<br />10 9 0<br />8 6 4<br />10 9 3<br />Mars<br />4 3 0<br />8 4 12<br />7 2 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>16</pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом тестовом примере нужно прилететь на планету <span class="tex-font-style-tt">Venus</span> взять там кредит на 74 денежных единиц и купить 3 единицы первого товара и 7 единиц третьего товара (<span class="tex-span">3·6 + 7·8 = 74</span>). Далее рейнджер должен прилететь на планету <span class="tex-font-style-tt">Earth</span> и продать там купленные товары. За них он получит <span class="tex-span">3·9 + 7·9 = 90</span>, из этих денег нужно отдать 74 за кредит. Получается прибыль равна 16 денежным единицам. В данном примере большую прибыль получить невозможно.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Разрезание слов</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Рассмотрим одну интересную игру со словами. В этой игре требуется из одного слова получить другое посредством специальных операций. </p><p>Пусть у нас есть слово <span class="tex-span"><i>w</i></span>, разделим это слово на две непустые части <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span> так, что <span class="tex-span"><i>w</i> = <i>xy</i></span>. Операцией <span class="tex-font-style-it">split</span>, назовем преобразование слова <span class="tex-span"><i>w</i> = <i>xy</i></span> в слово <span class="tex-span"><i>u</i> = <i>yx</i></span>. Например, слово «<span class="tex-font-style-tt">wordcut</span>» посредством одной операции <span class="tex-font-style-it">split</span> можно преобразовать в слово «<span class="tex-font-style-tt">cutword</span>».</p><p>Вам даны два слова <span class="tex-span"><i>start</i></span> и <span class="tex-span"><i>end</i></span>. Посчитайте сколькими способами можно получить из слова <span class="tex-span"><i>start</i></span> слово <span class="tex-span"><i>end</i></span>, применив к слову <span class="tex-span"><i>start</i></span> последовательно ровно <span class="tex-span"><i>k</i></span> операций <span class="tex-font-style-it">split</span>. </p><p>Два способа считаются различными, если различаются последовательности примененных операций. Две последовательности операций различны, если существует такой номер <span class="tex-span"><i>i</i></span> (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>k</i></span>), что в <span class="tex-span"><i>i</i></span>-ой операции первой последовательности слово делится на части <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span>, в <span class="tex-span"><i>i</i></span>-ой операции второй последовательности слово делится на части <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span>, и при этом <span class="tex-span"><i>x</i> ≠ <i>a</i></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано непустое слово <span class="tex-span"><i>start</i></span>, во второй — непустое слово <span class="tex-span"><i>end</i></span>. Слова состоят из строчных латинских букв. Количество букв в слове <span class="tex-span"><i>start</i></span> совпадает с количеством букв в слове <span class="tex-span"><i>end</i></span> и не превышает <span class="tex-span">1000</span> букв. Гарантируется, что слова <span class="tex-span"><i>start</i></span> и <span class="tex-span"><i>end</i></span> состоят из не менее <span class="tex-span">2</span> букв.</p><p>В третьей строке записано целое число <span class="tex-span"><i>k</i></span> (<span class="tex-span">0 ≤ <i>k</i> ≤ 10<sup class="upper-index">5</sup></span>) — требуемое количество операций.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное число — ответ на задачу. Так как это число может оказаться достаточно большим, выведите остаток от деления его на <span class="tex-span">1000000007</span> <span class="tex-span">(10<sup class="upper-index">9</sup> + 7)</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>ab<br />ab<br />2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>ababab<br />ababab<br />1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>ab<br />ba<br />2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере искомый способ:</p><p><span class="tex-font-style-tt">ab</span> <span class="tex-span"> → </span> <span class="tex-font-style-tt">a|b</span> <span class="tex-span"> → </span> <span class="tex-font-style-tt">ba</span> <span class="tex-span"> → </span> <span class="tex-font-style-tt">b|a</span> <span class="tex-span"> → </span> <span class="tex-font-style-tt">ab</span></p><p>Во втором примере искомые два способа:</p><p><ul></ul></p><p><li> <span class="tex-font-style-tt">ababab</span> <span class="tex-span"> → </span> <span class="tex-font-style-tt">abab|ab</span> <span class="tex-span"> → </span> <span class="tex-font-style-tt">ababab</span> </li><li> <span class="tex-font-style-tt">ababab</span> <span class="tex-span"> → </span> <span class="tex-font-style-tt">ab|abab</span> <span class="tex-span"> → </span> <span class="tex-font-style-tt">ababab</span></li></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Игра с суперклеем</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Два игрока играют в игру. Игра ведется на прямоугольной доске <span class="tex-span"><i>n</i> × <i>m</i></span> клеток. В начале игры в двух различных клетках доски лежат две фишки. Цель первого игрока — сдвигая фишки, переместить их обе в одну клетку. Цель второго игрока — помешать первому при помощи <span class="tex-font-style-it">тюбика с суперклеем</span>.</p><p>Опишем правила игры более подробно.</p><p>Ходы делаются по очереди. Первым ходит первый игрок.</p><p>Каждым своим ходом первый игрок выбирает одну из своих не приклеенных фишек и сдвигает ее влево, вправо, вверх или вниз на одну клетку. При этом не разрешается двигать фишку за границу доски. В момент начала хода некоторые клетки доски могут быть покрыты клеем. Первый игрок может передвинуть фишку в такую клетку, после чего фишка приклеивается намертво и ее больше нельзя двигать.</p><p>Второй игрок на каждом своем ходу выбирает одну из свободных клеток (в которой нет фишки и клея) и намазывает ее суперклеем. Клей долго сохнет и все покрытые им клетки остаются липкими до конца игры.</p><p>Если после какого-либо хода первого игрока обе фишки оказываются в одной клетке — выигрывает первый игрок. Если первый игрок не может сделать ход (обе его фишки приклеены), то выигрывает второй игрок. Заметим, что ситуации, когда второй игрок не может сделать ход, никогда не возникнет — он всегда может намазать клеем ту клетку, из которой первый игрок только что передвинул фишку.</p><p>Стоит дополнительно пояснить случай, когда обе фишки оказываются приклеены и находятся в одной клетке. Тут выигрывает первый игрок, поскольку игра заканчивается сразу, как только фишки оказываются в одной клетке, и условие проигрыша (невозможность сделать хода) не возникает.</p><p>Известны размеры доски и положения двух фишек на ней. В начале игры все клетки доски свободны от клея. Определите, кто выиграет при правильной игре.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано шесть целых чисел <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span>, <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">2</sub></span> — размеры доски и координаты первой и второй фишки, соответственно (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 100</span>; <span class="tex-span">2 ≤ <i>n</i> × <i>m</i></span>; <span class="tex-span">1 ≤ <i>x</i><sub class="lower-index">1</sub>, <i>x</i><sub class="lower-index">2</sub> ≤ <i>n</i></span>; <span class="tex-span">1 ≤ <i>y</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">2</sub> ≤ <i>m</i></span>). Числа в строке разделяются единичными пробелами.</p><p>Гарантируется, что фишки находятся в различных клетках.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если выигрывает первый игрок — выведите «<span class="tex-font-style-tt">First</span>» без кавычек. Иначе выведите «<span class="tex-font-style-tt">Second</span>» без кавычек.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>1 6 1 2 1 6<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>First</pre></div><div class="input"><div class="title">Входные данные</div><pre>6 5 4 3 2 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>First</pre></div><div class="input"><div class="title">Входные данные</div><pre>10 10 1 1 10 10<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>Second</pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Гипер Строка</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Предсказание Пола Эрдеша сбылось. Инопланетные захватчики приземлились на Землю. Правда, не смотря на наши ожидания, они не спросили значение числа Рамсея (может быть, они посчитали его сами). Пришельцы попросили решить другую задачу, которая на вид ничуть не проще чисел Рамсея. Они грозились, что если люди не сумеют решить поставленную задачу за 2 часа, Земле не поздоровится.</p><p>Перед тем как рассказать задачу, пришельцы определили понятие Гипер Строки. Гипер Строка — это строка, составленная из нескольких базовых строк. Пусть у нас имеется список базовых строк <span class="tex-span"><i>b</i><sub class="lower-index">1</sub>, <i>b</i><sub class="lower-index">2</sub>, ..., <i>b</i><sub class="lower-index"><i>n</i></sub></span>. Гипер Строкой, составленной из индексов <span class="tex-span"><i>i</i><sub class="lower-index">1</sub>, <i>i</i><sub class="lower-index">2</sub>, ..., <i>i</i><sub class="lower-index"><i>m</i></sub></span>, называется конкатенация базовых строк <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i><sub class="lower-index">1</sub></sub>, <i>b</i><sub class="lower-index"><i>i</i><sub class="lower-index">2</sub></sub>, ..., <i>b</i><sub class="lower-index"><i>i</i><sub class="lower-index"><i>m</i></sub></sub></span>. Гипер Строки могут получаться очень длинными, поэтому любые операции с ними выполняются достаточно долго. </p><p>Пришельцы попросили людей посчитать длину наидлиннейшей общей подпоcледовательности Гипер Строки <span class="tex-span"><i>t</i></span> и строки <span class="tex-span"><i>s</i></span>. Ваша задача — помочь человечеству.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит единственное целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 2000</span>) — количество базовых строк.</p><p>Следующие <span class="tex-span"><i>n</i></span> строк содержат базовые строки. Каждая базовая строка состоит из строчных латинских букв. Базовая строка не может быть пустой, а сумма длин всех базовых строк не превосходит <span class="tex-span">10<sup class="upper-index">6</sup></span>.</p><p>Следующая строка содержит единственное целое число <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>m</i> ≤ 2000</span>) — количество базовых строк в Гипер Строке <span class="tex-span"><i>t</i></span>.</p><p>Следующая строка содержит <span class="tex-span"><i>m</i></span> целых чисел, записанных через пробел, <span class="tex-span"><i>i</i><sub class="lower-index">1</sub>, <i>i</i><sub class="lower-index">2</sub>, ..., <i>i</i><sub class="lower-index"><i>m</i></sub></span> (<span class="tex-span">1 ≤ <i>i</i><sub class="lower-index"><i>j</i></sub> ≤ <i>n</i></span>) — индексы базовых строк, из которых составлена Гипер Строка <span class="tex-span"><i>t</i></span>.</p><p>Последняя строка содержит непустую строку <span class="tex-span"><i>s</i></span>. Строка <span class="tex-span"><i>s</i></span> состоит только из строчных латинских букв и ее длина не превосходит <span class="tex-span">2000</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — длину наидлиннейшей общей подпоследовательности Гипер Строки <span class="tex-span"><i>t</i></span> и строки <span class="tex-span"><i>s</i></span>. Если нет ни одной общей подпоследовательности, выведите 0.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br />cba<br />dgh<br />2<br />1 2<br />aedfhr<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2<br />b<br />a<br />5<br />1 2 1 2 1<br />aaa<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p><span class="tex-font-style-it">Длиной</span> строки <span class="tex-span"><i>s</i></span> называется количество символов в ней. Если длина строки <span class="tex-span"><i>s</i></span> обозначается <span class="tex-span">|<i>s</i>|</span>, строку можно записать <span class="tex-span"><i>s</i></span> в виде <span class="tex-span"><i>s</i> = <i>s</i><sub class="lower-index">1</sub><i>s</i><sub class="lower-index">2</sub>... <i>s</i><sub class="lower-index">|<i>s</i>|</sub></span>.</p><p>Непустую строку <span class="tex-span"><i>y</i> = <i>s</i>[<i>p</i><sub class="lower-index">1</sub><i>p</i><sub class="lower-index">2</sub>... <i>p</i><sub class="lower-index">|<i>y</i>|</sub>] = <i>s</i><sub class="lower-index"><i>p</i><sub class="lower-index">1</sub></sub><i>s</i><sub class="lower-index"><i>p</i><sub class="lower-index">2</sub></sub>... <i>s</i><sub class="lower-index"><i>p</i><sub class="lower-index">|<i>y</i>|</sub></sub></span> (<span class="tex-span">1 ≤ <i>p</i><sub class="lower-index">1</sub> &lt; <i>p</i><sub class="lower-index">2</sub> &lt; ... &lt; <i>p</i><sub class="lower-index">|<i>y</i>|</sub> ≤ |<i>s</i>|</span>) будем называть <span class="tex-font-style-it">подпоследовательностью</span> строки <span class="tex-span"><i>s</i></span>. Например, «<span class="tex-font-style-tt">coders</span>» — подпоследовательность «<span class="tex-font-style-tt">codeforces</span>».</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Археология</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>На этот раз вам нужно помочь группе ученых-исследователей на одном острове в Тихом Океане. Они изучают культуру древних племен, живших на этом острове много лет назад.</p><p>Всего было раскопано <span class="tex-span"><i>n</i></span> деревень. Некоторые пары деревень были соединены дорогами. По дорогам можно было двигаться в обоих направлениях. Всего было ровно <span class="tex-span"><i>n</i> - 1</span> дорог, и из любой деревни можно было добраться в любую другую.</p><p>Племена были неспокойны и часто воевали. В результате войн некоторые деревни полностью уничтожались. В более спокойные годы некоторые из деревень возрождались заново.</p><p>В каждый момент времени <span class="tex-font-style-it">использовались</span> только те дороги, которые принадлежали какому-либо кратчайшему пути между двумя <span class="tex-font-style-it">существующими в данный момент</span> деревнями. Другими словами, использовалось наименьшее подмножество дорог так, чтобы из любой существующей деревни можно было добраться до любой другой существующей. Обратите внимание, что за всю историю острова существовало ровно <span class="tex-span"><i>n</i> - 1</span> дорог, найденных исследователями, а других дорог никогда не было.</p><p>Исследователи полагают, что наблюдения за суммарной длиной используемых дорог в разные моменты времени помогут им лучше понять культуру племен и ответить на ряд исторических вопросов.</p><p>Вам будет предоставлена вся история существования племен. Ваша задача — определить суммарную длину используемых дорог в некоторые из моментов времени.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке дано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество деревень. В последующих <span class="tex-span"><i>n</i> - 1</span> строках описаны дороги. <span class="tex-span"><i>i</i></span>-ая из этих строк содержит три целых числа <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>, <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub> ≠ <i>b</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span">1 ≤ <i>c</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>, <span class="tex-span">1 ≤ <i>i</i> &lt; <i>n</i></span>) — номера деревень, которые соединяет <span class="tex-span"><i>i</i></span>-ая дорога и ее длина. Числа в строках записаны через пробел.</p><p>В следующей строке дано целое число <span class="tex-span"><i>q</i></span> (<span class="tex-span">1 ≤ <i>q</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество запросов. Далее идут <span class="tex-span"><i>q</i></span> запросов по одному в строке, упорядоченные по времени. Каждый запрос имеет один из трех типов:</p><p><ul></ul></p><p><li> «<span class="tex-font-style-tt">+ </span><span class="tex-span"><i>x</i></span>» — деревня с номером <span class="tex-span"><i>x</i></span> возрождается (<span class="tex-span">1 ≤ <i>x</i> ≤ <i>n</i></span>). </li><li> «<span class="tex-font-style-tt">- </span><span class="tex-span"><i>x</i></span>» — деревня с номером <span class="tex-span"><i>x</i></span> уничтожается (<span class="tex-span">1 ≤ <i>x</i> ≤ <i>n</i></span>). </li><li> «<span class="tex-font-style-tt">?</span>» — в этот момент времени археологи хотят знать суммарную длину используемых дорог.</li></p><p>Гарантируется, что запросы не противоречат друг другу, то есть не будет запросов на уничтожение несуществующих деревень или возрождение уже существующих. Гарантируется, что имеется хотя бы один запрос типа «<span class="tex-font-style-tt">?</span>». Также гарантируется, что по заданным дорогам из любой деревни можно добраться в любую другую.</p><p>Считается, что в начальный момент времени ни одной деревни не существует.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>На каждый запрос типа «<span class="tex-font-style-tt">?</span>» выведите суммарную длину используемых дорог в отдельной строке. Ответы за запросы должны быть выведены в том порядке, в котором запросы перечислены во входных данных.</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битовых чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> или спецификатор <span class="tex-font-style-tt">%I64d</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6<br />1 2 1<br />1 3 5<br />4 1 7<br />4 5 3<br />6 4 2<br />10<br />+ 3<br />+ 1<br />?<br />+ 6<br />?<br />+ 5<br />?<br />- 6<br />- 3<br />?<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5<br />14<br />17<br />10<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
