
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="eh6c84ebc0b8a58a5gaad47aa9e8bc61"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="nno41fu2x4qd"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='eh6c84ebc0b8a58a5gaad47aa9e8bc61'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">MemSQL start[c]up Round 1</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Квадрат и прямоугольники</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Красная шапочка нарисовала <span class="tex-span"><i>n</i></span> прямоугольников. Углы прямоугольников имеют целочисленные координаты, а их ребра параллельны осям <span class="tex-span"><i>Ox</i></span> и <span class="tex-span"><i>Oy</i></span>. Прямоугольники могут касаться друг друга, но не могут пересекаться (то есть не существует точки, которая принадлежит внутренности более одного прямоугольника). </p><p>Ваша задача — определить, образуют ли нарисованные прямоугольники квадрат. Иными словами, определите, существует ли такой квадрат, что множество точек, лежащих внутри или на границе хотя бы одного прямоугольника, в точности равно множеству точек, лежащих внутри или на границе этого квадрата.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка содержит целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 5</span>). Каждая из следующих <span class="tex-span"><i>n</i></span> строк содержит четыре целых числа, которые описывают один прямоугольник: <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index">2</sub></span> (<span class="tex-span">0 ≤ <i>x</i><sub class="lower-index">1</sub> &lt; <i>x</i><sub class="lower-index">2</sub> ≤ 31400, 0 ≤ <i>y</i><sub class="lower-index">1</sub> &lt; <i>y</i><sub class="lower-index">2</sub> ≤ 31400</span>) — <span class="tex-span"><i>x</i><sub class="lower-index">1</sub></span> и <span class="tex-span"><i>x</i><sub class="lower-index">2</sub></span> обозначают <span class="tex-span"><i>x</i></span>-координаты левой и правой стороны прямоугольника, <span class="tex-span"><i>y</i><sub class="lower-index">1</sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index">2</sub></span> обозначают <span class="tex-span"><i>y</i></span>-координаты нижней и верхней стороны прямоугольника.</p><p>Прямоугольники не пересекаются (то есть не существует точки, которая принадлежит внутренности более одного прямоугольника).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственную строку выведите «<span class="tex-font-style-tt">YES</span>», если нарисованные прямоугольники образуют квадрат, или «<span class="tex-font-style-tt">NO</span>» в противном случае.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br />0 0 2 3<br />0 3 3 5<br />2 0 5 2<br />3 2 5 5<br />2 2 3 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br />0 0 2 3<br />0 3 3 5<br />2 0 5 2<br />3 2 5 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Стадион и игры</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Иван Дурак организует соревнование по футболу. Для этого соревнования он будет использовать следующую систему:</p><p><ol> <li> На первых нескольких (возможно, нуле) этапах, покуда количество команд четно, они разбиваются на пары, и в каждой паре команды играют друг с другом одну игру. На каждом таком этапе проигравший в паре выбывает из соревнования (ничей быть не может). Такие этапы проводятся, пока не останется нечетное количество команд. </li><li> Если осталась ровно одна команда, то она объявляется победителем, и соревнование завершается. Иначе команды играют по одной игре каждая с каждой (если было <span class="tex-span"><i>x</i></span> команд, то будет сыграно <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/633d3cd6417e5c6e9ea549a0e8c5ec3fedb38b92.png" /> игр), после чего соревнование завершается. </li></ol></p><p>Например, если в начале было 20 команд, то после первого этапа останется всего 10 команд. После второго этапа останется всего пять команд, и они сыграют по одной игре каждая с каждой. Итого будет сыграно 10+5+10=25 игр.</p><p>Красная Шапочка уже зарезервировала для Ивана Дурака стадион на <span class="tex-span"><i>n</i></span> игр. Помогите ему определить, сколько надо пригласить команд, чтобы в результате было сыграно <span class="tex-font-style-bf">ровно</span> <span class="tex-span"><i>n</i></span> игр. Если вариантов несколько, выведите их все в порядке возрастания. Если нет ни одного варианта, выведите <span class="tex-font-style-tt">-1</span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">18</sup></span>), количество игр, которое следует сыграть.</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битных чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> или спецификатор <span class="tex-font-style-tt">%I64d</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите все возможные количества команд, при которых будет сыграно ровно <span class="tex-span"><i>n</i></span> игр, в порядке возрастания. Если ни при каком количестве команд не будет сыграно ровно <span class="tex-span"><i>n</i></span> игр, выведите <span class="tex-font-style-tt">-1</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />4<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>25<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>20<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Монстры и бриллианты</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Красная Шапочка нашла одного монстра и книгу о монстрах. В книге она нашла информацию о том, что всего существует <span class="tex-span"><i>n</i></span> типов монстров, и каждый тип монстра имеет номер (целое число от 1 до <span class="tex-span"><i>n</i></span>). А также, что если монстра накормить пирожком, то он превратится в несколько (возможно, ноль) других или таких же монстров, и несколько (не менее одного) бриллиантов. Известно, что монстр определенного типа может превращаться несколькими способами.</p><p>Красная Шапочка взяла монстра и посадила его на полянке. Затем она накормила его пирожком. Покуда на полянке есть хотя бы один монстр, Красная Шапочка продолжает кормить их пирожками. В конце, когда монстров больше не осталось, она собирает все бриллианты, которые получились в процессе превращений монстров.</p><p>Вам дана информация о всех возможных превращениях: для каждого превращения определенного типа монстра, во что он превратится. Известно, что для каждого типа монстра имеется хотя бы одно превращение. Некоторые типы монстров могут иметь больше одного варианта превращения, тогда в тот момент, когда такой монстр превращается, Красная Шапочка выбирает, какое именно превращение будет иметь место в этот раз.</p><p>Для каждого типа монстра определите, каково наименьшее и наибольшее количество бриллиантов, которое Красная Шапочка может собрать к моменту, когда на полянке не останется монстров, если изначально у нее будет один монстр этого типа. Учтите, Красная Шапочка имеет бесконечно большой запас пирожков.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке содержится два целых числа: <span class="tex-span"><i>m</i></span> и <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>m</i>, <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>), количество возможных превращений и количество различных типов монстров. В последующих <span class="tex-span"><i>m</i></span> строках перечислены превращения по одному в строке. Описание каждого превращения начинается с целого числа (типа монстра) <span class="tex-span"><i>m</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>m</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>), а затем положительного целого числа <span class="tex-span"><i>l</i><sub class="lower-index"><i>i</i></sub></span>, обозначающего количество монстров и бриллиантов, в которые может превратиться текущий монстр. Далее в строке следуют <span class="tex-span"><i>l</i><sub class="lower-index"><i>i</i></sub></span> целых чисел — во что превращается текущий монстр: положительное число обозначает монстра соответствующего типа, <span class="tex-font-style-tt">-1</span> обозначает бриллиант.</p><p>Для каждого типа монстра существует хотя бы одно превращение. Каждое превращение содержит хотя бы один бриллиант. Сумма всех <span class="tex-span"><i>l</i><sub class="lower-index"><i>i</i></sub></span> не превышает <span class="tex-span">10<sup class="upper-index">5</sup></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждого типа монстра, в порядке их номеров, выведите одну строку с двумя целыми числами: минимальное и максимальное количество бриллиантов, которое можно получить к моменту, когда на полянке не останется ни одного монстра, если начать с одним монстром этого типа. Если, начав с этого монстра, Красная Шапочка не имеет никакого шанса остаться без монстров на полянке, выведите <span class="tex-font-style-tt">-1</span> вместо минимального и <span class="tex-font-style-tt">-1</span> вместо максимального значения. Если, начав с этим монстром, Красная Шапочка может получить произвольно большое количество бриллиантов, выведите <span class="tex-font-style-tt">-2</span> вместо максимального значения. </p><p>Если любое значение в выходных данных превышает <span class="tex-span">314000000</span> (но является конечным), выведите <span class="tex-span">314000000</span> вместо этого значения.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6 4<br />1 3 -1 1 -1<br />1 2 -1 -1<br />2 3 -1 3 -1<br />2 3 -1 -1 -1<br />3 2 -1 -1<br />4 2 4 -1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2 -2<br />3 4<br />2 2<br />-1 -1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 2<br />1 2 1 -1<br />2 2 -1 -1<br />2 3 2 1 -1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1 -1<br />2 2<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Царство и государство</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 секунд</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>512 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Красная Шапочка и Иван Дурак внезапно обнаружили себя за тридевять земель, в мире, который представлен огромным цилиндром. На одном из оснований цилиндра (назовем его «верх цилиндра») вся поверхность занята некоторым царством, на другом основании (назовем его «низ цилиндра») вся поверхность занята некоторым государством, а боковая поверхность цилиндра целиком покрыта морем.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/cb39501d0d95153412d4703d91346ae63fb0b988.png" /> </center></p><p>В один прекрасный день царь некоторого царства и государь некоторого государства решили, что не дело это морю пропадать зря, когда его можно превратить в землю и тем самым расширить границы своих владений. Для того, чтобы писари могли вести учет происходящего, море представили в виде сетки, состоящей из <span class="tex-span"><i>r</i></span> строк и <span class="tex-span"><i>c</i></span> столбцов — каждая ячейка этой сетки представляет некоторую прямоугольную область на стороне цилиндра. Строки занумерованы от 1 до <span class="tex-span"><i>r</i></span> сверху вниз, а столбцы — от 1 до <span class="tex-span"><i>c</i></span> слева направо. Две ячейки считаются смежными, если у них есть общая сторона. Кроме того, если две ячейки расположены в одной строке — одна в самом левом столбце, а другая — в самом правом, то они тоже смежны.</p><p>Изначально все ячейки покрыты морем. Теперь царь и государь планируют превратить часть из них в землю одна за одной согласно некоторому порядку, который Вам предоставлен.</p><p>Единственной проблемой на пути выполнения их плана является то, что по морю пролегает важный торговый маршрут. Поэтому в процессе превращения моря в землю Вы хотите, чтобы в каждый момент времени существовала последовательность ячеек, удовлетворяющих следующим свойствам (такую последовательность ячеек назовем торговым маршрутом):</p><p><ul> <li> Все ячейки в последовательности являются морем (еще не превращены в землю). </li><li> Первая ячейка в последовательности находится в первой строке (самой верхней). </li><li> Последняя ячейка в последовательности находится в последней строке (самой нижней). </li><li> Любые две последовательные ячейки в последовательности смежны друг с другом. </li></ul></p><p>Красной Шапочке и Ивану Дураку поручили переработать план так, чтобы в любой момент времени существовал хотя бы один торговый маршрут. План Ивана и Панамки очень прост — каждый раз, когда ячейка должна быть превращена из моря в землю, они проверяют, не получится ли так, что после превращения не останется ни одного торгового маршрута. Если хотя бы один маршрут остается, они превращают море в землю на этой ячейке, и переходят к следующей ячейке. Если ни одного маршрута не остается, они не превращают эту ячейку в землю, и переходят к следующей ячейке.</p><p>Ваша задача симулировать этот процесс, и определить, сколько же ячеек в конечном итоге будет превращено из моря в землю.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке содержатся три целых числа <span class="tex-span"><i>r</i></span>, <span class="tex-span"><i>c</i></span> и <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>r</i>, <i>c</i> ≤ 3000</span>, <span class="tex-span">1 ≤ <i>n</i> ≤ 3·10<sup class="upper-index">5</sup></span>). В последующих <span class="tex-span"><i>n</i></span> строках перечислены ячейки в том порядке, в котором царь и государь хотят превратить их в землю. Каждая такая строка содержит два целых числа: <span class="tex-span"><i>r</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>r</i><sub class="lower-index"><i>i</i></sub> ≤ <i>r</i>, 1 ≤ <i>c</i><sub class="lower-index"><i>i</i></sub> ≤ <i>c</i>)</span> — соответственно номер строки и номер столбца ячейки, которую надо превратить в землю. Все ячейки в плане попарно различны.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственной строке выведите целое число — сколько ячеек из плана Красная Шапочка и Иван Дурак смогут перекрасить, следуя их плану.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 4 9<br />2 2<br />3 2<br />2 3<br />3 4<br />3 1<br />1 3<br />2 1<br />1 1<br />1 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Ниже представлены превращения, которые были выполнены (красной линией показан возможный торговый маршрут, желтым цветом или красным цветом помечается текущая рассматриваемая ячейка, в зависимости от того существует торговый маршрут или нет):</p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/a5642beb4898ab9071051aaad1c8f0ef10220469.png" /></p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/289e9dbdaae901cc43e5479351b91bf75ee9b403.png" /></p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/869a62d74980d88e98634c9aa6f84ef2ca4f5c69.png" /></p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/ff229ac2e3efc16577bce2dc43a0ed7d544d1880.png" /></p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/0cf07fa5e0c8943f8564a4bd22f7000f821a1005.png" /></p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/50c060e482315d8547ebd05f13e7a489242d62bd.png" /></p><p>После этого превращения не остается ни одного маршрута, поэтому превращение не осуществлено.</p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/ae28acac2ae066c636672051170a9d380f379119.png" /></p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/006b3fed091db2c4d4e245d58fcebe17f16991c8.png" /></p><p>Маршрута нет, превращение не осуществлено.</p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/f315d631dbbf7b0920c743b269466ff9c2f33203.png" /></p><p>Не забывайте, что самая левая и самая правая ячейки одной строки смежны.</p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/4054c252bc4bc4fc90ecaa643f57c76825698e86.png" /></p><p>Маршрута нет, превращение не осуществлено.</p><p>Соответственно, результат:</p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/e76d5441ef93dd51592e6448f5614d8f38f3cad7.png" /></p><p>В землю превращено шесть ячеек.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Тропинки и полянки</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Красная Шапочка и Иван Дурак гуляют по лесу. Гуляя по лесу, они обнаружили, что в лесу есть тропинки и полянки. Всего в лесу <span class="tex-span"><i>n</i></span> полянок, которым Иван Дурак назначил номера от <span class="tex-span">0</span> до <span class="tex-span"><i>n</i> - 1</span>. Иван Дурак заметил, что для каждой полянки <span class="tex-span"><i>i</i></span>, из нее есть ровно две тропинки: одна ведет в полянку номер <span class="tex-span">(2·<i>i</i>) <i>mod</i> <i>n</i></span>, вторая — в полянку <span class="tex-span">((2·<i>i</i>) + 1) <i>mod</i> <i>n</i></span>. </p><p>Красная Шапочка, в свою очередь, заметила, что все тропинки однонаправленные (Красная Шапочка не может объяснить природу этого явления). Теперь, стоя в полянке с номером 0, Красная Шапочка задалась вопросом — если она начнет гулять по тропинкам, может ли она обойти все полянки ровно по одному разу и в конце вернуться на полянку с номером 0 опять (тем самым посетив ее дважды)?</p><p>Запись <span class="tex-span"><i>x</i> <i>mod</i> <i>y</i></span> обозначает операцию взятия остатка от деления числа <span class="tex-span"><i>x</i></span> на число <span class="tex-span"><i>y</i></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Единственная строка содержит целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество полянок.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите порядок, в котором следует обойти полянки. Каждая полянка должна быть выведена ровно один раз, кроме полянки 0, которая должна быть выведена ровно дважды: первой и последней в списке. Если решения не существует, выведите <span class="tex-font-style-tt">-1</span>. Если решений несколько, выведите любое из них.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 1 0<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1</pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 1 3 2 0<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>16<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 1 2 4 9 3 6 13 10 5 11 7 15 14 12 8 0<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
