
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="e9gh6b2b8537cd0c1cfge8433004eh4g"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="18ah0p8dwheiy"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='e9gh6b2b8537cd0c1cfge8433004eh4g'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Round #192 (Div. 2)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Тортминатор</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Дан квадратный торт, который имеет вид таблицы размером <span class="tex-span"><i>r</i> × <i>c</i></span>. Каждая ячейка таблицы содержит либо гадкую клубничку, либо является пустой. Например, торт размера <span class="tex-span">3 × 4</span> может выглядеть так:</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/44de93c046c6f36542259b9101356e4bdb5ab288.png" /> </center></p><p>Тортминатор намерен съесть этот торт! Каждый раз, когда он ест, он выбирает строку или столбец, не содержащие гадкой клубнички, а содержащие по крайней мере одну несъеденную ячейку торта. Затем Тортминатор поедает все выбранные им ячейки торта. Тортминатор может есть сколько угодно раз.</p><p>Пожалуйста, выведите максимальное количество ячеек, которые может съесть Тортминатор.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка содержит два целых числа <span class="tex-span"><i>r</i></span> и <span class="tex-span"><i>c</i></span> (<span class="tex-span">2 ≤ <i>r</i>, <i>c</i> ≤ 10</span>), обозначающих количество строк и количество столбцов в торте. Следующие <span class="tex-span"><i>r</i></span> строк содержат по <span class="tex-span"><i>c</i></span> символов — <span class="tex-span"><i>j</i></span>-ый символ <span class="tex-span"><i>i</i></span>-ой строки обозначает содержимое ячейки в строке <span class="tex-span"><i>i</i></span> и столбце <span class="tex-span"><i>j</i></span>, и имеет одно из следующих значений: <ul> <li> символ '<span class="tex-font-style-tt">.</span>' обозначает ячейку торта без гадкой клубнички; </li><li> символ '<span class="tex-font-style-tt">S</span>' обозначает ячейку торта с гадкой клубничкой. </li></ul></p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите максимальное количество ячеек торта, которые может съесть тортминатор.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 4<br />S...<br />....<br />..S.<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>8<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере возможная стратегия поедания максимального количества ячеек торта следующая (выполнено 3 поедания).</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/ec26a6ef22d7dafda296a1824e3dfd3496ff7158.png" /> </center></p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/62d956093efa0f355d9f3571ca47e7c4774c5402.png" /> </center></p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/420e761ca40e1cbf73c0396d053b62ee74921214.png" /> </center></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Строим дорогу</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В одной стране есть <span class="tex-span"><i>n</i></span> городов. Изначально в этой стране нет дорог. Но вот, однажды король решает построить дороги, соединяющие пары городов. По дорогам можно путешествовать в любую сторону. Король хочет построить дороги так, чтобы можно было добраться из любого города в любой другой, проехав не более двух дорог. Также дано <span class="tex-span"><i>m</i></span> пар городов — между этими парами городов дороги строить нельзя.</p><p>Ваша задача — построить как можно меньше дорог так, чтобы вышеперечисленные условия выполнялись. Ограничения гарантируют, что это возможно всегда.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка содержит два целых числа, <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/94f406a06721e89d57a14b6dfade59c6341e93e8.png" />.</p><p>Затем следует <span class="tex-span"><i>m</i></span> строк, каждая строка состоит из двух целых чисел, <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>, <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub> ≠ <i>b</i><sub class="lower-index"><i>i</i></sub></span>), показывающих, что нельзя строить дорогу между городами <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span>. Считайте, что города пронумерованы от 1 до <span class="tex-span"><i>n</i></span>.</p><p>Гарантируется, что каждая пара городов упоминается во входных данных ровно один раз.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите целое число <span class="tex-span"><i>s</i></span>: наименьшее количество дорог, которые надо построить. Затем следует вывести <span class="tex-span"><i>s</i></span> строк, по два целых числа <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>, <i>a</i><sub class="lower-index"><i>i</i></sub> ≠ <i>b</i><sub class="lower-index"><i>i</i></sub></span>) в каждой, означающих, что надо построить дорогу между городами <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span>.</p><p>Если существует несколько решений, можно выводить любое.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4 1<br />1 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />1 2<br />4 2<br />2 3<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Ниже показано одно из возможных решений тестового примера: <center> <img class="tex-graphics" src="http://codeforces.ru/renderer/7f77a4f9a6393358cb91d1df1102b3808b6e6ddf.png" /> </center></p><p>Примеры неправильных решений:</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/b66e560c0ca1d7e50d36502a290747f37c06a0dd.png" /> </center> Решение, изображенное на картинке выше, неверно из-за того, что количество построенных дорог не минимально (<span class="tex-span">4</span> против <span class="tex-span">3</span>). Также, здесь строится дорога между городами <span class="tex-span">1</span> и <span class="tex-span">3</span>, несмотря на то, что во входных данных указан запрет на строительство дороги между этой парой.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/7faa2cff6a093a8716ca6c15c021afd9cc09043c.png" /> </center> Решение, изображенное на картинке выше, неверно, так как нужно проехать по меньшей мере <span class="tex-span">3</span> дороги, чтобы попасть из города <span class="tex-span">1</span> в город <span class="tex-span">3</span>, а в Вашем ответе должно быть возможно добраться из любого города в любой другой, пройдя не более <span class="tex-span">2</span> дорог.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/192f58383519aeea73e0be933b5f11007b4939a3.png" /> </center> И наконец, это решение неверно потому, что должна быть возможность добраться от любого города до любого другого, а в этом ответе невозможно добраться от <span class="tex-span">1</span> до <span class="tex-span">3</span>, от <span class="tex-span">2</span> до <span class="tex-span">3</span>, и от <span class="tex-span">4</span> до <span class="tex-span">3</span>.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Очищение</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вы — искатель приключений. Сейчас Вы путешествуете по злому храму. Одолев пару злых зомби, Вы прибыли в квадратную комнату, состоящую из плиток, выложенных в таблицу размера <span class="tex-span"><i>n</i> × <i>n</i></span>. Строки пронумерованы от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span> сверху вниз, а столбцы пронумерованы с <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span> слева направо. В дальнем углу комнаты находится дверь, закрытая злыми магическими силами. На двери написано следующее:</p><p><center> <span class="tex-font-style-it">Очищение от всякого зла пробудит дверь!</span> </center></p><p>Так как Вы довольно опытный искатель приключений, Вы мгновенно понимаете, в чем тут дело. Вы замечаете, что каждая ячейка в таблице изначально является злой. Надо очистить все эти ячейки.</p><p>Единственный известный Вам способ очищения плиток — заклинание «Очищение». Заклинание накладывается на одну плитку, а затем все ячейки в той же строке, а также все ячейки в том же столбце (включая выбранную плитку) очищаются! Разрешается очищать клетку несколько раз.</p><p>Вы хотели бы очистить все <span class="tex-span"><i>n</i> × <i>n</i></span> ячеек, накладывая заклинание очищения как можно меньше раз. В теории все просто, но вы только что заметили, что есть еще особо злые плитки. На них заклинание очищения нельзя накладывать, даже после того, как они были очищены. Но эти плитки все же можно очистить, если наложить заклинание очищения на ячейку в той же строке или столбце.</p><p>Пожалуйста, найдите способ очистить все ячейки минимальным количеством накладываемых заклинаний. Если такого способа нет, выведите -1.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано единственное целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100</span>). В следующих <span class="tex-span"><i>n</i></span> строках записано по <span class="tex-span"><i>n</i></span> символов: <span class="tex-span"><i>j</i></span>-ый символ <span class="tex-span"><i>i</i></span>-ой строки обозначает ячейку, расположенную в строке <span class="tex-span"><i>i</i></span> и столбце <span class="tex-span"><i>j</i></span>. Особо злые плитки заданы символом «<span class="tex-font-style-tt">E</span>», остальные — символом «<span class="tex-font-style-tt">.</span>».</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если очистить все клетки не удастся, то выведите -1. В противном случае, если Ваше решение накладывает <span class="tex-span"><i>x</i></span> заклинаний очищения, выведите <span class="tex-span"><i>x</i></span> строк. Каждая строка должна состоять из двух целых чисел, обозначающих номер строки и столбца ячейки, на которую следует наложить заклинание очищения.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />.E.<br />E.E<br />.E.<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1 1<br />2 2<br />3 3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br />EEE<br />E..<br />E.E<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />EE.EE<br />E.EE.<br />E...E<br />.EE.E<br />EE.EE<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3 3<br />1 3<br />2 2<br />4 4<br />5 3</pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Первый пример иллюстрируется следующим образом. Фиолетовым выделены неочищенные злые плитки. Красным выделена плитка, на которую наложено заклинание очищения. Желтым выделены плитки, на которые распространяется текущее заклинание (возможно, ранее они уже были очищены). Зеленым выделены ранее очищенные плитки. </p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/4a165e398f78bf80568617de5f2d94a928bec30c.png" /> </center></p><p>Во втором примере очистить ячейку, расположенную в строке <span class="tex-span">1</span> и столбце <span class="tex-span">1</span>, невозможно.</p><p>К третьему примеру:</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/d229a57eee21db157f3834fb6afcd9661688d803.png" /> </center></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Биридианский лес</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вы — разводчик микемонов. Вы на полпути к званию повелителя микемонов, но вот, Вы сталкиваетесь с проблемой: надо пройти через печально известный Биридианский лес.</p><p><span class="tex-font-style-bf">Биридианский лес</span></p><p>Биридианский лес представляет собой двухмерную таблицу, состоящую из <span class="tex-span"><i>r</i></span> строк и <span class="tex-span"><i>c</i></span> столбцов. Каждая ячейка Биридианского леса может либо быть пустой, либо содержать дерево. В пустой ячейке могут распологаться ноль или больше разводчиков микемонов (кроме вас в лесу могут быть и другие разводчики). Разводчики микемонов (включая Вас) не могут заходить в ячейки с деревьями. Одна из ячеек служит ячейкой выхода.</p><p>Вам даны исходная таблица с Вашим начальным положением, ячейка выхода и начальные положения всех остальных разводчиков. Вот пример такой таблицы (из первого тестового примера):</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/a88c78c5d02d0145fa193e2359a8ca5bb1b5dd41.png" /> </center></p><p><span class="tex-font-style-bf">Передвижение</span></p><p>Разводчики (включая Вас) могут двигаться по лесу. За один ход разводчики могут выполнить одно из следующих действий: <ul> <li> Ничего не делать. </li><li> Перейти из текущей ячейки в одну из четырех соседних ячеек (две ячейки называются соседними тогда, когда они имеют общую сторону). Обратите внимание, что разводчики не могут заходить в ячейки с деревьями. </li><li> Если Вы стоите в ячейке выхода, то можете выходить из леса. Этот ход доступен только Вам — все остальные разводчики микемонов никогда не воспользуются этим шагом для выхода из леса. </li></ul></p><p>После каждого Вашего шага все остальные разводчики одновременно делают ход (каждый из них выбирает ход независимо от других).</p><p><span class="tex-font-style-bf">Битва микемонов</span></p><p>Если Вы и <span class="tex-span"><i>t</i></span> <span class="tex-span">(<i>t</i> &gt; 0)</span> разводчиков микемонов оказались в одной ячейке, тут же разгорится ровно <span class="tex-span"><i>t</i></span> битв микемонов (так как вы будете сражаться с каждым из разводчиков в этой клетке). После сражения, все <span class="tex-span"><i>t</i></span> разводчиков покинут лес.</p><p>Обратите внимание, что после того, как Вы покинете лес, битв микемонов больше быть не может, даже если сразу за Вами в клетку выхода заходит другой разводчик микемонов. Также обратите внимание на то, что битвы проводятся только между Вами и другими разводчиками — между собой остальные разводчики не дерутся (в одной клетке могут находится несколько разводчиков одновременно).</p><p><span class="tex-font-style-bf">Ваша задача</span></p><p>Вы хотели бы выбраться из леса. Для этого надо совершить некоторую последовательность шагов, завершающуюся шагом финального типа. Однако перед тем, как совершить этот грандиозный поход, вам надо опубликовать всю последовательность в своем виртуальном блоге Идол. Затем можно верно следовать этой последовательности движений.</p><p><span class="tex-font-style-bf">Задачи других разводчиков</span></p><p>Вы публикуете Вашу последовательность в личном блоге, поэтому остальные разводчики будут в курсе всех Ваших передвижений еще до первого Вашего шага. Каждый из них будет двигаться так, чтобы гарантированно устроить с Вами битву микемонов, если это возможно. Если кто-то из разводчиков не сможет гарантированно устроить с Вами битву микемонов, он не будет ничего делать.</p><p><span class="tex-font-style-bf">Ваше задание</span></p><p>Выведите минимальное количество битв микемонов, в которых Вам придется поучаствовать, предполагая, что Вы выбираете последовательность движений, минимизирующих это количество. Обратите внимание на то, что Вам необязательно минимизировать количество шагов.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано два целых числа: <span class="tex-span"><i>r</i></span> и <span class="tex-span"><i>c</i></span> (<span class="tex-span">1 ≤ <i>r</i>, <i>c</i> ≤ 1000</span>), обозначающих количества строк и столбцов в Биридианском лесу. В следующих <span class="tex-span"><i>r</i></span> строках записано по строке карты, где каждый символ представляет содержимое соответствующей ячейки: <ul> <li> '<span class="tex-font-style-tt">T</span>': Ячейка, содержащая дерево. </li><li> '<span class="tex-font-style-tt">S</span>': Пустая ячейка и Ваша начальная позиция. Эта ячейка встретится на карте ровно один раз. </li><li> '<span class="tex-font-style-tt">E</span>': Пустая ячейка, содержащая выход. Эта ячейка встретится на карте ровно один раз. </li><li> Цифра (0-9): Ячейка, содержащая цифру X обозначает, что ячейка пустая и в ней стоят X разводчиков (если X равняется нулю, это значит, что ячейка не занята ни одним разводчиком). </li></ul></p><p>Гарантируется, что Вы можете дойти от начальной позиции до ячейки выхода.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственной строке выведите минимально возможное количество битв микемонов, в которых Вам придется принять участие, если Вы выберете стратегию минимизации количества битв микемонов.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5 7<br />000E0T3<br />T0TT0T0<br />010T0T0<br />2T0T0T0<br />0T0S000<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 4<br />SE23<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Следующий рисунок иллюстрирует первый пример. Возможная последовательность движений, которую надо опубликовать в блоге, такова:</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/63ec4f7b0cc13d44b9362ad5eda6ac4f71ad92f0.png" /> </center></p><p>С Вами смогут сразиться три разводчика с левой стороны карты — одинокий разводчик может просто стоять на месте, пока Вы не подойдете, а два других разводчика могут двигаться к одинокому и стоять с ним, поджидая Вас. У трех разводчиков справа не будет возможности сразиться с Вами, и они будут стоять на месте.</p><p>Для второго примера надо опубликовать следующую последовательность в блоге:</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/9de0666d8d03c0974d2bb32445239057dcc22f35.png" /> </center></p><p>Случается вот что. Сначала надо шагнуть на ячейку вправо.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/dbd29113fc4daf3aa874d0da6a0a00a01a86842a.png" /> </center></p><p>Затем, два разводчика правее Вас одновременно шагнут навстречу Вам. Остальные три разводчика не могу с Вами сразиться, поэтому не делают ничего.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/56fb6a835f89f0af33a97a6c623a6d84126cd089.png" /> </center></p><p>Вы находитесь в одной клетке с <span class="tex-span">2</span> разводчиками, а значит тут же случится <span class="tex-span">2</span> битвы микемонов. После этих битв Ваши противники покинут лес.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/dfc1f0dbb2c554af80992fbc2a2d37673a57351d.png" /> </center></p><p>И наконец, надо сделать еще один шаг и выйти из леса.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/4a7a95102b2fe4e06ebcf87a9f376f9ab72e4445.png" /> </center></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Перестроим граф</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>3 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Дан неориентированный граф, состоящий из <span class="tex-span"><i>n</i></span> вершин, пронумерованных от 1 до <span class="tex-span"><i>n</i></span>. У каждой вершины есть не более двух инцидентных ребер. Для каждой пары вершин существует не более одного соединяющего их ребра. Ни одно ребро не соединяет вершину с самой собой.</p><p>Мне хотелось бы построить новый граф таким образом, чтобы: <ul> <li> Новый граф состоял из такого же количества вершин и ребер, что и старый граф. </li><li> Свойства, указанные в первом абзаце, выполнялись. </li><li> Для каждых двух вершин <span class="tex-span"><i>u</i></span> и <span class="tex-span"><i>v</i></span>, если в старом графе есть соединяющее их ребро, то в новом графе соединяющего их ребра нет. </li></ul></p><p>Помогите мне построить новый граф.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка содержит два целых числа через пробел, <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>m</i> ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>), обозначающих количество вершин и ребер, соответственно. Далее следуют <span class="tex-span"><i>m</i></span> строк. Каждая из <span class="tex-span"><i>m</i></span> строк состоит из двух разделенных пробелом целых чисел <span class="tex-span"><i>u</i></span> и <span class="tex-span"><i>v</i></span> (<span class="tex-span">1 ≤ <i>u</i>, <i>v</i> ≤ <i>n</i>; <i>u</i> ≠ <i>v</i></span>), обозначающих ребро между вершинами <span class="tex-span"><i>u</i></span> и <span class="tex-span"><i>v</i></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если построить новый граф с упомянутыми выше свойствами невозможно, то выведите в единственной строке -1. В противном случае выведите ровно <span class="tex-span"><i>m</i></span> строк. Каждая строка должна описывать ребро в формате, указанном во входных данных.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>8 7<br />1 2<br />2 3<br />4 5<br />5 6<br />6 8<br />8 7<br />7 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1 4<br />4 6<br />1 6<br />2 7<br />7 5<br />8 5<br />2 8<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 2<br />1 2<br />2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5 4<br />1 2<br />2 3<br />3 4<br />4 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1 3<br />3 5<br />5 2<br />2 4<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Старый граф из первого примера:</p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/0b51c750728af8078ba0592d8e8e1aa76e27c50d.png" /></p><p>Возможный новый граф для первого примера:</p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/fc83210210593385480a09712d8945a0d7761a27.png" /></p><p>Во втором примере мы не можем построить новый граф, удовлетворяющий ограничениям.</p><p>Старый граф из третьего примера:</p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/39836274643dd475d124a6c2b5ea51ad9f55c07e.png" /></p><p>Возможный новый граф для третьего примера:</p><p><img class="tex-graphics" src="http://codeforces.ru/renderer/6d377d0e8f1de1d2218492f92a32981c1de65970.png" /></p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
