
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="acdc1f2hb2a060h0db7ab086bb20322h"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="1cd2l63iso7ar"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='acdc1f2hb2a060h0db7ab086bb20322h'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Round #138 (Div. 1)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Скобочная последовательность</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p><span class="tex-font-style-it">Скобочной последовательностью</span> называется строка, состоящая только из символов «<span class="tex-font-style-tt">(</span>», «<span class="tex-font-style-tt">)</span>», «<span class="tex-font-style-tt">[</span>» и «<span class="tex-font-style-tt">]</span>».</p><p><span class="tex-font-style-it">Правильной скобочной последовательностью</span> называется скобочная последовательность, которую можно преобразовать в корректное арифметическое выражение путем вставок между ее символами символов «<span class="tex-font-style-tt">1</span>» и «<span class="tex-font-style-tt">+</span>». Например, скобочные последовательности «<span class="tex-font-style-tt">()[]</span>», «<span class="tex-font-style-tt">([])</span>» — правильные (полученные выражения: «<span class="tex-font-style-tt">(1)+[1]</span>», «<span class="tex-font-style-tt">([1+1]+1)</span>»), а «<span class="tex-font-style-tt">](</span>» и «<span class="tex-font-style-tt">[</span>» — нет. <span class="tex-font-style-bf">Пустая строка является правильной скобочной последовательностью по определению.</span></p><p><span class="tex-font-style-it">Подстрокой</span> <span class="tex-span"><i>s</i>[<i>l</i>... <i>r</i>]</span> <span class="tex-span">(1 ≤ <i>l</i> ≤ <i>r</i> ≤ |<i>s</i>|)</span> строки <span class="tex-span"><i>s</i> = <i>s</i><sub class="lower-index">1</sub><i>s</i><sub class="lower-index">2</sub>... <i>s</i><sub class="lower-index">|<i>s</i>|</sub></span> (где <span class="tex-span">|<i>s</i>|</span> — длина строки <span class="tex-span"><i>s</i></span>) называется строка <span class="tex-span"><i>s</i><sub class="lower-index"><i>l</i></sub><i>s</i><sub class="lower-index"><i>l</i> + 1</sub>... <i>s</i><sub class="lower-index"><i>r</i></sub></span>. <span class="tex-font-style-bf">Пустая подстрока по определению считается подстрокой любой строки</span>.</p><p>Вам дана не обязательно правильная скобочная последовательность. Найдите ее подстроку, которая является правильной скобочной последовательностью и при этом содержит как можно больше скобок «<span class="tex-font-style-tt">[</span>».</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой и единственной строке записана скобочная последовательность — строка, состоящая только из символов «<span class="tex-font-style-tt">(</span>», «<span class="tex-font-style-tt">)</span>», «<span class="tex-font-style-tt">[</span>» и «<span class="tex-font-style-tt">]</span>». Гарантируется, что строка непустая и ее длина не превышает <span class="tex-span">10<sup class="upper-index">5</sup></span> символов.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите единственное целое число — количество скобок «<span class="tex-font-style-tt">[</span>» в оптимальной подстроке. Во второй строке выведите саму подстроку. Если существует несколько оптимальных подстрок выведите любую.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>([])<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br />([])<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>(((<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br /><br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Две строки</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p><span class="tex-font-style-it">Подпоследовательностью</span> длины <span class="tex-span">|<i>x</i>|</span> строки <span class="tex-span"><i>s</i> = <i>s</i><sub class="lower-index">1</sub><i>s</i><sub class="lower-index">2</sub>... <i>s</i><sub class="lower-index">|<i>s</i>|</sub></span> (где <span class="tex-span">|<i>s</i>|</span> — длина строки <span class="tex-span"><i>s</i></span>) называется строка <span class="tex-span"><i>x</i> = <i>s</i><sub class="lower-index"><i>k</i><sub class="lower-index">1</sub></sub><i>s</i><sub class="lower-index"><i>k</i><sub class="lower-index">2</sub></sub>... <i>s</i><sub class="lower-index"><i>k</i><sub class="lower-index">|<i>x</i>|</sub></sub></span> <span class="tex-span">(1 ≤ <i>k</i><sub class="lower-index">1</sub> &lt; <i>k</i><sub class="lower-index">2</sub> &lt; ... &lt; <i>k</i><sub class="lower-index">|<i>x</i>|</sub> ≤ |<i>s</i>|)</span>.</p><p>Вам даны две строки — <span class="tex-span"><i>s</i></span> и <span class="tex-span"><i>t</i></span>. Рассмотрим все подпоследовательности строки <span class="tex-span"><i>s</i></span>, совпадающие со строкой <span class="tex-span"><i>t</i></span>. Верно ли, что каждый символ строки <span class="tex-span"><i>s</i></span> находится хотя бы в одной из этих подпоследовательностей? Другими словами, верно ли, что для всех <span class="tex-span"><i>i</i></span> <span class="tex-span">(1 ≤ <i>i</i> ≤ |<i>s</i>|)</span>, существует такая подпоследовательность <span class="tex-span"><i>x</i> = <i>s</i><sub class="lower-index"><i>k</i><sub class="lower-index">1</sub></sub><i>s</i><sub class="lower-index"><i>k</i><sub class="lower-index">2</sub></sub>... <i>s</i><sub class="lower-index"><i>k</i><sub class="lower-index">|<i>x</i>|</sub></sub></span> строки <span class="tex-span"><i>s</i></span>, что <span class="tex-span"><i>x</i> = <i>t</i></span> и для некоторого <span class="tex-span"><i>j</i></span> <span class="tex-span">(1 ≤ <i>j</i> ≤ |<i>x</i>|)</span> <span class="tex-span"><i>k</i><sub class="lower-index"><i>j</i></sub> = <i>i</i></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записана строка <span class="tex-span"><i>s</i></span>, во второй — <span class="tex-span"><i>t</i></span>. Каждая строка состоит только из строчных латинских букв. Заданные строки непустые, длина каждой строки не превышает <span class="tex-span">2·10<sup class="upper-index">5</sup></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите «<span class="tex-font-style-tt">Yes</span>» (без кавычек), если каждый символ строки <span class="tex-span"><i>s</i></span> находится хотя бы в одной из описанных подпоследовательностей, или «<span class="tex-font-style-tt">No</span>» (без кавычек) в противном случае.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>abab<br />ab<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>Yes<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>abacaba<br />aba<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>No<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>abc<br />ba<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>No<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере строка <span class="tex-span"><i>t</i></span> может входить в строку <span class="tex-span"><i>s</i></span> как подпоследовательность тремя способами: <span class="tex-font-style-tt"><span class="tex-font-style-bf">ab</span>ab</span>, <span class="tex-font-style-tt"><span class="tex-font-style-bf">a</span>ba<span class="tex-font-style-bf">b</span></span> и <span class="tex-font-style-tt">ab<span class="tex-font-style-bf">ab</span></span>. При этом каждый символ строки <span class="tex-span"><i>s</i></span> попадает хотя бы в одно вхождение.</p><p>Во втором примере 4-й символ строки <span class="tex-span"><i>s</i></span> не попадает ни в одно вхождение строки <span class="tex-span"><i>t</i></span>.</p><p>В третьем примере нет ни одного вхождения строки <span class="tex-span"><i>t</i></span> в строку <span class="tex-span"><i>s</i></span>.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Частичные суммы</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>4 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Дан массив <span class="tex-span"><i>a</i></span>, состоящий из <span class="tex-span"><i>n</i></span> целых чисел. Элементы массива проиндексированы от 1 до <span class="tex-span"><i>n</i></span>. Определим операцию, которая состоит из двух шагов, следующим образом:</p><p><ol> <li> Сначала по массиву <span class="tex-span"><i>a</i></span> строится массив <span class="tex-span"><i>s</i></span> частичных сумм, состоящий из <span class="tex-span"><i>n</i></span> элементов. Элемент номер <span class="tex-span"><i>i</i></span> (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>n</i></span>) массива <span class="tex-span"><i>s</i></span> равен <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/cdc22b6f0de971f5a4a64b6f9e22d76a719ec5b7.png" />. Операция <span class="tex-span"><i>x</i> <i>mod</i> <i>y</i></span> обозначает взятие остатка от деления числа <span class="tex-span"><i>x</i></span> на число <span class="tex-span"><i>y</i></span>. </li><li> Затем содержимое массива <span class="tex-span"><i>s</i></span> записывается в массив <span class="tex-span"><i>a</i></span>. Элемент номер <span class="tex-span"><i>i</i></span> (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>n</i></span>) массива <span class="tex-span"><i>s</i></span> становится <span class="tex-span"><i>i</i></span>-ым элементом массива <span class="tex-span"><i>a</i></span> (<span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub> = <i>s</i><sub class="lower-index"><i>i</i></sub></span>). </li></ol></p><p>Вам же нужно найти массив <span class="tex-span"><i>a</i></span> после применения ровно <span class="tex-span"><i>k</i></span> описанных операций.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны два целых числа через пробел <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 2000</span>, <span class="tex-span">0 ≤ <i>k</i> ≤ 10<sup class="upper-index">9</sup></span>). В следующей строке записаны <span class="tex-span"><i>n</i></span> целых чисел через пробел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> — элементы массива <span class="tex-span"><i>a</i></span> (<span class="tex-span">0 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>n</i></span> целых чисел  — элементы массива <span class="tex-span"><i>a</i></span> после проделанных операций. Элементы выводите в порядке увеличения их индексов в массиве <span class="tex-span"><i>a</i></span>. Выведенные числа разделяйте пробельными символами.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 1<br />1 2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1 3 6<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5 0<br />3 14 15 92 6<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3 14 15 92 6<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Паук</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 секунд</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>На плоскости задан не обязательно выпуклый многоугольник без самопересечений, состоящий из <span class="tex-span"><i>n</i></span> вершин, пронумерованных от 1 до <span class="tex-span"><i>n</i></span>. На границе многоугольника сидит паук, который может совершать следующие перемещения:</p><p><ol> <li> <span class="tex-font-style-it">Переход.</span> Паук из точки <span class="tex-span"><i>p</i><sub class="lower-index">1</sub></span> с координатами <span class="tex-span">(<i>x</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">1</sub>)</span>, лежащей на границе многоугольника, перемещается в точку <span class="tex-span"><i>p</i><sub class="lower-index">2</sub></span> с координатами <span class="tex-span">(<i>x</i><sub class="lower-index">2</sub>, <i>y</i><sub class="lower-index">2</sub>)</span>, также лежащую на границе. При этом он не может покидать границу многоугольника, то есть путь паука от точки <span class="tex-span"><i>p</i><sub class="lower-index">1</sub></span> к точке <span class="tex-span"><i>p</i><sub class="lower-index">2</sub></span> проходит вдоль границы многоугольника. Направление обхода границы многоугольника при перемещении (по часовой стрелке или против) паук выбирает сам. </li><li> <span class="tex-font-style-it">Спуск.</span> Паук из точки <span class="tex-span"><i>p</i><sub class="lower-index">1</sub></span> с координатами <span class="tex-span">(<i>x</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">1</sub>)</span> перемещается в точку <span class="tex-span"><i>p</i><sub class="lower-index">2</sub></span> с координатами <span class="tex-span">(<i>x</i><sub class="lower-index">2</sub>, <i>y</i><sub class="lower-index">2</sub>)</span>, при этом точки <span class="tex-span"><i>p</i><sub class="lower-index">1</sub></span> и <span class="tex-span"><i>p</i><sub class="lower-index">2</sub></span> должны лежать на одной вертикальной прямой (<span class="tex-span"><i>x</i><sub class="lower-index">1</sub> = <i>x</i><sub class="lower-index">2</sub></span>), точка <span class="tex-span"><i>p</i><sub class="lower-index">1</sub></span> должна быть не ниже точки <span class="tex-span"><i>p</i><sub class="lower-index">2</sub></span> (<span class="tex-span"><i>y</i><sub class="lower-index">1</sub> ≥ <i>y</i><sub class="lower-index">2</sub></span>) и отрезок <span class="tex-span"><i>p</i><sub class="lower-index">1</sub><i>p</i><sub class="lower-index">2</sub></span> не должен иметь точек, находящихся строго вне многоугольника (в частности, отрезок может иметь общие точки с границей). </li></ol></p><p>Изначально паук находится в вершине многоугольника с номером <span class="tex-span"><i>s</i></span>. Найдите длину кратчайшего пути до вершины с номером <span class="tex-span"><i>t</i></span>, состоящего из переходов и спусков. Расстояние определяется обычной Евклидовой метрикой <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/6baab5b704b6a658e3f847ecb20041ff7332455c.png" />.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">3 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество вершин заданного многоугольника. В следующих <span class="tex-span"><i>n</i></span> строках через пробел записаны по два целых числа — координаты вершин многоугольника. Вершины перечислены в порядке обхода против часовой стрелки. Координаты вершин многоугольника по абсолютной величине не превосходят <span class="tex-span">10<sup class="upper-index">4</sup></span>. </p><p>В последней строке записаны два целых числа через пробел <span class="tex-span"><i>s</i></span> и <span class="tex-span"><i>t</i></span> (<span class="tex-span">1 ≤ <i>s</i>, <i>t</i> ≤ <i>n</i></span>) — стартовая и конечная вершина искомого кратчайшего пути. </p><p>Считайте, что вершины многоугольника пронумерованы в том же порядке, в котором они заданы во входных данных, то есть координаты первой вершины находятся во второй строке входных данных, а <span class="tex-span"><i>n</i></span>-ой — в <span class="tex-span">(<i>n</i> + 1)</span>-ой строке. Гарантируется, что заданный многоугольник простой, то есть не имеет самопересечений и самокасаний.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В выходной файл выведите единственное вещественное число — длину кратчайшего пути из вершины <span class="tex-span"><i>s</i></span> в вершину <span class="tex-span"><i>t</i></span>. Ответ считается правильным, если его абсолютная или относительная погрешность не превосходит <span class="tex-span">10<sup class="upper-index"> - 6</sup></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4<br />0 0<br />1 0<br />1 1<br />0 1<br />1 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1.0000000000<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br />0 0<br />1 1<br />0 2<br />-1 1<br />3 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0.0000000000<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />0 0<br />5 0<br />1 4<br />0 2<br />2 1<br />3 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5.6502815399<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере паук делает переход по стороне, соединяющей вершины с номерами 1 и 4.</p><p>Во втором примере пауку никуда не нужно идти, поэтому расстояние равно нулю.</p><p>В третьем примере пауку выгоднее всего перейти из вершины 3 в точку (2,3), совершить спуск в точку (2,1), а затем сделать переход в вершину 1.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Планарный граф</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Граф называется <span class="tex-font-style-it">планарным</span>, если он может быть изображен на плоскости так, что его ребра пересекаются только в вершинах.</p><p><span class="tex-font-style-it">Точкой сочленения</span> называется такая вершина неориентированного графа, при удалении которой число компонент связности графа увеличивается.</p><p><span class="tex-font-style-it">Мостом</span> называется такое ребро неориентированного графа, при удалении которого число компонент связности графа увеличивается.</p><p>Задан связный неориентированный планарный граф, состоящий из <span class="tex-span"><i>n</i></span> вершин, пронумерованных от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>, уложенный на плоскость. Граф не имеет мостов, точек сочленения, петель и кратных ребер. Также заданы <span class="tex-span"><i>q</i></span> запросов. Каждый запрос представляет из себя цикл в графе. Ответ на запрос — количество вершин графа, которые (если нарисовать граф и цикл на плоскости) находятся внутри цикла, либо на нем самом. Напишите программу, которая по заданному графу и запросам отвечает на каждый из запросов.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны два целых числа через пробел <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">3 ≤ <i>n</i>, <i>m</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество вершин и ребер графа. В следующих <span class="tex-span"><i>m</i></span> строках заданы ребра графа: в <span class="tex-span"><i>i</i></span>-ой строке записаны два целых числа через пробел <span class="tex-span"><i>u</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>u</i><sub class="lower-index"><i>i</i></sub>, <i>v</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>) — номера вершин, соединяющих <span class="tex-span"><i>i</i></span>-ое ребро. В следующих <span class="tex-span"><i>n</i></span> строках заданы положения вершин планарного графа на плоскости: в <span class="tex-span"><i>i</i></span>-ой строке записана пара целых чисел через пробел <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">|<i>x</i><sub class="lower-index"><i>i</i></sub>|, |<i>y</i><sub class="lower-index"><i>i</i></sub>| ≤ 10<sup class="upper-index">9</sup>)</span> — координаты <span class="tex-span"><i>i</i></span>-ой вершины графа на плоскости. </p><p>В следующей строке записано целое число <span class="tex-span"><i>q</i></span> (<span class="tex-span">1 ≤ <i>q</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество запросов. Затем следуют <span class="tex-span"><i>q</i></span> строк с описаниями запросов: в <span class="tex-span"><i>i</i></span>-ой строке записана последовательность целых чисел через пробел <span class="tex-span"><i>k</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>a</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>a</i><sub class="lower-index">2</sub></span>, ..., <span class="tex-span"><i>a</i><sub class="lower-index"><i>k</i><sub class="lower-index"><i>i</i></sub></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>j</i></sub> ≤ <i>n</i>; <i>k</i><sub class="lower-index"><i>i</i></sub> &gt; 2</span>), где <span class="tex-span"><i>k</i><sub class="lower-index"><i>i</i></sub></span> — длина цикла в <span class="tex-span"><i>i</i></span>-ом запросе, <span class="tex-span"><i>a</i><sub class="lower-index"><i>j</i></sub></span>  — номера вершин, входящих в цикл. Номера вершин в цикле заданы в порядке обхода по или против часовой стрелки. Заданные циклы простые, то есть проходят не более одного раза по каждой вершине графа. Суммарная длина циклов во всех запросах не превышает <span class="tex-span">10<sup class="upper-index">5</sup></span>.</p><p>Гарантируется, что заданный граф не содержит мостов, точек сочленения, петель и кратных ребер. Гарантируется, что отрезки-ребра могут иметь общие точки только в вершинах графа.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждого запроса выведите единственное целое число — количество вершин внутри цикла, либо на нем самом. Ответы на запросы выводите в том порядке, в котором запросы заданы во входных данных. Числа разделяйте пробельными символами.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 3<br />1 2<br />2 3<br />3 1<br />0 0<br />1 0<br />0 1<br />1<br />3 1 2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5 8<br />1 2<br />2 3<br />3 4<br />4 1<br />1 5<br />2 5<br />3 5<br />4 5<br />0 0<br />2 0<br />2 2<br />0 2<br />1 1<br />1<br />4 1 2 3 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 5<br />1 2<br />2 3<br />3 4<br />4 1<br />2 4<br />0 0<br />1 0<br />1 1<br />0 1<br />3<br />3 1 2 4<br />3 4 2 3<br />4 1 2 3 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />3<br />4<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
