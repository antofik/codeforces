
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="9dc075h5ecg85f274f328e329f163dbg"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="9a58dqt8az0l"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='9dc075h5ecg85f274f328e329f163dbg'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Round #134 (Div. 2)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Горный пейзаж</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Маленький Болек нашел картину, на которой изображены <span class="tex-span"><i>n</i></span> горных вершин. Изображение <span class="tex-span"><i>n</i></span> горных вершин представляет собой незамкнутую ломаную, состоящую из <span class="tex-span">2<i>n</i></span> отрезков. Отрезки проходят через <span class="tex-span">2<i>n</i> + 1</span> точек с координатами <span class="tex-span">(1, <i>y</i><sub class="lower-index">1</sub>)</span>, <span class="tex-span">(2, <i>y</i><sub class="lower-index">2</sub>)</span>, <span class="tex-span">...</span>, <span class="tex-span">(2<i>n</i> + 1, <i>y</i><sub class="lower-index">2<i>n</i> + 1</sub>)</span>, <span class="tex-span"><i>i</i></span>-й отрезок соединяет точку <span class="tex-span">(<i>i</i>, <i>y</i><sub class="lower-index"><i>i</i></sub>)</span> и точку <span class="tex-span">(<i>i</i> + 1, <i>y</i><sub class="lower-index"><i>i</i> + 1</sub>)</span>. Для любого четного <span class="tex-span"><i>i</i></span> <span class="tex-span">(2 ≤ <i>i</i> ≤ 2<i>n</i>)</span> выполняется <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i> - 1</sub> &lt; <i>y</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub> &gt; <i>y</i><sub class="lower-index"><i>i</i> + 1</sub></span>. </p><p>Назовем вершину ломаной с четной <span class="tex-span"><i>x</i></span> координатой <span class="tex-font-style-it">горным пиком</span>.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/796d7b3675ee3d87f6f93322963bef8f89ef22b3.png" /> <span class="tex-font-size-script"> На рисунке слева изображена изначальная картина, на рисунке справа изображена картина после действий Болека. Затронутые пики помечены красным, <span class="tex-span"><i>k</i></span> = 2. </span> </center></p><p>Болек решил похулиганить. Он выбрал ровно <span class="tex-span"><i>k</i></span> горных пиков, стер отрезки проходящие через эти пики, увеличил высоту каждого выбранного пика на единицу (то есть увеличил координату <span class="tex-span"><i>y</i></span> соответствующих точек), а затем дорисовал недостающие отрезки так, чтобы получился новый рисунок горных вершин. Обозначим точки, через которые проходит новая ломаная на рисунке, который изменил Болек, через <span class="tex-span">(1, <i>r</i><sub class="lower-index">1</sub>)</span>, <span class="tex-span">(2, <i>r</i><sub class="lower-index">2</sub>)</span>, <span class="tex-span">...</span>, <span class="tex-span">(2<i>n</i> + 1, <i>r</i><sub class="lower-index">2<i>n</i> + 1</sub>)</span>.</p><p>Вам задан полученный Болеком рисунок. Восстановите исходный рисунок.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны два целых числа через пробел <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>k</i></span> <span class="tex-span">(1 ≤ <i>k</i> ≤ <i>n</i> ≤ 100)</span>. В следующей строке записаны <span class="tex-span">2<i>n</i> + 1</span> целых чисел через пробел <span class="tex-span"><i>r</i><sub class="lower-index">1</sub>, <i>r</i><sub class="lower-index">2</sub>, ..., <i>r</i><sub class="lower-index">2<i>n</i> + 1</sub></span> <span class="tex-span">(0 ≤ <i>r</i><sub class="lower-index"><i>i</i></sub> ≤ 100)</span> — <span class="tex-span"><i>y</i></span>-координаты вершин ломаной на рисунке Болека.</p><p>Гарантируется, что данный рисунок можно получить описанными действиями из некоторого рисунка горных вершин.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span">2<i>n</i> + 1</span> целых чисел <span class="tex-span"><i>y</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">2</sub>, ..., <i>y</i><sub class="lower-index">2<i>n</i> + 1</sub></span> — <span class="tex-span"><i>y</i></span>-координаты вершин ломаной на первоначальном рисунке. Если ответов несколько выведите любой.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 2<br />0 5 3 5 1 5 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 5 3 4 1 4 2 <br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1 1<br />0 2 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0 1 0 <br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Аэропорт</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Лелик и Болек едут за границу на самолете. Сейчас в местном аэропорте действует акция под названием «Выбери Самолет». Условия акции таковы:</p><p><ul> <li> пассажир сам выбирает самолет, в котором он полетит; </li><li> пусть в выбранном самолете на данный момент <span class="tex-span"><i>x</i></span> <span class="tex-span">(<i>x</i> &gt; 0)</span> свободных мест, тогда билет на такой самолет стоит <span class="tex-span"><i>x</i></span> злотых. </li></ul></p><p>Очередь из <span class="tex-span"><i>n</i></span> пассажиров уже выстроилась перед единственной билетной кассой аэропорта. Лелик и Болек еще не встали в очередь, но им уже интересно: какое максимальное и минимальное количество злотых может заработать администрация аэропорта, если все <span class="tex-span"><i>n</i></span> пассажиров будут покупать билеты по этой акции?</p><p>Пассажиры покупают билеты по очереди, сначала первый в очереди, потом второй, и так далее до <span class="tex-span"><i>n</i></span>-го.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> <span class="tex-span">(1 ≤ <i>n</i>, <i>m</i> ≤ 1000)</span> — количество пассажиров в очереди и количество самолетов в аэропорте соответственно. В следующей строке записано <span class="tex-span"><i>m</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>m</i></sub></span> <span class="tex-span">(1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 1000)</span> — <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> обозначает количество свободных мест в <span class="tex-span"><i>i</i></span>-ом самолете перед началом продажи билетов.</p><p>Числа в строках разделяются пробелами. Гарантируется, что суммарное количество свободных мест не меньше, чем <span class="tex-span"><i>n</i></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите два целых числа — максимальное и минимальное количество злотых, которое может заработать администрация аэропорта соответственно.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4 3<br />2 1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5 5<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 3<br />2 2 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>7 6<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом тестовом примере количество пассажиров равно количеству свободных мест, поэтому при любом выборе самолетов заработанная сумма будет одинаковая.</p><p>Во втором примере, чтобы максимизировать заработанную сумму 1-ый в очереди должен купить билет на 1-ый самолет, 2-ой в очереди — на 2-ой самолет, 3-ий в очереди — на 3-ий самолет, 4-ый в очереди — на 1-ый самолет. Чтобы минимизировать заработанную сумму 1-ый в очереди должен купить билет на 1-ый самолет, 2-ой в очереди — на 1-ой самолет, 3-ий в очереди — на 2-ий самолет, 4-ый в очереди — на 2-ый самолет.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Катание на Коньках</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Байтек учится кататься на льду. Он новичок, и поэтому он передвигается следующим образом: сначала отталкивается от сугроба на север, восток, юг или запад — и катится до тех пор, пока не повстречает очередной сугроб. Байтек заметил, что таким образом он не сможет добраться от некоторых сугробов до некоторых других, какой бы ни была последовательность его движений. Теперь он хочет соорудить несколько дополнительных сугробов так, чтобы он мог добраться от любого сугроба до любого другого. Байтек попросил Вас найти наименьшее количество сугробов, которые ему потребуется соорудить.</p><p>Мы предполагаем, что Байтек может сооружать сугробы только в точках с целочисленными координатами.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла записано единственное целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100</span>) — количество сугробов. Каждая из следующих <span class="tex-span"><i>n</i></span> строк содержит по два целых числа <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ 1000</span>) — координаты <span class="tex-span"><i>i</i></span>-ого сугроба.</p><p>Обратите внимание, что направление на север совпадает с направлением оси <span class="tex-span"><i>Oy</i></span>, таким образом, направление на восток совпадает с направлением оси <span class="tex-span"><i>Ox</i></span>. Все сугробы расположены в различных точках.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите наименьшее количество сугробов, которые надо соорудить Байтеку для того, чтобы он мог добраться от любого сугроба до любого другого.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br />2 1<br />1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2<br />2 1<br />4 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Фибоначчи на Доске</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Числа Фибоначчи представляют собой последовательность: <span class="tex-span"><i>f</i><sub class="lower-index">0</sub> = 0</span>, <span class="tex-span"><i>f</i><sub class="lower-index">1</sub> = 1</span>, <span class="tex-span"><i>f</i><sub class="lower-index">2</sub> = 1</span>, <span class="tex-span"><i>f</i><sub class="lower-index">3</sub> = 2</span>, <span class="tex-span"><i>f</i><sub class="lower-index">4</sub> = 3</span>, <span class="tex-span"><i>f</i><sub class="lower-index">5</sub> = 5</span>, <span class="tex-span">...</span>, <span class="tex-span"><i>f</i><sub class="lower-index"><i>n</i></sub> = <i>f</i><sub class="lower-index"><i>n</i> - 2</sub> + <i>f</i><sub class="lower-index"><i>n</i> - 1</sub></span>. Таким образом, каждое следующее число является суммой двух предыдущих.</p><p>Байтек разработал изящный способ вычислять числа Фибоначчи на доске. Сначала он пишет 0. Затем под ним он пишет 1. Затем он выполняет две следующих операции:</p><p><ul> <li> операция «<span class="tex-font-style-tt">T</span>»: заменяет верхнее число суммой обоих чисел; </li><li> операция «<span class="tex-font-style-tt">B</span>»: заменяет нижнее число суммой обоих чисел. </li></ul></p><p>Если он выполнит <span class="tex-span"><i>n</i></span> операций, начиная с операции «<span class="tex-font-style-tt">T</span>», чередуя операции «<span class="tex-font-style-tt">T</span>» и «<span class="tex-font-style-tt">B</span>» (так, чтобы последовательность операций имела вид «<span class="tex-font-style-tt">TBTBTBTB</span><span class="tex-span">...</span>»), то последнее записанное число будет равно <span class="tex-span"><i>f</i><sub class="lower-index"><i>n</i> + 1</sub></span>.</p><p>К сожалению, Байтек иногда ошибается и повторяет операцию два или более раз подряд. Например, если Байтек хочет посчитать <span class="tex-span"><i>f</i><sub class="lower-index">7</sub></span>, то ему надо выполнить <span class="tex-span"><i>n</i> = 6</span> операций: «<span class="tex-font-style-tt">TBTBTB</span>». Если вместо этого Байтек выполнит последовательность операций «<span class="tex-font-style-tt">TTTBBT</span>», то он сделает 3 ошибки и получит неверный результат, что седьмое число Фибоначчи равно 10. Количество ошибок в последовательности операций — это количество соседних равных операций («<span class="tex-font-style-tt">TT</span>» или «<span class="tex-font-style-tt">BB</span>»).</p><p>Вам дано число <span class="tex-span"><i>n</i></span> — количество операций, выполненных Байтеком в попытке посчитать <span class="tex-span"><i>f</i><sub class="lower-index"><i>n</i> + 1</sub></span> и число <span class="tex-span"><i>r</i></span>, результат его вычислений (то есть, последнее написанное на доске число). Найдите наименьшее возможное количество ошибок, сделанных Байтеком, и любую возможную последовательность из <span class="tex-span"><i>n</i></span> операций с найденным минимальным количеством ошибок, результатом которых было бы число <span class="tex-span"><i>r</i></span>.</p><p>Предположим, что Байтек всегда правильно начинает последовательность операций, с операции «<span class="tex-font-style-tt">T</span>».</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка содержит два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>r</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>r</i> ≤ 10<sup class="upper-index">6</sup>)</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Первая строка выходного файла должна содержать единственное число — наименьшее возможное количество ошибок, допущенное Байтеком. Вторая строка должна содержать <span class="tex-span"><i>n</i></span> символов, начинающихся с «<span class="tex-font-style-tt">T</span>», описывающих одну из возможных последовательностей операций с таким количеством ошибок. Каждый символ должен быть либо «<span class="tex-font-style-tt">T</span>», либо «<span class="tex-font-style-tt">B</span>».</p><p>Если искомой последовательности не существует, выведите «<span class="tex-font-style-tt">IMPOSSIBLE</span>» (без кавычек).</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6 10<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />TBBTTB<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br />TBTB<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>IMPOSSIBLE<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Формуроса</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Байтляндский Институт Биологических Исследований (БИБИ) изучает свойства двух видов бактерий, названных 0 и 1. Даже под микроскопом бактерии этих двух видов очень трудно отличить. Вобщем-то, у ученых есть только один способ, который способен различать их — это растение под названием Формуроса.</p><p>Если ученые поместят по образцу колоний бактерий на каждом листке Формуросы, активируется сложный процесс питания растения. Во время этого процесса цвет Формуросы изменится, в соответствии с, возможно, очень сложной логической формулой, включающей константы и операторы <span class="tex-span">|</span> (OR), <span class="tex-span">&amp;</span> (AND) и <span class="tex-span">^</span> (XOR). Если результат подсчета формулы равен 0, то растение покраснеет, в противном случае посинеет.</p><p>Например, если процесс питания Формуросы описывается формулой: <span class="tex-span">(((?^?)|?)&amp;(1^?))</span>, то у Формуросы есть четыре листа (знаки «<span class="tex-font-style-tt">?</span>» обозначают листья). Если мы положим образцы бактерий <span class="tex-span">0, 1, 0, 0</span> на соответствующие листья, результатом питательного процесса будет <span class="tex-span">(((0^1)|0)&amp;(1^0)) = 1</span>, следовательно, растение посинеет.</p><p>У ученых есть <span class="tex-span"><i>n</i></span> колоний бактерий. Они не знают их типы; они знают наверняка только то, что <span class="tex-font-style-bf">не все колонии одного типа</span>. Ученые хотят попытаться определить виды бактерий, с помощью нескольких экспериментов с Формуросой. Во время каждого эксперимента ученые должны поместить ровно по одному образцу на каждый лист растения. Тем не менее, они могут использовать несколько образцов из одной колонии в течение одного эксперимента; например, можно покрыть все листья растения бактериями из одной колонии!</p><p>Смогут ли ученые определить вид каждой колонии, какими бы эти колонии ни были (если предположить, что не все колонии одинаковые)?</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла содержится единственное целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 10<sup class="upper-index">6</sup></span>) — количество колоний бактерии.</p><p>Во второй строке содержится формула, описывающая питательный процесс Формуросы. Эта строка содержит только символы «<span class="tex-font-style-tt">0</span>», «<span class="tex-font-style-tt">1</span>», «<span class="tex-font-style-tt">?</span>», «<span class="tex-font-style-tt">|</span>», «<span class="tex-font-style-tt">&amp;</span>», «<span class="tex-font-style-tt">^</span>», «<span class="tex-font-style-tt">(</span>», «<span class="tex-font-style-tt">)</span>» и соответствует следующей грамматике:</p><p><center class="tex-equation"><span class="tex-span"><i>s</i> → 0|1|?|(<i>s</i>|<i>s</i>)|(<i>s</i>&amp;<i>s</i>)|(<i>s</i>^<i>s</i>)</span></center></p><p>Данная формула состоит из не более, чем <span class="tex-span">10<sup class="upper-index">6</sup></span> символов.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если всегда возможно определить вид каждой колонии, выведите «<span class="tex-font-style-tt">YES</span>» (без кавычек). В противном случае выведите «<span class="tex-font-style-tt">NO</span>» (без кавычек).</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br />(?^?)<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>10<br />?<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2<br />((?^?)&amp;?)<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>YES<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
