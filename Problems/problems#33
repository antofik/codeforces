
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="05gbf3989bcb62077c60bea535g222c5"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="1z57in349enb"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='05gbf3989bcb62077c60bea535g222c5'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Beta Round #33 (Codeforces format)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Что у нас на ужин?</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В одной малоизвестной, но очень красивой стране Ватерляндии обитает милая акула Валерия. Как и у всех акул, зубы у нее расположены в несколько рядов, а питается она преимущественно карасиками. Одной из отличительных особенностей Валерии является то, что поедая одного карасика, она использует только один ряд зубов, остальные зубы в это время «отдыхают».</p><p>Долго наша героиня бороздила морские просторы в поисках своих любимых карасиков, пока не произошло с ней большое несчастье. Однажды у Валерии разболелись зубы, и ей пришлось обратиться к местному стоматологу, омару Ашоту. Будучи профессионалом, Ашот очень быстро избавил Валерию от зубной боли. Кроме того, он сумел определить причину развившегося кариеса (за что впоследствии получил прозвище Кэп). </p><p>Оказалось, что Валерия кушает слишком много карасиков. Чтобы предостеречь акулу от повторного возникновения зубной боли, Ашот определил для каждого зуба Валерии его остаточную жизнеспособность. Остаточной жизнеспособностью зуба стоматолог назвал величину, равную числу карасиков, которых можно съесть, используя этот зуб. Каждый раз, когда Валерия будет съедать карасика, жизнеспособность всех зубов, задействованных при этом, будет уменьшаться на единицу, и как только жизнеспособность хотя бы одного зуба станет отрицательной, акуле вновь придется обратиться за помощью стоматолога.</p><p>Опечаленная этими известиями, Валерия вернулась домой, где ее уже поджидала порция заранее заготовленных карасиков. Конечно же, акула не могла отказаться от своей горячо любимой пищи, но желания вновь оказаться в стоматологическом кресле у Валерии также не было. Поэтому она решила, что съест максимальное число имеющихся у нее карасиков, но при этом такое, чтобы жизнеспособность никакого зуба не становилась отрицательной. </p><p>Поскольку Валерия не сильна в математике, она попросила вас помочь ей определить суммарное число карасиков, которыми она сможет отужинать.</p><p>Напомним, что при поедании одного карасика Валерия использует ровно один ряд зубов, причем жизнеспособность каждого зуба, принадлежащего этому ряду, уменьшается на единицу.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке задано три целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span>, <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>m</i> ≤ <i>n</i> ≤ 1000, 0 ≤ <i>k</i> ≤ 10<sup class="upper-index">6</sup></span>) — общее число зубов у Валерии, количество зубных рядов и количество карасиков, имеющихся у Валерии на ужин, соответственно. В следующих <span class="tex-span"><i>n</i></span> строках содержится по два целых числа: <span class="tex-span"><i>r</i></span> (<span class="tex-span">1 ≤ <i>r</i> ≤ <i>m</i></span>) — номер ряда, которому принадлежит соответствующий зуб, и <span class="tex-span"><i>c</i></span> (<span class="tex-span">0 ≤ <i>c</i> ≤ 10<sup class="upper-index">6</sup></span>) — его остаточная жизнеспособность.</p><p>Гарантируется, что в каждом ряду находится положительное число зубов.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первую строку выведите наибольшее число карасиков, которыми Валерия сможет поужинать.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4 3 18<br />2 3<br />1 2<br />3 6<br />2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>11<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 2 13<br />1 13<br />2 12<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>13<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Строковая задача</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Мальчик Валера очень любит строки. А еще больше он любит, когда строки одинаковые. Поэтому на досуге Валера сам с собой играет в следующую игру. Он берет две произвольные строки, состоящие из строчных букв латинского алфавита, и пытается сделать из них две равные друг другу. По правилам его игры, во время очередного хода Валере разрешается заменить в одной из строк <span class="tex-font-style-bf">один</span> произвольный символ <span class="tex-span"><i>A</i><sub class="lower-index"><i>i</i></sub></span> на произвольный символ <span class="tex-span"><i>B</i><sub class="lower-index"><i>i</i></sub></span>, но при этом за каждый свой ход ему придется заплатить некоторую сумму денег, равную <span class="tex-span"><i>W</i><sub class="lower-index"><i>i</i></sub></span>. Ходов разрешается сделать бесконечно много. Поскольку Валера очень экономный мальчик и никогда не тратит свои деньги зря, он попросил Вас, как опытного программиста, помочь ему ответить на вопрос: какое наименьшее количество денег должно быть у Валеры, чтобы он смог получить одинаковые строки.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первых двух строках входного файла заданы две исходные непустые строки <span class="tex-span"><i>s</i></span> и <span class="tex-span"><i>t</i></span>, состоящих из строчных латинских букв. Длины обеих строк не превосходят <span class="tex-span">10<sup class="upper-index">5</sup></span>. В следующей строке задано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">0 ≤ <i>n</i> ≤ 500</span>) — количество возможных замен. В следующих <span class="tex-span"><i>n</i></span> строках заданы два символа <span class="tex-span"><i>A</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>B</i><sub class="lower-index"><i>i</i></sub></span>, являющихся строчными латинскими буквами, а также целое число <span class="tex-span"><i>W</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>W</i><sub class="lower-index"><i>i</i></sub> ≤ 100</span>), означающие, что разрешено заменить символ <span class="tex-span"><i>A</i><sub class="lower-index"><i>i</i></sub></span> на символ <span class="tex-span"><i>B</i><sub class="lower-index"><i>i</i></sub></span> в любой из строк, потратив количество денег в размере <span class="tex-span"><i>W</i><sub class="lower-index"><i>i</i></sub></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если решение существует, выведите в выходной файл ответ на задачу, а также получившуюся строку. В противном случае в единственной строке выведете <span class="tex-font-style-tt">-1</span>. Если оптимальных решений несколько, выведите любое из них.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>uayd<br />uxxd<br />3<br />a x 8<br />x y 13<br />d c 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>21<br />uxyd<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>a<br />b<br />3<br />a b 2<br />a b 3<br />b a 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />b<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>abc<br />ab<br />6<br />a b 4<br />a b 7<br />b a 8<br />c b 11<br />c a 3<br />a c 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Прекрасная рандомизированная сумма</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Учиться, учиться и еще раз учиться — вот чем приходится заниматься Валере каждый будний день. Он учится в математической школе, где конечно же профильным предметом является математика. Учительница математики Валерия Валерьевна очень любит свой предмет и всячески пытается привить эту любовь ученикам. Однако её методы весьма сомнительны, так как ради достижения своей цели она постоянно дает детям очень объемные и сложные домашние задания. Несмотря на то что Валера вовсе не худший ученик в классе, с очередным домашним заданием, которое как всегда оказалось непростым, он не справился. Вот поэтому он и обратился к Вам за помощью. А задание у Валеры такое: пусть задана последовательность из <span class="tex-span"><i>n</i></span> чисел. Назовем префиксом последовательности некоторое количество первых ее элементов (возможно нулевое), а суффиксом — некоторое количество последних ее элементов (возможно нулевое). Разрешается последовательно выполнить две операции - взять произвольный префикс последовательности и умножить все числа в нем на <span class="tex-span"> - 1</span>, а затем проделать такую же операцию с суффиксом (префикс и суффикс могут пересекаться). Какую наибольшую сумму элементов последовательности можно получить в результате этих двух действий?</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла задано число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество элементов в последовательности. Во второй строке <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span"> - 10<sup class="upper-index">4</sup> ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">4</sup></span>) — сама последовательность.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой и единственной строке выходного файла выведете ответ на поставленную задачу.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />-1 -2 -3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />-4 2 0 5 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>11<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />-1 10 -5 10 -2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>18<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Рыцари</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Над Берляндией снова сгустились тучи. Армия злого лорда Ван де Марта собирается захватить королевство. На военный совет созванный королём Берляндии Валерием Суровым прибыло <span class="tex-span"><i>n</i></span> рыцарей. После долгих дискуссий стало ясно, что в королевстве есть ровно <span class="tex-span"><i>n</i></span> опорных точек (сдача каждого из них врагу равносильна поражению в войне) и каждый рыцарь займёт одну из этих точек.</p><p>Берляндия разделена на <span class="tex-span"><i>m</i> + 1</span> область <span class="tex-span"><i>m</i></span> заборами, и единственный способ перейти из одной области в другую это перелезть через забор. Каждый забор представляет собой окружность на плоскости, причём никакие два забора не имеют общих точек и ни одна опорная точка не находится на заборе. Вам задано <span class="tex-span"><i>k</i></span> пар чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span>. Для каждой пары вам нужно узнать: сколько заборов придётся пересечь рыцарю, находящемуся в опорной точке номер <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>, чтобы достигнуть опорной точки <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> (в случае если Ван де Март нанесёт первый удар в опорную точку номер <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span>). Поскольку каждый рыцарь путешествует на коне (а коня непросто перекидывать через забор), то вам нужно для каждой пары найти минимальное число пересечений.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записано три целых числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span>, <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 1000</span>, <span class="tex-span">0 ≤ <i>k</i> ≤ 100000</span>). В следующих <span class="tex-span"><i>n</i></span> строках записано по два целых числа <span class="tex-span"><i>Kx</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>Ky</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span"> - 10<sup class="upper-index">9</sup> ≤ <i>Kx</i><sub class="lower-index"><i>i</i></sub>, <i>Ky</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>) — координаты опорной точки номер <span class="tex-span"><i>i</i></span>. Опорные точки могут совпадать.</p><p>Каждая из следующих <span class="tex-span"><i>m</i></span> строк описывает забор номер <span class="tex-span"><i>i</i></span> тремя целыми числами <span class="tex-span"><i>r</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>Cx</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>Cy</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>r</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>, <span class="tex-span"> - 10<sup class="upper-index">9</sup> ≤ <i>Cx</i><sub class="lower-index"><i>i</i></sub>, <i>Cy</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>) — радиусом и центром окружности, на которой находится соответствующий забор. </p><p>Далее заданы <span class="tex-span"><i>k</i></span> пар целых чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>), каждая в отдельной строке — запросы на которые вам придётся отвечать. <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> могут совпадать.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите ровно <span class="tex-span"><i>k</i></span> строк, в каждой из которых записано одно число — ответ на соответствующий запрос.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 1 1<br />0 0<br />3 3<br />2 0 0<br />1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 3 1<br />0 0<br />4 4<br />1 0 0<br />2 0 0<br />3 0 0<br />1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Помощник</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Невероятно, но в университете ОхВорд началась сессия. Еще более невероятно, что Валера уже успел получить все зачеты «автоматом» и теперь решил подзаработать, решая задачи для своих сокурсников. Он составил список дисциплин <span class="tex-span"><i>list</i></span>, по которым готов оказать помощь. Пообщавшись с <span class="tex-span"><i>n</i></span> своими однокурсниками, Валера выяснил про каждого человека следующие данные: какой предмет он сдает, время сдачи предмета и количество денег, которое этот человек готов заплатить за помощь в решении задач. </p><p>Располагая такими данными, Валера решил составить расписание, в соответствии с которым он будет решать задачи для своих сокурсников. Естественно, Валерий не может решать задачи круглосуточно, поэтому он определил для себя оптимальный распорядок дня и собирается придерживаться его на протяжении всей сессии. Валера выделил отрезки времени, в течение которых он будет спать, завтракать, обедать и ужинать. Все остальное время юноша может заниматься работой.</p><p>Очевидно, что Валера может помочь какому-то студенту только в том случае, если предмет, который будет сдавать этот студент, входит в список <span class="tex-span"><i>list</i></span>. Вышло так, что у всех студентов, с которыми общался Валера, задания различные, но однотипные, поэтому любое задание по предмету <span class="tex-span"><i>list</i><sub class="lower-index"><i>i</i></sub></span> Валера может выполнить за <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span> минут. </p><p>Кроме того, начав работать над заданием для какого-либо человека, Валера может лишь прерываться на сон или трапезу и не может переходить к новому заданию, не закончив текущее. Если Валера решил какое-то задание, то он мгновенно может передать по интернету это задание соответствующему студенту. </p><p>В случае если этот студент еще не начал сдавать экзамен, то он сможет очень быстро составить шпаргалку, воспользоваться ей, успешно сдать экзамен, и выплатить Валере обещанное вознаграждение. Поскольку времени у Валерия совсем немного, то он попросил вас составить программу, которая найдет последовательность выполнения заданий, приносящую ему наибольшую прибыль.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке содержатся целые числа <span class="tex-span"><i>m</i>, <i>n</i>, <i>k</i></span> (<span class="tex-span">1 ≤ <i>m</i>, <i>n</i> ≤ 100</span>, <span class="tex-span">1 ≤ <i>k</i> ≤ 30</span>) — количество дисциплин в списке <span class="tex-span"><i>list</i></span>, число потенциальных работодателей Валеры и продолжительность сессии в днях.</p><p>В следующих <span class="tex-span"><i>m</i></span> строках содержатся названия дисциплин <span class="tex-span"><i>list</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span"><i>list</i><sub class="lower-index"><i>i</i></sub></span> представляет собой непустую строку длиной не более 32 символов, состоящую из строчных букв латинского алфавита). Гарантируется, что все дисциплины попарно различны. </p><p>В <span class="tex-span">(<i>m</i> + 2)</span>-ой строке содержатся <span class="tex-span"><i>m</i></span> целых чисел <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>t</i><sub class="lower-index"><i>i</i></sub> ≤ 1000</span>) — время в минутах, затрачиваемое Валерой на решение задач по <span class="tex-span"><i>i</i></span>-ой дисциплине.</p><p>Следующие четыре строки содержат отрезки времени, в течение которых Валера спит, завтракает, обедает и ужинает, соответственно. Каждая строка записана в формате <span class="tex-font-style-tt">H1:M1-H2:M2</span>, где <span class="tex-span">00 ≤ </span> <span class="tex-font-style-tt">H1</span>, <span class="tex-font-style-tt">H2</span> <span class="tex-span"> ≤ 23</span>, <span class="tex-span">00 ≤ </span> <span class="tex-font-style-tt">M1</span>, <span class="tex-font-style-tt">M2</span> <span class="tex-span"> ≤ 59</span>. При этом время <span class="tex-font-style-tt">H1:M1</span> соответствует первой минуте какого-то действия Валеры, а время <span class="tex-font-style-tt">H2:M2</span> соответствует последней минуте этого действия. Все отрезки времени попарно не пересекаются. Гарантируется, что Валерий ложится спать не раньше полуночи, просыпается раньше, чем начинает завтракать, заканчивает завтракать раньше, чем начинает обедать, заканчивает обедать раньше, чем начинает ужинать и заканчивает ужинать раньше полуночи. Все эти действия длятся меньше суток, но не меньше одной минуты. Время начала и конца каждого действия находятся в пределах одних и тех же суток. Однако при этом возможна ситуация, что у Валеры не окажется свободного времени для выполнения заданий.</p><p>Далее следуют <span class="tex-span"><i>n</i></span> строк, содержащих описание студентов. Про каждого студента известна дисциплина <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> представляет собой непустую строку длиной не более 32 символов, состоящую из строчных букв латинского алфавита), по которой ему предстоит сдавать экзамен, номер дня <span class="tex-span"><i>d</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>d</i><sub class="lower-index"><i>i</i></sub> ≤ <i>k</i></span>), время сдачи <span class="tex-span"><i>time</i><sub class="lower-index"><i>i</i></sub></span>, и сумма денег <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">0 ≤ <i>c</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">6</sup></span>, <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> — целое), которую он готов заплатить за Валерину помощь. Время сдачи экзамена <span class="tex-span"><i>time</i><sub class="lower-index"><i>i</i></sub></span> задается в формате <span class="tex-font-style-tt">HH:MM</span>, где <span class="tex-span">00 ≤ </span> <span class="tex-font-style-tt">HH</span> <span class="tex-span"> ≤ 23</span>, <span class="tex-span">00 ≤ </span> <span class="tex-font-style-tt">MM</span> <span class="tex-span"> ≤ 59</span>. Валера получит вознаграждение в том случае, если он закончит выполнять задание строго раньше начала экзамена соответствующего студента.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первую строку выведите наибольшую прибыль, которую сможет получить Валерий. Во второй строке должно содержаться число <span class="tex-span"><i>p</i></span> — количество заданий, которые Валера должен выполнить. Далее в <span class="tex-span"><i>p</i></span> строках выведите последовательность их выполнения в хронологическом порядке в следующем формате: номер студента, которому Валера должен помочь; номер дня, в который Валера должен начать выполнять задание; время, в которое Валера должен начать выполнять задание (первая минута работы); номер дня, в который Валера должен закончить выполнять задание; время, в которое Валера должен закончить выполнять задание (последняя минута работы). Для уточнения формата вывода изучите примеры из условия.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 3 4<br />calculus<br />algebra<br />history<br />58 23 15<br />00:00-08:15<br />08:20-08:35<br />09:30-10:25<br />19:00-19:45<br />calculus 1 09:36 100<br />english 4 21:15 5000<br />history 1 19:50 50<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>150<br />2<br />1 1 08:16 1 09:29<br />3 1 10:26 1 10:40<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 2 1<br />matan<br />codeforces<br />1 2<br />00:00-08:00<br />09:00-09:00<br />12:00-12:00<br />18:00-18:00<br />codeforces 1 08:04 2<br />matan 1 08:02 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />2<br />2 1 08:01 1 08:01<br />1 1 08:02 1 08:03<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 2 1<br />matan<br />codeforces<br />2 2<br />00:00-08:00<br />09:00-09:00<br />12:00-12:00<br />18:00-18:00<br />codeforces 1 08:04 2<br />matan 1 08:03 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />1<br />1 1 08:01 1 08:02<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
