
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="980c20462c2a8ch72h3cbba227349f99"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="161uh8ijn8wqy"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='980c20462c2a8ch72h3cbba227349f99'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Round #162 (Div. 2)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Цветные камешки (упрощ. редакция)</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Дана последовательность разноцветных камней. Цвет каждого камня — красный, зеленый, или синий. Также дана строка <span class="tex-span"><i>s</i></span>. В строке <span class="tex-span"><i>s</i></span> <span class="tex-span"><i>i</i></span>-ый символ (1-индексация) обозначает цвет <span class="tex-span"><i>i</i></span>-ого камня. Если символ «<span class="tex-font-style-tt">R</span>», «<span class="tex-font-style-tt">G</span>», или «<span class="tex-font-style-tt">B</span>», то цвет соответствующего камня — красный, зеленый или синий, соответственно.</p><p>Изначально белка Лисска стоит на первом камне. Вы выполняете инструкции один или более раз.</p><p>Каждая инструкция может быть одного из трех типов: «<span class="tex-font-style-tt">RED</span>», «<span class="tex-font-style-tt">GREEN</span>», или «<span class="tex-font-style-tt">BLUE</span>». После выполнения инструкции <span class="tex-span"><i>c</i></span>, если Лисска стоит на камне цвета <span class="tex-span"><i>c</i></span>, она перепрыгнет на камень вперед, иначе Лисска не двигается.</p><p>Вам задана строка <span class="tex-span"><i>t</i></span>. Количество инструкций равняется длине строки <span class="tex-span"><i>t</i></span>, а <span class="tex-span"><i>i</i></span>-ый символ строки <span class="tex-span"><i>t</i></span> обозначает <span class="tex-span"><i>i</i></span>-ую выполняемую инструкцию.</p><p>Посчитайте конечное местоположение Лисски (номер камня, на котором она будет стоять) после выполнения всех инструкций и выведите его в 1-индексации. Гарантируется, что Лисска не выпрыгивает за пределы последовательности в процессе выполнения инструкций.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Входные данные состоят из двух строк. Первая строка содержит строку <span class="tex-span"><i>s</i></span> (<span class="tex-span">1 ≤ |<i>s</i>| ≤ 50</span>). Вторая строка содержит строку <span class="tex-span"><i>t</i></span> (<span class="tex-span">1 ≤ |<i>t</i>| ≤ 50</span>). Символы в каждой строке будут «<span class="tex-font-style-tt">R</span>», «<span class="tex-font-style-tt">G</span>», или «<span class="tex-font-style-tt">B</span>». Гарантируется, что Лисска не выпрыгивает из последовательности.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите номер камня (в 1-индексации), на котором окажется Лисска после выполнения инструкций.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>RGB<br />RRR<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>RRRBGBRBBB<br />BBBRR<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>BRRBGBRGRBGRGRRGGBGBGBRGBRGRGGGRBRRRBRBBBGRRRGGBBB<br />BBRBGGRGRGBBBRBGRBRBBBBRBRRRBGBBGBBRRBBGGRBRRBRGRB<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>15<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Деревья у дороги (упрощ. редакция)</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Белка Лисска любит орехи. Дано <span class="tex-span"><i>n</i></span> деревьев (пронумерованных от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span> с запада на восток), посаженных вдоль улицы. На вершине каждого дерева растет по вкуснейшему ореху. Высота древа <span class="tex-span"><i>i</i></span> равна <span class="tex-span"><i>h</i><sub class="lower-index"><i>i</i></sub></span>. Лисска хочет съесть все орехи.</p><p>Сейчас Лисска сидит у корня дерева с номером <span class="tex-span">1</span>. За одну секунду Лисска может выполнить одно из следующих действий:</p><p><ul> <li> Забраться по дереву на единицу высоты вверх или вниз. </li><li> Съесть орех на вершине текущего дерева. </li><li> Перепрыгнуть на следующее дерево. В этом действии высота расположения Лисс не меняется. Более формально, когда Лисска находится на высоте <span class="tex-span"><i>h</i></span> дерева <span class="tex-span"><i>i</i></span> (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>n</i> - 1</span>), она прыгает на высоту <span class="tex-span"><i>h</i></span> дерева <span class="tex-span"><i>i</i> + 1</span>. Это действие нельзя выполнить, если <span class="tex-span"><i>h</i> &gt; <i>h</i><sub class="lower-index"><i>i</i> + 1</sub></span>. </li></ul></p><p>Посчитайте минимальное время (в секундах), необходимое для того, чтобы съесть все орехи.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке содержится целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1  ≤  <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество деревьев.</p><p>В следующих <span class="tex-span"><i>n</i></span> строках содержатся высоты деревьев: <span class="tex-span"><i>i</i></span>-ая строка содержит целое число <span class="tex-span"><i>h</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>h</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">4</sup></span>) — высота дерева с номером <span class="tex-span"><i>i</i></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — минимальное время, необходимое для того, чтобы съесть все орехи, в секундах.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br />1<br />2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />2<br />1<br />2<br />1<br />1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>14<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Спастись от камней</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Жила-была себе мирно в лесу Белка Лисска, но беды приходят неожиданно. С горы падают камни. Изначально Белка Лисска находится на интервале <span class="tex-span">[0, 1]</span>. Потом упадут <span class="tex-span"><i>n</i></span> камней, а Лисска будет убегать от камней. Камни последовательно пронумерованы от 1 до <span class="tex-span"><i>n</i></span> в порядке их падения.</p><p>Камни всегда падают точно в центр интервала Лисски. Когда Лисска занимает интервал <span class="tex-span">[<i>k</i> - <i>d</i>, <i>k</i> + <i>d</i>]</span> и камень падает в точку <span class="tex-span"><i>k</i></span>, белочка бежит налево или направо. Если она убежит налево, ее новый интервал будет <span class="tex-span">[<i>k</i> - <i>d</i>, <i>k</i>]</span>. Если побежит направо, ее новый интервал будет <span class="tex-span">[<i>k</i>, <i>k</i> + <i>d</i>]</span>.</p><p>Вам дана строка <span class="tex-span"><i>s</i></span> длины <span class="tex-span"><i>n</i></span>. В строке <span class="tex-span"><i>s</i></span> <span class="tex-span"><i>i</i></span>-ый символ — это либо «<span class="tex-font-style-tt">l</span>», либо «<span class="tex-font-style-tt">r</span>», то есть, когда падает <span class="tex-span"><i>i</i></span>-ый камень, Лиска побежит налево или направо, соответственно. Найдите последовательность номеров камней слева направо после того, как упадут все <span class="tex-span"><i>n</i></span> камней.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Во входных данных содержится единственная строка. Единственная строка содержит строку <span class="tex-span"><i>s</i></span> (<span class="tex-span">1 ≤ |<i>s</i>| ≤ 10<sup class="upper-index">6</sup></span>). Каждый символ в <span class="tex-span"><i>s</i></span> будет либо «<span class="tex-font-style-tt">l</span>», либо «<span class="tex-font-style-tt">r</span>».</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>n</i></span> строк — в <span class="tex-span"><i>i</i></span>-ой строке надо вывести номер <span class="tex-span"><i>i</i></span>-го слева камня.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>llrlr<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />5<br />4<br />2<br />1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>rrlll<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br />2<br />5<br />4<br />3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>lrlrr<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />4<br />5<br />3<br />1<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере расположения камней 1, 2, 3, 4, 5 будут <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/58fdb5684df807bfcb705a9da9ce175613362b7d.png" />, соответственно. Поэтому надо вывести последовательность: 3, 5, 4, 2, 1.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Хорошие последовательности</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Белка Лисска интересуется последовательностями. Также у нее есть предпочтения в целых числах. Она думает, что <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> <span class="tex-font-style-it">хорошие</span>.</p><p>Теперь ей интересны хорошие последовательности. Последовательность <span class="tex-span"><i>x</i><sub class="lower-index">1</sub>, <i>x</i><sub class="lower-index">2</sub>, ..., <i>x</i><sub class="lower-index"><i>k</i></sub></span> называется <span class="tex-font-style-it">хорошей</span>, если она удовлетворяет следующим трем условиям:</p><p><ul> <li> Последовательность строго возрастает, то есть <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub> &lt; <i>x</i><sub class="lower-index"><i>i</i> + 1</sub></span> для всех <span class="tex-span"><i>i</i></span> <span class="tex-span">(1 ≤ <i>i</i> ≤ <i>k</i> - 1)</span>. </li><li> Никакие два соседних элемента не являются взаимно простыми, то есть <span class="tex-span"><i>gcd</i>(<i>x</i><sub class="lower-index"><i>i</i></sub>, <i>x</i><sub class="lower-index"><i>i</i> + 1</sub>) &gt; 1</span> для всех <span class="tex-span"><i>i</i></span> <span class="tex-span">(1 ≤ <i>i</i> ≤ <i>k</i> - 1)</span> (где <span class="tex-span"><i>gcd</i>(<i>p</i>, <i>q</i>)</span> обозначает наибольший общий делитель чисел <span class="tex-span"><i>p</i></span> и <span class="tex-span"><i>q</i></span>). </li><li> Все элементы данной последовательности являются хорошими целыми числами. </li></ul></p><p>Найдите длину самой длинной хорошей последовательности.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Входные данные состоят из двух строк. Первая строка содержит единственное целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество хороших целых чисел. Во второй строке задан список хороших целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> через пробел, в порядке строгого возрастания (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">5</sup>; <i>a</i><sub class="lower-index"><i>i</i></sub> &lt; <i>a</i><sub class="lower-index"><i>i</i> + 1</sub></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — длину самой длинной хорошей последовательности.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br />2 3 4 6 9<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>9<br />1 2 3 5 6 7 8 9 10<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере следующие последовательности являются примерами хороших последовательностей: [2; 4; 6; 9], [2; 4; 6], [3; 9], [6]. Длина самой длинной хорошей последовательности — 4.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Выбираем мячи</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 секунд</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Дано <span class="tex-span"><i>n</i></span> мячей, расставленных в ряд. У каждого мяча есть цвет (выраженный для удобства целым числом) и целочисленное значение. Цвет <span class="tex-span"><i>i</i></span>-ого мяча равен <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span>, а значение <span class="tex-span"><i>i</i></span>-ого мяча равно <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub></span>.</p><p>Белка Лисска выбирает несколько мячей и создает из них последовательность, не меняя относительный порядок мячей. Она хочет максимизировать значение этой последовательности.</p><p>Значение последовательности определяется как сумма следующих значений для каждого мяча (где <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> — заданные константы):</p><p><ul> <li> Если мяч находится не в начале последовательности, а цвет у мяча такой же, как цвет предыдущего мяча, прибавьте (значение мяча) <span class="tex-span"> × </span> <span class="tex-span"><i>a</i></span>. </li><li> В противном случае, прибавьте (значение мяча) <span class="tex-span"> × </span> <span class="tex-span"><i>b</i></span>. </li></ul></p><p>Дано <span class="tex-span"><i>q</i></span> запросов. Каждый запрос содержит два целых числа <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span>. Для каждого запроса найдите максимальное значение последовательности, которую может построить белочка при <span class="tex-span"><i>a</i> = <i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>b</i> = <i>b</i><sub class="lower-index"><i>i</i></sub></span>.</p><p>Заметьте, что созданная последовательность может быть <span class="tex-font-style-bf">пустой</span>, а значение пустой последовательности считается равным нулю.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке содержится два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>q</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup>; 1 ≤ <i>q</i> ≤ 500</span>). Во второй строке содержится <span class="tex-span"><i>n</i></span> целых чисел: <span class="tex-span"><i>v</i><sub class="lower-index">1</sub>, <i>v</i><sub class="lower-index">2</sub>, ..., <i>v</i><sub class="lower-index"><i>n</i></sub></span> (<span class="tex-span">|<i>v</i><sub class="lower-index"><i>i</i></sub>| ≤ 10<sup class="upper-index">5</sup></span>). В третьей строке содержится <span class="tex-span"><i>n</i></span> целых чисел: <span class="tex-span"><i>c</i><sub class="lower-index">1</sub>, <i>c</i><sub class="lower-index">2</sub>, ..., <i>c</i><sub class="lower-index"><i>n</i></sub></span> (<span class="tex-span">1 ≤ <i>c</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>).</p><p>В следующих <span class="tex-span"><i>q</i></span> строках записаны значения констант <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> для запросов. В <span class="tex-span"><i>i</i></span>-ой из этих строк записаны два целых числа <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">|<i>a</i><sub class="lower-index"><i>i</i></sub>|, |<i>b</i><sub class="lower-index"><i>i</i></sub>| ≤ 10<sup class="upper-index">5</sup></span>).</p><p>В каждой строке целые числа разделены одиночными пробелами.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждого запроса выведите строку, содержащую одно целое число — ответ на запрос. В <span class="tex-span"><i>i</i></span>-ой строке содержится ответ на <span class="tex-span"><i>i</i></span>-ый запрос в порядке ввода.</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span>, для чтения или записи 64-битных чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> или спецификатор <span class="tex-font-style-tt">%I64d</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6 3<br />1 -2 3 4 0 -1<br />1 2 1 2 1 1<br />5 1<br />-2 1<br />1 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>20<br />9<br />4<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 1<br />-3 6 -1 2<br />1 2 3 1<br />1 -1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>5<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере, чтобы достичь максимальное значение:</p><p><ul> <li> В первом запросе надо выбрать 1ый, 3ий и 4ый мяч. </li><li> Во втором запросе надо выбрать 3ий, 4ый, 5ый и 6ой мячи. </li><li> В третьем запросе нужно выбрать 2ой и 4ый мячи. </li></ul></p><p>Заметьте, что могут быть и другие способы достичь максимальное значение.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
