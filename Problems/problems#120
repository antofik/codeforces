
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="1hf8961498ef44g1dh0a11f6a9750fg9"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="1v39pi26uy3j3"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='1hf8961498ef44g1dh0a11f6a9750fg9'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">&#1050;&#1086;&#1084;&#1072;&#1085;&#1076;&#1085;&#1072;&#1103; &#1086;&#1083;&#1080;&#1084;&#1087;&#1080;&#1072;&#1076;&#1072; &#1096;&#1082;&#1086;&#1083;&#1100;&#1085;&#1080;&#1082;&#1086;&#1074;, &#1057;&#1072;&#1088;&#1072;&#1090;&#1086;&#1074;, 2011</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Лифт</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 second</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>Недавно в городе N-ске достроили 1000-этажный небоскреб. Для перемещения по этажам небоскреба используются современные сверхскоростные лифты. У каждого лифта имеются две двери: передняя и задняя. Если человек входит в лифт через переднюю дверь, то выходит он через заднюю, и наоборот. В лифте имеются два поручня, пронумерованных числами 1 и 2. Поручень номер 1 находится слева от входа в переднюю дверь (или, соответственно, справа от входа в заднюю дверь), а поручень номер 2 — справа (слева от входа в заднюю дверь). Известно, что каждый человек в N-ске держится за поручень той рукой, которая у него наиболее развита.</p><p>Некоторое время назад город посетил очень важный человек, который не преминул посетить небоскреб и проехаться на лифте. Срочно необходимо определить, является ли он левшой или правшой, зная, в какую дверь он зашел и за какой поручень держался.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано, через какую дверь важный человек зашел в лифт. В ней записано <span class="tex-font-style-tt">«front»</span>, если человек зашел в лифт через переднюю дверь, и <span class="tex-font-style-tt">«back»</span>, если через заднюю. Во второй строке содержится целое число <span class="tex-span"><i>a</i></span> (<span class="tex-span">1 ≤ <i>a</i> ≤ 2</span>), обозначающее номер поручня, за который держался пассажир.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите символ <span class="tex-font-style-tt">«R»</span>, если очень важный человек является правшой, или <span class="tex-font-style-tt">«L»</span>, если он является левшой.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>front<br />1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>L<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Что? Где? Когда?</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 second</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>В Берляндии очень популярна игра «Что? Где? Когда?». Суть игры заключается в противостоянии команды Знатоков (игровой команды из шести человек) команде Телезрителей. Знатоки должны за одну минуту при помощи мозгового штурма найти ответ на вопрос, присланный телезрителем. Как правило, игрокам задаются вопросы, ответить на которые можно с помощью общих знаний и логики. Вопросы находятся в разложенных на столе по кругу конвертах, подписанных названиями городов участников, приславших вопрос. Каждый вопрос лежит в отдельном секторе. Посередине стола находится волчок (юла) со стрелкой. Волчок раскручивает распорядитель, и вопрос из сектора, на котором останавливается стрелка, выбирается для игры. Если выпавший вопрос уже сыгран, то выбирается следующий за ним по часовой стрелке еще не сыгравший вопрос. Ваша задача определить, какой по номеру вопрос будет следующим в игре, если волчок покажет на сектор с номером <span class="tex-span"><i>k</i></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны два натуральных числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 1000</span> и <span class="tex-span">1 ≤ <i>k</i> ≤ <i>n</i></span>) — количество секторов и номер сектора, на который указывает стрелка волчка. Во второй строке дано <span class="tex-span"><i>n</i></span> чисел: <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub> = 0</span>, если вопрос из сектора <span class="tex-span"><i>i</i></span> уже сыгран, и <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub> = 1</span>, если вопрос из сектора <span class="tex-span"><i>i</i></span> еще в игре (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>n</i></span>). Сектора заданы по часовой стрелке, после <span class="tex-span"><i>n</i></span>-го сектора идет первый.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное число — номер сектора, вопрос на котором будет выбран для игры. Гарантируется, что ответ существует, то есть еще не все вопросы были сыграны.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5 5<br />0 1 0 1 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 1<br />1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Винни-Пух и мед</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 second</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>Винни-Пух, как известно, очень любит мед. Как-то раз они с Пятачком прознали, что у Кролика вновь появилось изрядное количество этого сладкого лакомства. Как вы можете догадаться, вскоре Винни и Пятачок напросились в гости. Итак, перед Винни-Пухом стоят в ряд <span class="tex-span"><i>n</i></span> баночек с медом, в банке с номером <span class="tex-span"><i>i</i></span> находится <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> килограмм меда. Винни-Пух ест мед следующим образом: каждый раз он выбирает банку, в которой больше всего меда (в случае, если таких банок несколько, он берет любую из них). Если в этой банке меньше, чем <span class="tex-span"><i>k</i></span> килограмм меда, или же Винни уже трижды ел мед из этой банки, то он отдает ее Пятачку. В противном случае он ест из нее ровно <span class="tex-span"><i>k</i></span> килограмм меда и ставит ее на место. Винни делает так до тех пор, пока не отдаст все банки Пятачку. Посчитайте, сколько меда в сумме получит Пятачок после того, как Винни удовлетворит свой аппетит.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100, 1 ≤ <i>k</i> ≤ 100</span>). Во второй строке записаны <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>a</i><sub class="lower-index">2</sub></span>, ..., <span class="tex-span"><i>a</i><sub class="lower-index"><i>n</i></sub></span>, разделенных пробелами (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 100</span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число — сколько килограмм меда достанется Пятачку.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 3<br />15 8 10<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>9<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Три сына</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 second</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>Старый фермер оставил трем своим сыновьям наследство — прямоугольное кукурузное поле, разбитое на <span class="tex-span"><i>n</i> × <i>m</i></span> клеточек. Про каждую клеточку известно, сколько тонн кукурузы на ней растет. Своих сыновей фермер любил неодинаково, поэтому завещал разделить свое наследство на три части c суммарным количеством кукурузы <span class="tex-span"><i>A</i></span>, <span class="tex-span"><i>B</i></span> и <span class="tex-span"><i>C</i></span> тонн.</p><p>Поле должно быть разделено двумя прямыми линиями, которые параллельны одной из сторон поля, а также друг другу. Линии должны проходить исключительно между клетками поля. Каждая полученная в результате часть поля должна состоять хотя бы из одной клеточки.</p><p>Ваша задача — найти количество способов разделить поле описанным выше способом, то есть провести две линии, рассекающие поле на три части таким образом, чтобы на одной из получившихся частей росло <span class="tex-span"><i>A</i></span> тонн кукурузы, на другой <span class="tex-span"><i>B</i></span>, а на оставшейся <span class="tex-span"><i>C</i></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке через пробел записаны целые числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> — размеры участка (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 50, <i>max</i>(<i>n</i>, <i>m</i>) ≥ 3</span>). Далее следует описание поля: <span class="tex-span"><i>n</i></span> строк, каждая из которых содержит по <span class="tex-span"><i>m</i></span> целых чисел <span class="tex-span"><i>c</i><sub class="lower-index"><i>ij</i></sub></span>, записанных через пробел (<span class="tex-span">0 ≤ <i>c</i><sub class="lower-index"><i>ij</i></sub> ≤ 100</span>) — количество кукурузы в каждой клетке (в тоннах). В последней строке через пробел записаны целые числа <span class="tex-span"><i>A</i>, <i>B</i>, <i>C</i></span> (<span class="tex-span">0 ≤ <i>A</i>, <i>B</i>, <i>C</i> ≤ 10<sup class="upper-index">6</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите ответ — количество способов разделить наследство так, чтобы на одной из получившихся частей росло <span class="tex-span"><i>A</i></span> тонн кукурузы, на другой <span class="tex-span"><i>B</i></span>, а на оставшейся <span class="tex-span"><i>C</i></span>. Если не существует ни одного способа, выведите 0.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 3<br />1 1 1<br />1 1 1<br />1 1 1<br />3 3 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 5<br />1 1 1 1 1<br />2 2 2 2 2<br />3 6 6<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 3<br />1 2 3<br />3 1 2<br />2 3 1<br />5 6 7<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Линии раздела могут быть как горизонтальными, так и вертикальными, но должны быть параллельны друг другу.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Поставь Коня!</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 second</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>Петя и Гена играют в очень занимательную игру «Поставь Коня!» на шахматной доске размером <span class="tex-span"><i>n</i> × <i>n</i></span>. В этой игре ребята по очереди ставят на доску шахматных коней так, чтобы никакие два коня не находились под ударом друг друга. Под ударом шахматного коня, находящегося в клетке <span class="tex-span">(<i>r</i>, <i>c</i>)</span>, находятся клетки <span class="tex-span">(<i>r</i> - 1, <i>c</i> + 2)</span>, <span class="tex-span">(<i>r</i> - 1, <i>c</i> - 2)</span>, <span class="tex-span">(<i>r</i> + 1, <i>c</i> + 2)</span>, <span class="tex-span">(<i>r</i> + 1, <i>c</i> - 2)</span>, <span class="tex-span">(<i>r</i> - 2, <i>c</i> + 1)</span>, <span class="tex-span">(<i>r</i> - 2, <i>c</i> - 1)</span>, <span class="tex-span">(<i>r</i> + 2, <i>c</i> + 1)</span> и <span class="tex-span">(<i>r</i> + 2, <i>c</i> - 1)</span> (некоторые из них могут находиться вне доски). Проигрывает тот, кто не может сделать ход. Определите, кто выиграет при оптимальной игре обоих, если первым ходит Петя.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке задано целое число <span class="tex-span"><i>T</i></span> (<span class="tex-span">1 ≤ <i>T</i> ≤ 100</span>) — количество досок, для которых вам надо определить исход игры. В следующих <span class="tex-span"><i>T</i></span> строках заданы <span class="tex-span"><i>T</i></span> целых чисел <span class="tex-span"><i>n</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>n</i><sub class="lower-index"><i>i</i></sub> ≤ 10000</span>) — размеры шахматных досок.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждой доски <span class="tex-span"><i>n</i><sub class="lower-index"><i>i</i></sub> × <i>n</i><sub class="lower-index"><i>i</i></sub></span> выведите в отдельной строке «<span class="tex-font-style-tt">0</span>», если при оптимальной игре выигрывает Петя, иначе выведите «<span class="tex-font-style-tt">1</span>».</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br />2<br />1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br />0<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F. Пауки</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 second</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>Однажды мама попросила Петю разобрать игрушки и избавиться от части из них. Петя нашел целую коробку игрушечных пауков. Они очень ему дороги, и мальчик не хочет их выкидывать. Петя придумал хитрый план: он склеит всех паучков и подвесит к потолку. Также он знает, что чем ниже будет свисать эта конструкция, тем больше понравится маме, и она не станет выкидывать его самые любимые игрушки. Помогите Пете осуществить его план. </p><p>Паук состоит из <span class="tex-span"><i>k</i></span> бусинок, связанных <span class="tex-span"><i>k</i> - 1</span> ниточкой. Каждая ниточка соединяет две различные бусинки, при этом любая пара бусинок, составляющих паука, либо непосредственно связана ниточкой, либо связана некоторой цепочкой из ниточек и бусинок.</p><p>Склеивать пауков Петя может непосредственно за бусинки. Длина каждой нитки равна 1. Размерами бусинок можно пренебречь. Поэтому можно считать, что склеивание пауков происходит путем отождествления некоторых бусинок (см. рисунок). При этом конструкция, получаемая при склеивании, также должна представлять собой паука, т.е. для нее должны выполняться указанные свойства. </p><p>После того, как Петя склеит всех пауков, он считает длину получившейся поделки. Расстояние между парой бусинок вычисляется как длина ниточек, соединяющих эти две бусинки. Длиной полученной конструкции называется наибольшее расстояние между всеми парами бусинок. Петя хочет получить конструкцию как можно большей длины.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/5dbd0dbe9c0262277e2efc95f932130938078866.png" /> </center></p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/a271b7f422c6222c95ab7f41745dc8f3571339d8.png" /> </center></p><p>На рисунке изображено 2 паучка из второго примера. К бусинке номер 2 первого паучка мы приклеим второго паучка за бусинку с номером 1. На рисунке выделены ниточки в паучках, которые образуют последовательность ниточек максимальной длины.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла записано одно целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100</span>) — количество пауков. Следующие <span class="tex-span"><i>n</i></span> строк содержат описания каждого паука: целое число <span class="tex-span"><i>n</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">2 ≤ <i>n</i><sub class="lower-index"><i>i</i></sub> ≤ 100</span>) — количество бусин, далее <span class="tex-span"><i>n</i><sub class="lower-index"><i>i</i></sub> - 1</span> пара чисел, означающих номера бусин, соединенных нитками. Бусинки, составляющие каждого паука, нумеруются от 1 до <span class="tex-span"><i>n</i><sub class="lower-index"><i>i</i></sub></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число — длину искомой конструкции.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>1<br />3 1 2 2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2<br />3 1 2 1 3<br />4 1 2 2 3 2 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2<br />5 1 2 2 3 3 4 3 5<br />7 3 4 1 2 2 4 4 6 2 7 6 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>7<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">G. Бум</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 second</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>Рассмотрим известную игру Бум (aka Шляпа) с упрощенными правилами.</p><p>В игре участвуют <span class="tex-span"><i>n</i></span> команд по два человека. Цель игры: объяснить слова своему напарнику, не используя однокоренные и созвучные.</p><p>Игрок номер <span class="tex-span"><i>j</i></span> команды с номером <span class="tex-span"><i>i</i></span> <span class="tex-span">(1 ≤ <i>i</i> ≤ <i>n</i>, 1 ≤ <i>j</i> ≤ 2)</span> характеризуется двумя числами: <span class="tex-span"><i>a</i><sub class="lower-index"><i>ij</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index"><i>ij</i></sub></span>. Числа обозначают соответственно навык объяснения и навык понимания данного игрока.</p><p>Так же для игры используются <span class="tex-span"><i>m</i></span> карточек. На каждой карточке написано слово. Карточка с номером <span class="tex-span"><i>k</i></span> <span class="tex-span">(1 ≤ <i>k</i> ≤ <i>m</i>)</span> характеризуется числом <span class="tex-span"><i>c</i><sub class="lower-index"><i>k</i></sub></span> — сложностью слова, написанного на ней.</p><p>Перед началом игры карточки складываются в колоду и перемешиваются. Далее команды делают ходы в следующем порядке: 1-й игрок 1-й команды, 1-й игрок 2-й команды, ... , 1-й игрок <span class="tex-span"><i>n</i></span>-ой команды, 2-й игрок 1-й команды, ... , 2-й игрок <span class="tex-span"><i>n</i></span>-й команды, 1-й игрок 1-й команды и т.д.</p><p>Каждый ход длится <span class="tex-span"><i>t</i></span> секунд. Ход производится следующим образом: изначально время хода равно <span class="tex-span"><i>t</i></span>. Пока время хода больше 0, ходящий игрок берет верхнюю карточку из колоды и начинает объяснять слово на ней своему напарнику. Время, за которое <span class="tex-span"><i>j</i></span>-й игрок <span class="tex-span"><i>i</i></span>-й команды объяснит слово с карточки <span class="tex-span"><i>k</i></span> своему напарнику (<span class="tex-span"><i>q</i></span>-му игроку <span class="tex-span"><i>i</i></span>-й команды) равно <span class="tex-span"><i>max</i>(1, <i>c</i><sub class="lower-index"><i>k</i></sub> - (<i>a</i><sub class="lower-index"><i>ij</i></sub> + <i>b</i><sub class="lower-index"><i>iq</i></sub>) - <i>d</i><sub class="lower-index"><i>ik</i></sub>)</span> (если <span class="tex-span"><i>j</i> = 1, </span> то <span class="tex-span"><i>q</i> = 2, </span> иначе <span class="tex-span"><i>q</i> = 1</span>). Величина <span class="tex-span"><i>d</i><sub class="lower-index"><i>ik</i></sub></span> — это количество секунд, которое <span class="tex-span"><i>i</i></span>-я команда уже потратила на объяснение слова <span class="tex-span"><i>k</i></span> за предыдущие ходы. Изначально, все <span class="tex-span"><i>d</i><sub class="lower-index"><i>ik</i></sub></span> равны 0. Если команда успевает до конца хода отгадать слово, то из времени хода вычитается указанное выше время, отгаданная карточка выходит из игры, принося команде одно очко, и ход продолжается. Если же команда не успевает отгадать слово, то карточка кладется вниз колоды, а <span class="tex-span"><i>d</i><sub class="lower-index"><i>ik</i></sub></span> увеличивается на время хода, потраченное на объяснение этого слова на текущем ходу. Таким образом, когда этой команде достанется это же слово, они начнут его объяснять не с начала, а с того места, на котором остановились. Игра заканчивается тогда, когда все <span class="tex-span"><i>m</i></span> карточек отгаданы.</p><p>Вам даны <span class="tex-span"><i>n</i></span> команд и колода из <span class="tex-span"><i>m</i></span> карточек. Вам необходимо для каждой команды определить, сколько очков будет у этой команды в конце игры, и какие слова эта команда отгадает.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке содержатся два целых числа <span class="tex-span"><i>n</i>, <i>t</i></span> <span class="tex-span">(1 ≤ <i>n</i>, <i>t</i> ≤ 100)</span>, обозначающие соответственно количество команд и продолжительность одного хода.</p><p>В следующих <span class="tex-span"><i>n</i></span> строках входного файла содержатся по четыре целых числа: <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i>1</sub>, <i>b</i><sub class="lower-index"><i>i</i>1</sub>, <i>a</i><sub class="lower-index"><i>i</i>2</sub>, <i>b</i><sub class="lower-index"><i>i</i>2</sub></span> <span class="tex-span">(1 ≤ <i>a</i><sub class="lower-index"><i>ij</i></sub>, <i>b</i><sub class="lower-index"><i>ij</i></sub> ≤ 100)</span> — навыки первого и второго игроков <span class="tex-span"><i>i</i></span>-й команды. Команды заданы в том порядке, в котором они ходят.</p><p>В следующей строке входного файла содержится целое число <span class="tex-span"><i>m</i></span> <span class="tex-span">(1 ≤ <i>m</i> ≤ 100)</span> — число карточек.</p><p>В следующих <span class="tex-span">2<i>m</i></span> строках содержится описания карточек. Каждая карточка описывается двумя строками. В первой строке описания карточки содержится слово, состоящее не более, чем из 20 символов. Слова содержат только строчные буквы латинского алфавита. Во второй строке описания карточки содержится целое число <span class="tex-span"><i>c</i><sub class="lower-index"><i>k</i></sub></span> (<span class="tex-span">1 ≤ <i>c</i><sub class="lower-index"><i>k</i></sub> ≤ 100</span>) — сложность слова, написанного на <span class="tex-span"><i>k</i></span>-й карточке. Карточки перечислены в том порядке, в котором они лежат в колоде сверху вниз. Слова на всех карточках различны.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>n</i></span> строк. В <span class="tex-span"><i>i</i></span>-й строке сначала выведите число <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> — количество очков, заработанных <span class="tex-span"><i>i</i></span>-й командой. Далее выведите <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> слов, разделяя их пробелами, — слова с карточек, отгаданных командой <span class="tex-span"><i>i</i></span> в том порядке, в котором они были отгаданы.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 2<br />1 1 1 1<br />1 1 1 1<br />3<br />home<br />1<br />car<br />1<br />brother<br />1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2 home car <br />1 brother <br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 4<br />1 2 2 1<br />2 3 2 2<br />4<br />armchair<br />3<br />quetzalcoatl<br />10<br />pilotage<br />5<br />defibrillator<br />7<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2 armchair quetzalcoatl <br />2 pilotage defibrillator <br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">H. Краткость — сестра таланта</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>Общаясь с людьми, человек узнает много различной информации. Однако процесс общения занимает очень много времени. Это становится понятным, если обратить внимание на слова, которые мы используем в нашей речи. </p><p>Можно привести множество примеров простых слов, в которых большое количество букв: «информатика», «клавиатура», «университет», «строительство», «консерватория», «сковородка», «холодильник», «секундомер», «подоконник», «электричество», «государство», «автомобиль» и другие. Разумеется, этот список можно продолжать до бесконечности. </p><p>К счастью, решение этой проблемы уже было найдено. Для краткости и простоты общения предлагается заменить все слова нашей речи на такие, которые будут похожи на исходные, но в то же время будут заметно короче. Однако реализации этой идеи пока не существует, поэтому было решено поручить вам исправить ситуацию. </p><p>Рассмотрим следующую формальную модель преобразования слов: будем считать, что в разговоре можно использовать <span class="tex-span"><i>n</i></span> слов. Для каждого слова введем понятие его сокращенного аналога. <span class="tex-font-style-bf">Сокращенным аналогом</span> произвольного слова <span class="tex-span"><i>s</i></span> назовем такое слово <span class="tex-span"><i>t</i></span>, которое удовлетворяет следующим условиям:</p><p><ul> <li> встречается в <span class="tex-span"><i>s</i></span> в качестве <span class="tex-font-style-bf">подпоследовательности</span>, </li><li> имеет длину от одного до четырех символов. </li></ul></p><p>Другими словами, слово <span class="tex-span"><i>t</i></span> состоит хотя бы из одного и не более чем из четырех символов, которые встречаются в том же порядке, но не обязательно подряд, в слове <span class="tex-span"><i>s</i></span>. Разрешается не сокращать исходное слово, если его длина не превосходит четырех символов.</p><p>Вашей задачей является для заданного списка из <span class="tex-span"><i>n</i></span> различных слов получить набор их сокращенных аналогов. Сокращенные аналоги всех слов из списка должны быть различны.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла задано единственное целое число <span class="tex-span"><i>n</i></span> <span class="tex-span">(1 ≤ <i>n</i> ≤ 200)</span>. Далее в <span class="tex-span"><i>n</i></span> строках задан набор различных непустых слов, состоящих из строчных букв латинского алфавита. Длина каждого слова не превосходит <span class="tex-span">10</span> символов.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если решение существует, в выходной файл выведите ровно <span class="tex-span"><i>n</i></span> строк, где <span class="tex-span"><i>i</i></span>-ая строка является сокращенным аналогом <span class="tex-span"><i>i</i></span>-го слова исходного набора. Если решений несколько, выведите любое из них. Если решения не существует, выведите <span class="tex-font-style-tt">-1</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6<br />privet<br />spasibo<br />codeforces<br />java<br />marmelad<br />normalno<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>pret<br />sps<br />cdfs<br />java<br />mama<br />norm<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />aaa<br />aa<br />a<br />aaaa<br />aaaaa<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">I. Счастье в числах</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 second</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>Вася давно собирает счастливые билеты. В его коллекции уже насчитывается несколько тысяч счастливых трамвайных, троллейбусных и автобусных билетов. Васе уже надоело стандартное понимание того, является ли билет счастливым. Поэтому он ищет новые понимания. Кроме того, Васе непонятно, почему все билеты делятся только на счастливые и несчастливые. Он считает, что все билеты счастливые, только в разной степени. Немного поразмыслив, Вася пришел к определению <span class="tex-font-style-it">счастливости</span> билета. Пусть билет состоит из <span class="tex-span">2<i>n</i></span> цифр. Представим, что каждая из этих цифр записана так, как это показано на рисунке:</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/8690e9fa6dce77b4762523c48d45dd121b12757d.png" /> </center></p><p>Цифры такого вида вы наверняка видели на электронных часах: для отображения цифры используются семь сегментов, каждый из которых может быть подсвечен или нет; подсвеченные сегменты образуют цифру. Представив, что цифры записаны именно так, Вася берет правую половину билета и накладывает ее на левую, совмещая первую цифру с <span class="tex-span"><i>n</i> + 1</span>-й, вторую с <span class="tex-span"><i>n</i> + 2</span>-й, ..., <span class="tex-span"><i>n</i></span>-ю с <span class="tex-span">2<i>n</i></span>-й. Для каждой пары совмещенных цифр он подсчитывает, сколько сегментов подсвечены как в одной цифре, так и в другой, и суммирует эти количества. Полученную величину он называет <span class="tex-font-style-it">счастливостью</span> билета. Например, счастливость билета 03 равна четырем, а счастливость билета 2345 — шести.</p><p>По заданному номеру билета, состоящему из <span class="tex-span">2<i>n</i></span> цифр, найдите наименьший по номеру билет среди тех билетов, чей номер больше данного, но состоит также из <span class="tex-span">2<i>n</i></span> цифр, и чья счастливость больше, чем счастливость данного билета.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записан номер билета, состоящий из <span class="tex-span"><i>k</i></span> символов (<span class="tex-span"><i>k</i> = 2<i>n</i>, 1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>). </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите номер искомого билета или «-1» (без кавычек), если такого билета не существует.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>13<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>20<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2345<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2348<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>88<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">J. Минимальная сумма</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>Вам задан набор из <span class="tex-span"><i>n</i></span> векторов на плоскости. Для каждого вектора разрешается домножить любые его координаты на <span class="tex-font-style-tt">-1</span>. Таким образом, каждый вектор <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub> = (<i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub>)</span> можно преобразовать в один из следующих четырех векторов:</p><p><ul> <li> <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub><sup class="upper-index">1</sup> = (<i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub>)</span>, </li><li> <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub><sup class="upper-index">2</sup> = ( - <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub>)</span>, </li><li> <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub><sup class="upper-index">3</sup> = (<i>x</i><sub class="lower-index"><i>i</i></sub>,  - <i>y</i><sub class="lower-index"><i>i</i></sub>)</span>, </li><li> <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub><sup class="upper-index">4</sup> = ( - <i>x</i><sub class="lower-index"><i>i</i></sub>,  - <i>y</i><sub class="lower-index"><i>i</i></sub>)</span>. </li></ul> </p><p>Вам нужно найти два вектора из набора и определить, какие из их координат следует умножить на <span class="tex-font-style-tt">-1</span> таким образом, чтобы модуль суммы полученных векторов был минимально возможным. Более формально, требуется выбрать два вектора <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>v</i><sub class="lower-index"><i>j</i></sub></span> (<span class="tex-span">1 ≤ <i>i</i>, <i>j</i> ≤ <i>n</i>, <i>i</i> ≠ <i>j</i></span>) и два числа <span class="tex-span"><i>k</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>k</i><sub class="lower-index">2</sub></span> (<span class="tex-span">1 ≤ <i>k</i><sub class="lower-index">1</sub>, <i>k</i><sub class="lower-index">2</sub> ≤ 4</span>), так чтобы значение выражения <span class="tex-span">|<i>v</i><sub class="lower-index"><i>i</i></sub><sup class="upper-index"><i>k</i><sub class="lower-index">1</sub></sup> + <i>v</i><sub class="lower-index"><i>j</i></sub><sup class="upper-index"><i>k</i><sub class="lower-index">2</sub></sup>|</span> было минимально.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано одно целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>). Далее в <span class="tex-span"><i>n</i></span> строках записаны вектора в виде пар целых чисел «<span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span>» (<span class="tex-span"> - 10000 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub>, <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ 10000</span>), по одной паре в строке.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите в первой строке четыре числа через пробел «<span class="tex-span"><i>i</i></span> <span class="tex-span"><i>k</i><sub class="lower-index">1</sub></span> <span class="tex-span"><i>j</i></span> <span class="tex-span"><i>k</i><sub class="lower-index">2</sub></span>» — ответ на задачу. Если существует несколько вариантов с минимальным модулем суммы, можете вывести любой из них.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br />-7 -3<br />9 0<br />-8 6<br />7 -8<br />4 -5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3 2 4 2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />3 2<br />-4 7<br />-6 0<br />-8 4<br />5 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3 4 5 4<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Суммой двух векторов <span class="tex-span"><i>v</i> = (<i>x</i><sub class="lower-index"><i>v</i></sub>, <i>y</i><sub class="lower-index"><i>v</i></sub>)</span> и <span class="tex-span"><i>u</i> = (<i>x</i><sub class="lower-index"><i>u</i></sub>, <i>y</i><sub class="lower-index"><i>u</i></sub>)</span> называется вектор <span class="tex-span"><i>s</i> = <i>v</i> + <i>u</i> = (<i>x</i><sub class="lower-index"><i>v</i></sub> + <i>x</i><sub class="lower-index"><i>u</i></sub>, <i>y</i><sub class="lower-index"><i>v</i></sub> + <i>y</i><sub class="lower-index"><i>u</i></sub>)</span>.</p><p>Модулем вектора <span class="tex-span"><i>v</i> = (<i>x</i>, <i>y</i>)</span> называется число <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/d6c16bed0f57e40cf156237736f342487ab25fb8.png" />. </p><p>Во втором примере существует несколько подходящих ответов, вот некоторые из них:</p><p>(3 1 4 2), (3 1 4 4), (3 4 4 1), (3 4 4 3), (4 1 3 2), (4 1 3 4), (4 2 3 1).</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
