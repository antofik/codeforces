
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="bgh9f0dbc185f70b17f2fh3dfdg76ege"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="e3rhbwl75wfj"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='bgh9f0dbc185f70b17f2fh3dfdg76ege'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">&#1064;&#1082;&#1086;&#1083;&#1100;&#1085;&#1072;&#1103; &#1080;&#1085;&#1076;&#1080;&#1074;&#1080;&#1076;&#1091;&#1072;&#1083;&#1100;&#1085;&#1072;&#1103; &#1086;&#1083;&#1080;&#1084;&#1087;&#1080;&#1072;&#1076;&#1072; #3 (&#1047;&#1050;&#1064; 2010/11)&lt;br&gt;-&lt;br&gt;Codeforces Beta Round #45 (ACM-ICPC Rules)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Камень-Ножницы-Бумага</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Дядя Федор, кот Матроскин и пес Шарик скромно, но весело, до сих пор живут в Простоквашино. Иногда им приходят посылки от родителей дяди Федора, а иногда и от анонимных благодетелей. В последнем случае им особенно трудно определять, кому из них предназначается посылка. Понятно, что фоторужье — для Шарика, килька — для Матроскина, а вот кому прислали новую игровую приставку??? Все трое героев дружно предъявили права на этот подарок и чуть не поссорились. Дяде Федору пришло в голову, как поступить справедливо: считать, что приставку прислали всем троим, а играть в нее по очереди. Все уже было обрадовались, как возник не менее животрепещущий вопрос: а кто будет играть первым? Теперь ситуацию спас уже Матроскин, предложив самый честный способ определить это: сыграть втроем в камень-ножницы-бумага. Правила этой игры очень просты. Каждый игрок на счет три показывает на пальцах руки (или лапы) комбинацию, соответствующую одному из трех предметов: камню, ножницам или бумаге. Некоторые предметы побеждают другие по известным правилам: камень ломает ножницы, ножницы разрезают бумагу, бумага заворачивает камень. Обычно играют два игрока. Но друзей трое, поэтому они решили определять победителя так: если кто-то показал предмет, который побеждает предметы остальных двух участников, то этот участник победил. Иначе требуется еще один раунд игры. Напишите программу, которая определяет победителя игры по предметам, которые они показали.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано название предмета, который показал дядя Федор, во второй строке – название предмета, который показал Матроскин, а в третьей — Шарик. Камень называется «rock», бумага называется «paper», а ножницы — «scissors».</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите «F» (без кавычек), если победил дядя Федор. Выведите «M», если победил Матроскин, и «S», если Шарик. Если определить победителя невозможно, выведите «?».</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>rock<br />rock<br />rock<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>?<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>paper<br />rock<br />rock<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>F<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>scissors<br />rock<br />rock<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>?<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>scissors<br />paper<br />rock<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>?<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Участок для дома</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>У дяди Васи есть прекрасный сад, где растут чудесные фруктовые деревья, каждый год дающие небывалый урожай. Но в последнее время воры стали слишком часто лазить в сад по ночам и красть оттуда фрукты. Дядя Вася не может ночевать на участке и караулить урожай, потому что в саду нету домика! Дядя Вася подкопил денег и решился на постройку. Дело осталось за малым: определить, в какой части сада строить домик. Вечером он сел за стол и начертил план сада. На плане сад представляет собой прямоугольное клетчатое поле размера <span class="tex-span"><i>n</i> × <i>m</i></span>, разбитое на клетки со стороной 1. В некоторых клетках дядя Вася отметил растущие в них деревья (деревья нельзя сажать близко, поэтому в одной клетке получилось не более одного дерева). Дядя Вася хочет выделить под строительство прямоугольный участок размера <span class="tex-span"><i>a</i> × <i>b</i></span> клеток, причем границы участка для строительства должны идти по линиям сетки, которая разграничивает клетки. Все деревья, которые окажутся на участке для постройки домика, придется вырубить. Дядя Вася очень любит свой сад, поэтому помогите ему выбрать такое положение участка для строительства, чтобы количество вырубленных деревьев было как можно меньшим.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 50</span>) — размеры сада. В следующих <span class="tex-span"><i>n</i></span> строках записано по <span class="tex-span"><i>m</i></span> чисел 0 или 1, которые описывают сад на плане. Ноль означает, что в этой клетке не растет дерево, а единица — что растет. В последней строке записано два целых числа <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> (<span class="tex-span">1 ≤ <i>a</i>, <i>b</i> ≤ 50</span>). Обратите внимание, что дядя Вася может выбрать для строительства как прямоугольник <span class="tex-span"><i>a</i> × <i>b</i></span>, так и <span class="tex-span"><i>b</i> × <i>a</i></span>, т.е. сторона участка для строительства длиной <span class="tex-span"><i>a</i></span> может располагаться как параллельно стороне участка с длиной <span class="tex-span"><i>n</i></span>, так и параллельно стороне участка с длиной <span class="tex-span"><i>m</i></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите наименьшее количество деревьев, которое нужно вырубить, чтобы выделить участок <span class="tex-span"><i>a</i> × <i>b</i></span> под строительство домика. Гарантируется, что хотя бы одно положение для участка всегда найдется, т. е. или <span class="tex-span"><i>a</i> ≤ <i>n</i></span> и <span class="tex-span"><i>b</i> ≤ <i>m</i></span>, или <span class="tex-span"><i>a</i> ≤ <i>m</i></span> и <span class="tex-span"><i>b</i> ≤ <i>n</i></span>. </p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 2<br />1 0<br />1 1<br />1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 5<br />0 0 1 0 1<br />0 1 1 1 0<br />1 0 1 0 1<br />1 1 1 1 1<br />2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Во втором примере левая верхняя клетка участка это (1,1), а правая нижняя — (3, 2).</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Гонка</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Каждый год на трассе между городами A и B проходит гонка. В этом году в гонке решил принять участие дядя Ваня на своем автомобиле, который уже достаточно пожил на свете и имеет собственное гордое имя — Драндулет. </p><p>Итак, дядя Ваня выезжает из города A на Драндулете, причем в самом начале гонки он заливает в бак <span class="tex-span">α</span> литров бензина (<span class="tex-span">α ≥ 10</span> — любимое число дяди Вани, оно не обязательно целое). Заправочные станции расположены на трассе с интервалом в <span class="tex-span">100</span> км, т.е. первая станция находится на расстоянии <span class="tex-span">100</span> км от города A, вторая — на расстоянии <span class="tex-span">200</span> км от города A, третья — <span class="tex-span">300</span> км и т.д. Драндулет расходует <span class="tex-span">10</span> литров бензина на <span class="tex-span">100</span> км. Доезжая до очередной заправки, дядя Ваня проверяет бак. Если оставшегося бензина не хватает, чтобы добраться до следующей заправки, дядя Ваня заливает в бак еще <span class="tex-span">α</span> литров бензина. Иначе он не останавливается на заправке и едет дальше.</p><p>Например, если <span class="tex-span">α = 43.21</span>, то первая заправка произойдет на станции с номером <span class="tex-span">4</span>, когда в баке останется <span class="tex-span">3.21</span> литров бензина. После заправки станет <span class="tex-span">46.42</span> литров. Дальше дядя Ваня останавливается на заправке с номером <span class="tex-span">8</span> и у него <span class="tex-span">6.42 + 43.21 = 49.63</span> литров. Следующая остановка — на заправке <span class="tex-span">12</span>, <span class="tex-span">9.63 + 43.21 = 52.84</span>. Следующая остановка — на <span class="tex-span">17</span>-й станции и т.д. </p><p>Вы не поверите, но пока Драндулет лидирует в гонке! Может быть, это объясняется неожиданным выпадением снега. Может быть, установкой вдоль трассы видеокамер, регистрирующих превышение скорости. Может быть, потому что дядя Ваня пригрозил Драндулету, что сдаст его по программе утилизации автохлама, если не выиграет гонку. Как бы то ни было, Драндулет едет впереди, а завистники и конкуренты ломают головы над тем, как же остановить это безобразие.</p><p>Один из способов это сделать — заложить бомбу на следующей заправочной станции, где остановится дядя Ваня. Ваша задача — вычислить, на какой станции это произойдет и вовремя предупредить дядю Ваню. Число <span class="tex-span">α</span> вам неизвестно, зато дана последовательность номеров станций, на которых останавливался дядя Ваня. Определите номер станции, на которой произойдет следующая остановка. </p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке задано число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 1000</span>) — количество заправочных станций, на которых останавливался дядя Ваня. В следующей строке через пробел заданы <span class="tex-span"><i>n</i></span> целых чисел — номера этих станций. Номера являются положительными числами, не превосходящими <span class="tex-span">10<sup class="upper-index">6</sup></span>, они заданы в порядке возрастания. Никакие два числа в последовательности не совпадают. Гарантируется, что существует хотя бы одно число <span class="tex-span">α ≥ 10</span>, которому соответствует данная последовательность остановок.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите в первой строке «unique» (без кавычек), если ответ определяется однозначно. Во второй строке выведите номер станции, на которой произойдет следующая остановка. Если ответ неоднозначен, выведите в первой строке «not unique».</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />1 2 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>unique<br />5<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2<br />1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>not unique<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Во втором примере ответ неоднозначен. Если, например, <span class="tex-span">α = 10</span>, получим последовательность <span class="tex-span">1</span>, <span class="tex-span">2</span>, <span class="tex-span">3</span>, а если <span class="tex-span">α = 14</span> — <span class="tex-span">1</span>, <span class="tex-span">2</span>, <span class="tex-span">4</span>.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Перестановки</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Перестановка — это последовательность длины <span class="tex-span"><i>n</i></span> целых чисел от 1 до <span class="tex-span"><i>n</i></span>, в которой все числа встречаются ровно по одному разу. Например, <span class="tex-span">(1)</span>, <span class="tex-span">(4, 3, 5, 1, 2)</span>, <span class="tex-span">(3, 2, 1)</span> — перестановки, а <span class="tex-span">(1, 1)</span>, <span class="tex-span">(4, 3, 1)</span>, <span class="tex-span">(2, 3, 4)</span> — нет.</p><p>Бывает много различных задач на перестановки. Сегодня вам предстоит решить такую. Представьте, что Некто взял несколько перестановок (возможно, с разным количеством элементов), записал их в одну последовательность одну за другой, а затем перемешал полученную последовательность. Требуется восстановить исходные перестановки, если это возможно.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке содержится целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>). Следующая строка содержит перемешанную последовательность из <span class="tex-span"><i>n</i></span> целых чисел, разделенных одиночными пробелами. Числа в последовательности от <span class="tex-span">1</span> до <span class="tex-span">10<sup class="upper-index">5</sup></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если данную последовательность можно разбить на несколько перестановок так, что каждый элемент последовательности принадлежит в точности одной перестановке, в первой строке выведите количество получившихся перестановок. Вторая строка должна содержать <span class="tex-span"><i>n</i></span> чисел, соответствующих элементам заданной последовательности. Если <span class="tex-span"><i>i</i></span>-й элемент относится к первой перестановке, то <span class="tex-span"><i>i</i></span>-е число должно быть <span class="tex-span">1</span>, если ко второй — то <span class="tex-span">2</span>, и т.д. Порядок нумерации перестановок произволен. </p><p>Если решений несколько, выведите любое. Если решения не существует, выведите в первой строке <span class="tex-span"> - 1</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>9<br />1 2 3 1 2 1 4 2 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br />3 1 2 1 2 2 2 3 2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br />4 3 2 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br />1 1 1 1 </pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br />1 2 2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом примере последовательность разбивается на три перестановки: <span class="tex-span">(2, 1)</span>, <span class="tex-span">(3, 2, 1, 4, 5)</span>, <span class="tex-span">(1, 2)</span>. Первая перестановка образована вторым и четвертым элементами последовательности, вторая — третьим, пятым, шестым, седьмым и девятым элементами, третья — первым и восьмым элементами. Ясно, что возможны и другие варианты разбиения. </p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Иванушка-дурачок против Змея Горыныча</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В тридевятом царстве, в тридесятом государстве... Итак, начнем с того момента, как Иванушка-дурачок встретил Змея Горыныча. Достал Иванушка меч-кладенец, и началась у них битва. Сначала у Змея Горыныча было <span class="tex-span"><i>h</i></span> голов и <span class="tex-span"><i>t</i></span> хвостов. Каждым ударом меча Иванушка может отрубить либо несколько голов (от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>, но не больше, чем голов у Горыныча в данный момент), либо несколько хвостов (от <span class="tex-span">1</span> до <span class="tex-span"><i>m</i></span>, но не больше, чем хвостов у Горыныча в данный момент). При этом (о, ужас!) у Змея Горыныча могут вырастать новые головы и хвосты. Причем количество вырастающих голов и хвостов однозначно определяется в зависимости от количества голов или хвостов, отрубленных очередным ударом. Когда суммарное количество голов и хвостов станет строго больше <span class="tex-span"><i>R</i></span>, Змей Горыныч нанесет свой решающий удар и повергнет Иванушку-дурачка. Поэтому Иванушка стремится как можно быстрее отрубить все головы и хвосты Змею и победить. Возможен и третий вариант развития событий: ни один из противников не сможет одолеть другого и они будут сражаться бесконечно.</p><p>Скоро сказка сказывается, да нескоро дело делается. Ваша задача — написать программу, определяющую исход битвы. Учтите, что Иванушка-дурачок наносит удары последовательно. После каждого удара у Горыныча вырастают новые головы и хвосты в зависимости от количества отрубленных. Змей Горыныч считается побежденным, если после очередного удара он лишается всех голов и хвостов и у него не вырастает новых. Иванушка сражается оптимально (дурачкам везет!), т.е. <ul> <li> если Иванушка может победить, он побеждает за наименьшее количество ударов; </li><li> если победить Горыныча невозможно, но можно бесконечно долго сопротивляться ему, то Иванушка выбирает именно эту стратегию; </li><li> если победу в любом случае одержит Змей Горыныч, Иванушка стремится сопротивляться ему как можно дольше. </li></ul> </p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке содержатся три целых числа <span class="tex-span"><i>h</i></span>, <span class="tex-span"><i>t</i></span> и <span class="tex-span"><i>R</i></span> (<span class="tex-span">0 ≤ <i>h</i>, <i>t</i>, <i>R</i> ≤ 200</span>, <span class="tex-span">0 &lt; <i>h</i> + <i>t</i> ≤ <i>R</i></span>) — изначальные количества голов и хвостов у Змея Горыныча и наибольшее суммарное количество голов и хвостов, при котором Змей Горыныч еще не переходит в наступление. В следующей строке содержится целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 200</span>). Следующие <span class="tex-span"><i>n</i></span> строк содержат пары неотрицательных целых чисел «<span class="tex-span"><i>h</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span>» — количество голов и количество хвостов соответственно, которые вырастут, если Горынычу отрубить <span class="tex-span"><i>i</i></span> голов (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>n</i></span>). В следующей строке содержится целое число <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>m</i> ≤ 200</span>) и затем — описание поведения Горыныча при отрубании хвостов в формате, аналогичном описанному выше. Все числа во входном файле не превосходят <span class="tex-span">200</span>. </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите «Ivan» (без кавычек), если победит Иванушка, или «Zmey», если победит Змей Горыныч. Во второй строке выведите единственное целое число — количество ударов, нанесенных Иванушкой. Если битва будет продолжаться бесконечно, выведите в первой строке «Draw».</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 2 4<br />2<br />1 0<br />0 1<br />3<br />0 1<br />0 1<br />0 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>Ivan<br />2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 2 4<br />1<br />0 1<br />1<br />1 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>Draw<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 2 5<br />1<br />1 1<br />1<br />3 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>Zmey<br />2<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F. Продавцы снега</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>10 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Новогодние праздники в Берляндии длятся <span class="tex-span"><i>n</i></span> дней. Только вот снегом зима в этом году не порадовала, поэтому организаторы зимних праздничных мероприятий вынуждены закупать искусственный снег. В Берляндии есть <span class="tex-span"><i>m</i></span> фирм, продающих снег. Каждый день <span class="tex-span"><i>i</i></span>-я фирма производит <span class="tex-span"><i>w</i><sub class="lower-index"><i>i</i></sub></span> кубометров снега. На следующий день снег тает и фирма вынуждена производить <span class="tex-span"><i>w</i><sub class="lower-index"><i>i</i></sub></span> кубометров снова. Во время праздников действуют новогодние скидки, поэтому каждый день стоимость снега уменьшается. Известно, что в первый день стоимость всего снега, произведенного <span class="tex-span"><i>i</i></span>-й фирмой, составляет <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> бурлей. Каждый день эта общая стоимость уменьшается на <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> бурлей, т.е. во второй день она равна <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub> - <i>a</i><sub class="lower-index"><i>i</i></sub></span>, в третий день — <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub> - 2<i>a</i><sub class="lower-index"><i>i</i></sub></span>, и т. д. Известно, что ни для одной фирмы стоимость производимого ей снега не становится отрицательной или равной нулю. Вам требуется организовать закупку снега таким образом, чтобы каждый день покупать ровно <span class="tex-span"><i>W</i></span> кубометров снега. При этом у любой фирмы не обязательно покупать весь снег, произведенный ею. Если вы покупаете у <span class="tex-span"><i>i</i></span>-й фирмы в один из дней, когда стоимость ее снега равна <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>n</i><sub class="lower-index"><i>i</i></sub></span> кубометров снега (<span class="tex-span">0 ≤ <i>n</i><sub class="lower-index"><i>i</i></sub> ≤ <i>w</i><sub class="lower-index"><i>i</i></sub></span>, число <span class="tex-span"><i>n</i><sub class="lower-index"><i>i</i></sub></span> не обязательно целое!), то его цена составит <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/d2154c8689d80a2d0f6cc19700d490edc9910272.png" /> бурлей. В течение одного дня можно покупать снег у нескольких фирм. В разные дни можно покупать снег у разных фирм. Требуется сделать закупки таким образом, чтобы потратить как можно меньше денег. Гарантируется, что производимого фирмами снега будет достаточно. </p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке заданы целые числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span> и <span class="tex-span"><i>W</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100</span>, <span class="tex-span">1 ≤ <i>m</i> ≤ 500000</span>, <span class="tex-span">1 ≤ <i>W</i> ≤ 10<sup class="upper-index">9</sup></span>) — количество дней, количество фирм и количество снега, которое нужно закупать в каждый из <span class="tex-span"><i>n</i></span> дней. Во второй строке содержатся <span class="tex-span"><i>m</i></span> целых чисел <span class="tex-span"><i>w</i><sub class="lower-index"><i>i</i></sub></span>. В третьей строке — <span class="tex-span"><i>m</i></span> целых чисел <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span>. В четвертой строке — <span class="tex-span"><i>m</i></span> целых чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>. Все числа строго положительны и не превосходят <span class="tex-span">10<sup class="upper-index">9</sup></span>. Для всех <span class="tex-span"><i>i</i></span> верно неравенство <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub> - (<i>n</i> - 1)<i>a</i><sub class="lower-index"><i>i</i></sub> &gt; 0</span>. </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное число — ответ на поставленную задачу. Ответ выводите в формате с десятичной точкой (даже если число целое, точка должна в нем содержаться), без «e» и без лидирующих нулей. Ответ должен отличаться от правильного не более чем на <span class="tex-span">10<sup class="upper-index"> - 9</sup></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 3 10<br />4 4 4<br />5 5 8<br />1 2 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>22.000000000000000<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>100 2 1000000000<br />999999998 999999999<br />1000000000 1000000000<br />1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>99999995149.999995249999991<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">G. Галактический Союз</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>3 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В одной далекой галактике <span class="tex-span"><i>n</i></span> обитаемых планет, пронумерованных числами от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>. Однажды независимо друг от друга президенты всех <span class="tex-span"><i>n</i></span> планет пришли к идее о создании Галактического Союза. Теперь необходимо поделиться этой прекрасной идеей с собратьями по разуму, поэтому каждый из президентов занят разработкой проекта переговоров с остальными президентами. </p><p>Для переговоров между некоторыми парами планет существуют двунаправленные каналы связи, каждый из которых характеризуется «временем дозвона» <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span>, которое, как правило, занимает несколько часов и значительно превышает время разговора. Всего в галактике <span class="tex-span"><i>n</i></span> каналов связи, и они объединяют все планеты в единую сеть. Это означает, что с любой планеты <span class="tex-span"><i>u</i></span> можно дозвониться до любой планеты <span class="tex-span"><i>v</i></span>, возможно, через некоторые промежуточные планеты <span class="tex-span"><i>v</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>v</i><sub class="lower-index">2</sub></span>, ..., <span class="tex-span"><i>v</i><sub class="lower-index"><i>m</i></sub></span> при помощи существующих каналов между <span class="tex-span"><i>u</i></span> и <span class="tex-span"><i>v</i><sub class="lower-index">1</sub></span>, <span class="tex-span"><i>v</i><sub class="lower-index">1</sub></span> и <span class="tex-span"><i>v</i><sub class="lower-index">2</sub></span>, ..., <span class="tex-span"><i>v</i><sub class="lower-index"><i>m</i> - 1</sub></span> и <span class="tex-span"><i>v</i><sub class="lower-index"><i>m</i></sub></span>, <span class="tex-span"><i>v</i><sub class="lower-index"><i>m</i></sub></span> и <span class="tex-span"><i>v</i></span>. При этом время дозвона с <span class="tex-span"><i>u</i></span> до <span class="tex-span"><i>v</i></span> будет равно суммарному времени дозвона задействованных каналов.</p><p>Итак, каждому президенту необходимо поговорить по очереди с президентами остальных <span class="tex-span"><i>n</i> - 1</span> планет. При этом переговоры проходят строго последовательно, и пока переговоры с очередной планетой не завершатся, дозвон до следующей не начинается. Поскольку дело очень срочное, из различных способов дозвона до нужной планеты каждый раз выбирается самый быстрый. Для убеждения другого президента в ценности Галактического Союза не требуется много времени, поэтому время переговоров с каждой планетой можно считать равным времени дозвона до нее. Так как президенты ничего не подозревают о намерениях друг друга, они не учитывают в своих планах, что, например, нужный президент может позвонить сам или уже знать о создающемся Галактическом Союзе из других источников. </p><p>Правительства всех <span class="tex-span"><i>n</i></span> планет обратились к вам для разработки плана переговоров. В первую очередь вам предстоит выяснить для каждого президента, сколько времени займут его предполагаемые переговоры.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">3 ≤ <i>n</i> ≤ 200000</span>) — количество планет в галактике и равное ему количество каналов связи. В следующих <span class="tex-span"><i>n</i></span> строках записано по три целых числа <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> и <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>, <i>a</i><sub class="lower-index"><i>i</i></sub> ≠ <i>b</i><sub class="lower-index"><i>i</i></sub>, 1 ≤ <i>t</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">3</sup></span>) — номера планет, соединенных каналом связи, и его «время дозвона». Между парой планет не может быть более одного канала связи.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите <span class="tex-span"><i>n</i></span> целых чисел — времена предполагаемых переговоров для каждого из президентов. Числа разделяйте пробелами. </p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />1 2 3<br />2 3 2<br />1 3 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4 5 3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br />1 2 3<br />2 3 2<br />1 3 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>8 5 7<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4<br />1 2 3<br />2 3 2<br />3 4 1<br />4 1 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>12 8 8 8<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">H. Черные и белые</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Согласно преданиям, король Берляндии Берл I отличался своей приверженностью к красоте и порядку. Однажды он приказал замостить пол залы дворца, где обычно проводились балы и приемы, черными и белыми плитками паркета в соответствии с задуманным им правильным геометрическим узором. Однако, как обычно водится, в связи с недофинансированием во дворец было доставлено всего лишь <span class="tex-span"><i>a</i></span> черных и <span class="tex-span"><i>b</i></span> белых плиток. Остальные <span class="tex-span"><i>c</i></span> плиток были черно-белыми (см. рисунок). </p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/f2a177319a3a82bd4142d6445da7198ffda358eb.png" /> </center></p><p>Первоначальный план провалился! Узнав об этом, разгневанный король отдал новое приказание: замостить пол имеющимися плитками таким образом, чтобы ни одна черная сторона плитки не соприкасалась с белой. Плитки представляют собой квадраты одинакового размера <span class="tex-span">1 × 1</span>, каждую черно-белую плитку можно поворачивать одним из четырех способов.</p><p>Разработать схему замощения было поручено придворному программисту, который справился с поставленной задачей, сохранив себе голову на плечах. А справитесь ли вы? </p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке заданы целые числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 100</span>) — размеры прямоугольника, который требуется замостить. В следующей строке содержатся неотрицательные числа <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>b</i></span> и <span class="tex-span"><i>c</i></span>, <span class="tex-span"><i>a</i> + <i>b</i> + <i>c</i> = <i>nm</i></span>, <span class="tex-span"><i>c</i> ≥ <i>m</i></span>. </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span">2<i>n</i></span> строк, каждая из которых содержит <span class="tex-span">2<i>m</i></span> символов — схему замощения. Каждая плитка обозначается квадратом <span class="tex-span">2 × 2</span> следующим образом (порядок соответствует рисунку выше): <center> <img class="tex-graphics" src="http://codeforces.ru/renderer/ee55fca2723e8c80a01e73f1ad27a010b1630da0.png" /> </center> Если существует несколько решений, выведите любое.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 2<br />0 0 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre><span class="tex-span">\</span>../<br />#<span class="tex-span">\</span>/#<br /><span class="tex-span">\</span>##/<br />.<span class="tex-span">\</span>/.<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 3<br />1 2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>###/<span class="tex-span">\</span>#<br />##/..<span class="tex-span">\</span><br />#/....<br />/.....<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
