
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="1h5g30b59f7ebefa2hg5gfgh645ag5h5"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="19k5xrhzrnyyy"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='1h5g30b59f7ebefa2hg5gfgh645ag5h5'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Beta Round #35 (Div. 2)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Кручу, верчу, запутать хочу!</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>64 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>Сегодня у жителей города «З» соревнование по игре «Кручу, верчу». Все жители города собрались на главной площади и затаив дыхание следят за действиями ведущего. Ведущий ставит на стол 3 непрозрачных стаканчика дном вверх, располагая их в ряд. Далее он публично кладет шарик под один из стаканчиков и начинает очень быстро менять стаканчики местами, делая ровно 3 обмена. После этого зрителям дается ровно одна попытка сказать, где находится шарик, и в случае правильного ответа получить приз. А вы сможете угадать, где шарик?</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входных данных содержит число от одного до трех — номер стаканчика, под которым шарик лежит перед обменами. Следующие три строки описывают обмены. Описание каждого обмена содержит два различных числа от одного до трех — номера стаканчиков, которые ведущий поменял местами при этом обмене. Стаканчики нумеруются слева направо, после каждого обмена перенумеровываются опять слева направо. Иначе говоря, номер 1 всегда соответствует левому стаканчику, номер 2 — среднему и номер 3 — правому.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите число от одного до трех — номер стаканчика, в котором окажется шарик после всех обменов.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>1<br />1 2<br />2 1<br />2 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1<br />2 1<br />3 1<br />1 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Склад</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>64 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>В старые времена, когда мир был красивее, солнце светило ярче, трава была зеленее, а колбаса была вкуснее, самым могущественным государством была страна Арляндия. В ее столице и работал наш герой ДравДэ. Он не умел писать программы, придумывать задачи (вообще в те времена редкие люди видели компьютеры вживую), но наш герой и так неплохо жил — он работал на складе с волшебным, но безалкогольным напитком Огудар-Олок. Мы не будем вдаваться в подробности его профессии, но в данной задаче рассмотрим упрощенную модель склада.</p><p>Пусть наш склад состоит из одного стеллажа. Сам стеллаж состоит из <span class="tex-span"><i>n</i></span> полок, каждая из которых разделена на <span class="tex-span"><i>m</i></span> ячеек. Полки нумеруются сверху вниз начиная с <span class="tex-span">1</span>, а ячейки в каждой полке — слева направо, также начиная с <span class="tex-span">1</span>. В каждую ячейку помещается ровно один ящик напитка, и ДравДэ, даже при всем своем желании, не сможет положить туда еще ящик, если ячейка уже занята. В процессе своей работы ДравДэ нередко замечает, что требуется положить ящик в ячейку, когда там уже что-то лежит. В этом случае ДравДэ делает очень просто: он не трогает эту занятую ячейку, а смотрит на следующую справа от нее. Если она свободна — то место под ящик найдено, и он ставит его туда; иначе он смотрит дальше и ищет первую свободную ячейку справа. Если до конца этой полки не найдется ни одного свободного места, то он начинает рассматривать полку, которая находится под текущей, а потом следующую и т. д. При этом, каждый раз при переходе на новую полку поиск места начинается с ее начала. Если ДравДэ так и не смог найти свободного места для ящика, то он, не медля ни секунды, прямо на рабочем месте выпивает весь напиток из него, а пустую тару выкидывает, таким образом пряча все следы своего преступления.</p><p>Однажды, после бурного застолья с напитком Огудар-Олок, ДравДэ попросил вас помочь ему. В отличие от него, вы умеете писать программы, и поэтому вам не составит никакой сложности промоделировать процесс учета ящиков на складе.</p><p>Процесс учета состоит из запросов двух видов: <ul> <li> «<span class="tex-font-style-bf"><span class="tex-font-style-tt">+1 x y id</span></span>» (где <span class="tex-span"><i>x</i></span>, <span class="tex-span"><i>y</i></span> — это целые числа, <span class="tex-span">1 ≤ <i>x</i> ≤ <i>n</i></span>, <span class="tex-span">1 ≤ <i>y</i> ≤ <i>m</i></span>, а <span class="tex-span"><i>id</i></span> — строка из строчных латинских букв длиной от <span class="tex-span">1</span> до <span class="tex-span">10</span> символов). Этот запрос означает, что на склад поступил ящик с идентификатором <span class="tex-span"><i>id</i></span>, который нужно положить на полку номер <span class="tex-span"><i>x</i></span> в ячейку номер <span class="tex-span"><i>y</i></span>. Если эта ячейка уже занята, используйте правила, описанные выше. Гарантируется, что в любой момент времени описываемого процесса идентификаторы всех ящиков, присутствующих на складе в данный момент, различны. На этот запрос не нужно отвечать. </li><li> «<span class="tex-font-style-bf"><span class="tex-font-style-tt">-1 id</span></span>» (где <span class="tex-span"><i>id</i></span> — строка из строчных латинских букв длиной от <span class="tex-span">1</span> до <span class="tex-span">10</span> символов). Этот запрос означает, что со склада нужно изъять ящик с идентификатором <span class="tex-span"><i>id</i></span>. На этот запрос нужно вывести ответ (см. формат выходных данных). </li></ul></p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла заданы целые числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span> и <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 30</span>, <span class="tex-span">1 ≤ <i>k</i> ≤ 2000</span>) — высота, ширина стеллажа и количество операций на складе, которые вам нужно обработать. Далее в <span class="tex-span"><i>k</i></span> строках заданы запросы в порядке их поступления в формате, описанном выше.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждого запроса вида «<span class="tex-font-style-bf"><span class="tex-font-style-tt">-1 id</span></span>» выведите два числа на отдельной строке — номер полки и номер ячейки, в котором лежал ящик с данным идентификатором. Если на складе в момент запроса не было ящика с таким идентификатором, то выведите «<span class="tex-font-style-bf"><span class="tex-font-style-tt">-1 -1</span></span>» без кавычек.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 2 9<br />+1 1 1 cola<br />+1 1 1 fanta<br />+1 1 1 sevenup<br />+1 1 1 whitekey<br />-1 cola<br />-1 fanta<br />-1 sevenup<br />-1 whitekey<br />-1 cola<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1 1<br />1 2<br />2 1<br />2 2<br />-1 -1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 2 8<br />+1 1 1 cola<br />-1 cola<br />+1 1 1 fanta<br />-1 fanta<br />+1 1 1 sevenup<br />-1 sevenup<br />+1 1 1 whitekey<br />-1 whitekey<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1 1<br />1 1<br />1 1<br />1 1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Опять пожар</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>64 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>После ужасающего лесного пожара в Берляндии была реализована программа восстановления леса, по которой были посажены <span class="tex-span"><i>N</i></span> рядов по <span class="tex-span"><i>M</i></span> деревьев в каждом, причем настолько ровно, что можно ввести систему координат, в которой <span class="tex-span"><i>j</i></span>-тое дерево в <span class="tex-span"><i>i</i></span>-м ряду будет иметь координаты <span class="tex-span">(<i>i</i>, <i>j</i>)</span>. Но случилось ужасное, и едва окрепший лес загорелся. И теперь для составления плана эвакуации необходимо найти координаты дерева, которое загорится позже всех.</p><p>Возгорание произошло в <span class="tex-span"><i>K</i></span> точках одновременно, т.е. в начальный момент времени загорелось <span class="tex-span"><i>K</i></span> деревьев. Каждую минуту огонь перекидывается со всех горящих деревьев на те деревья, которые еще не горят и расстояние от которых до ближайшего горящего дерева равно 1.</p><p>Найдите дерево, которое загорится позже всех. Если таких деревьев несколько, выведите любое.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла заданы два целых числа <span class="tex-span"><i>N</i>, <i>M</i></span> (<span class="tex-span">1 ≤ <i>N</i>, <i>M</i> ≤ 2000</span>) — размеры леса. Деревья были посажены во всех точках вида (<span class="tex-span"><i>x</i>, <i>y</i></span>) (<span class="tex-span">1 ≤ <i>x</i> ≤ <i>N</i>, 1 ≤ <i>y</i> ≤ <i>M</i></span>), <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span> — целые числа.</p><p>Во второй строке задано одно целое число <span class="tex-span"><i>K</i></span> (<span class="tex-span">1 ≤ <i>K</i> ≤ 10</span>) — количество деревьев, горящих в начальный момент времени.</p><p>В третьей строке задано <span class="tex-span"><i>K</i></span> пар целых чисел: <span class="tex-span"><i>x</i><sub class="lower-index">1</sub>, <i>y</i><sub class="lower-index">1</sub>, <i>x</i><sub class="lower-index">2</sub>, <i>y</i><sub class="lower-index">2</sub>, ..., <i>x</i><sub class="lower-index"><i>k</i></sub>, <i>y</i><sub class="lower-index"><i>k</i></sub></span> (<span class="tex-span">1 ≤ <i>x</i><sub class="lower-index"><i>i</i></sub> ≤ <i>N</i>, 1 ≤ <i>y</i><sub class="lower-index"><i>i</i></sub> ≤ <i>M</i></span>) — координаты точек возгорания. Гарантируется, что все точки возгорания различны.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одну строку, содержащую два целых числа <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span>, записанные через пробел, — координаты дерева, которое загорится последним. Если таких деревьев несколько, выведите любое из них.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 3<br />1<br />2 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1 1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 3<br />1<br />1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3 3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 3<br />2<br />1 1 3 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2 2</pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Животные</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>64 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>Герой своего времени ДравДэ, известный своими профессиональными достижениями (напомним, что работает он на складе с волшебным, но безалкогольным напитком Огудар-Олок), однажды пришел домой после тяжелого рабочего дня. Тогда ему пришлось выпить целых 9875 ящиков напитка, и, придя домой, он сразу рухнул спать.</p><p>ДравДэ приснилось, будто он хозяин преуспевающей фермы, и каждый день к нему приходило по одному животному и просило разрешения поселиться, но ДравДэ, в силу своей бесконечной гуманности, мог отказать пришедшему животному в поселении, и тогда оно уходило восвояси. Всего во сне ДравДэ было ровно <span class="tex-span"><i>n</i></span> дней, и животное, которое приходило в <span class="tex-span"><i>i</i></span>-ый день, съедало ровно <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> тонн еды каждый день, начиная с <span class="tex-span"><i>i</i></span>-го, но если в какой-либо день животное не получало положенного пропитания, то оно сильно расстраивалось. В самом начале сна на ферме было ровно <span class="tex-span"><i>X</i></span> тонн еды.</p><p>ДравДэ проснулся в холодном поту...</p><p>Когда он рассказал вам этот сон, то он уже не мог вспомнить, сколько же животных было на ферме к концу <span class="tex-span"><i>n</i></span>-ного дня, но помнит, что никто не расстраивался (у него же была веселая ферма), а всего их было максимально возможное количество. Именно это число он и просит вас подсчитать.</p><p>Заметим, что животные приходили по утрам, а кормить ДравДэ их начинал только в полдень, и поэтому если животному отказывают в поселении, то оно ничего не успевает съесть из запасов фермы. Но если животное поселяется, то оно ест каждый день с текущего по <span class="tex-span"><i>n</i></span>-ый.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла записаны целые числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>X</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100, 1 ≤ <i>X</i> ≤ 10<sup class="upper-index">4</sup></span>) — количество дней, которые приснились ДравДэ, и количество тонн еды, которое было изначально на ферме. Во второй строке записаны целые числа <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>c</i><sub class="lower-index"><i>i</i></sub> ≤ 300</span>). Числа во второй строке разделены одним пробелом.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите в выходной файл единственное число — максимально возможное количество животных на ферме к концу <span class="tex-span"><i>n</i></span>-ого дня, если известно, что еды всем хватило.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 4<br />1 1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 6<br />1 1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Пояснение к первому примеру: ДравДэ оставляет на ферме второе и третье животное. Второе животное съест одну тонну еды во второй день и одну тонну в третий. Третье животное съест одну тонну еды в третий день. </p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Парад</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>4 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>64 megabytes</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>Ни один день победы в Берляндии не обходился без парада военной техники. Этот год не является исключением. В связи с этим подготовка уже идёт полным ходом. Танки уже строятся в одну колонну, артиллерийские установки готовы стрелять, солдаты маршируют на главной площади... А у генерала военно-воздушных сил Генералова опять неприятности. За последний год в Берляндии полным ходом шло строительство небоскрёбов, поэтому самолётам теперь не так просто летать по городу. Было решено, что все самолёты будут лететь строго с юга на север, при этом на всём пути самолёта не должно встретиться ни одного небоскрёба, иначе праздник закончится трагически. В министерстве строительства были получены данные об <span class="tex-span"><i>n</i></span> небоскрёбах (остальные здания достаточно маленькие и самолётам не помешают). Если смотреть на город с юга на север как на плоскость, то <span class="tex-span"><i>i</i></span>-ое здание представляет собой прямоугольник высоты <span class="tex-span"><i>h</i><sub class="lower-index"><i>i</i></sub></span>. Его самая западная точка имеет абсциссу <span class="tex-span"><i>l</i><sub class="lower-index"><i>i</i></sub></span>, а самая восточная точка — <span class="tex-span"><i>r</i><sub class="lower-index"><i>i</i></sub></span>. Рельеф местности в городе плоский, поэтому основания всех зданий находятся на одном уровне. Ваша задача, как главного программиста министерства обороны, по данным о небоскрёбах найти <span class="tex-font-style-it">огибающую</span> ломаную, то есть такую что: <ul> <li> Если смотреть на город с юга на север как на плоскость, то любая часть любого здания будет находиться внутри или на границе области, ограниченной ломаной вместе с поверхностью земли. </li><li> Ломаная начинается и заканчивается на уровне поверхности земли, т.е. на высоте 0. </li><li> Звенья ломаной параллельны осям координат, т.е. могут быть только вертикальными или горизонтальными. </li><li> Вершины ломаной должны иметь целочисленные координаты. </li><li> На виде города с юга на север ломаная (вместе с поверхностью земли) ограничивает минимально возможную площадь. </li><li> Ломаная должна иметь наименьшую длину среди всех ломаных, ограничивающих вместе с поверхностью земли наименьшую площадь. </li><li> Последовательные звенья ломаной должны быть перпендикулярны. </li></ul></p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/a2e55f559e9a49a5990b00b92e0c65ec696f919f.png" /> </center></p><p><center>Рисунок ко второму примеру (в правой части отмечена искомая огибающая ломаная). </center></p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла задано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100000</span>). Следующие <span class="tex-span"><i>n</i></span> строк содержат по три целых числа <span class="tex-span"><i>h</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>l</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>r</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>h</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup>,  - 10<sup class="upper-index">9</sup> ≤ <i>l</i><sub class="lower-index"><i>i</i></sub> &lt; <i>r</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите целое число <span class="tex-span"><i>m</i></span> — количество вершин огибающей ломаной. Следующие <span class="tex-span"><i>m</i></span> строк должны содержать по 2 целых числа — позицию и высоту вершины ломаной. Вершины ломаной выдавайте в порядке обхода ломаной с запада на восток. Помните, что первая и последняя вершины ломаной должны располагаться на высоте 0.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br />3 0 2<br />4 1 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6<br />0 0<br />0 3<br />1 3<br />1 4<br />3 4<br />3 0<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />3 -3 0<br />2 -1 1<br />4 2 4<br />2 3 7<br />3 6 8<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>14<br />-3 0<br />-3 3<br />0 3<br />0 2<br />1 2<br />1 0<br />2 0<br />2 4<br />4 4<br />4 2<br />6 2<br />6 3<br />8 3<br />8 0<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
