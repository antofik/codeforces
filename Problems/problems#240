
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="f85a60b51e4dc7f6g785a44653728a15"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="7rxfo8808rb2"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='f85a60b51e4dc7f6g785a44653728a15'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Round #145 (Div. 1, &#1087;&#1088;&#1072;&#1074;&#1080;&#1083;&#1072; ACM-ICPC)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Кино</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>В Берляндии всего <span class="tex-span"><i>m</i></span> актеров. У каждого актера свой идентификатор — целое число от <span class="tex-span">1</span> до <span class="tex-span"><i>m</i></span> (у разных актеров разные идентификаторы). Вася очень любит смотреть берляндские фильмы с берляндскими актерами, и у него есть <span class="tex-span"><i>k</i></span> любимых актеров. Мальчик посмотрел анонсы фильмов на следующий месяц и записал про каждый фильм следующую информацию: название фильма, количество актеров, которые в нем снимались, и идентификаторы этих актеров. Причем названия фильмов и количество актеров он переписать успел, а вот идентификаторы некоторых актеров нет. Вася посмотрел на свои записи и задумался: какие же из фильмов станут его любимыми, а какие нет. После того, как Вася узнает точные актерские составы всех фильмов, любимые фильмы будут определяться так: фильм становится любимым фильмом, если ни в каком другом фильме из Васиного списка не играет больше любимых актеров. </p><p>Помогите мальчику для каждого фильма определить, что этот фильм: </p><p><ul></ul></p><p><li> точно будет любимым фильмом,</li></p><p><li> точно не будет любимым фильмом, </li></p><p><li> может как быть любимым, так и не быть.</li></p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла записаны два целых числа <span class="tex-span"><i>m</i></span> и <span class="tex-span"><i>k</i></span> (<span class="tex-span">1 ≤ <i>m</i> ≤ 100, 1 ≤ <i>k</i> ≤ <i>m</i></span>) — количество актеров в Берляндии и количество любимых актеров Васи. </p><p>Во второй строке содержатся <span class="tex-span"><i>k</i></span> различных целых чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ <i>m</i></span>) — идентификаторы любимых актеров Васи.</p><p>В третьей строке содержится единственное целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100</span>) — количество фильмов в Васином списке.</p><p>Далее следует <span class="tex-span"><i>n</i></span> блоков строк, в каждом из которых содержится описание очередного фильма. Описание <span class="tex-span"><i>i</i></span>-го фильма содержит 3 строки: </p><p><ul> <li> в первой из них содержится строка <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i></sub></span> состоит из маленьких латинских букв и может иметь длину от <span class="tex-span">1</span> до <span class="tex-span">10</span> символов включительно) — название фильма, </li></ul></p><p><li> во второй — целое неотрицательное число <span class="tex-span"><i>d</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>d</i><sub class="lower-index"><i>i</i></sub> ≤ <i>m</i></span>) — количество актеров, играющих в этом фильме,</li></p><p><li> в третьей — <span class="tex-span"><i>d</i><sub class="lower-index"><i>i</i></sub></span> целых чисел <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i>, <i>j</i></sub></span> (<span class="tex-span">0 ≤ <i>b</i><sub class="lower-index"><i>i</i>, <i>j</i></sub> ≤ <i>m</i></span>) — идентификаторы актеров, играющих в этом фильме. Если <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i>, <i>j</i></sub> = 0</span>, то это значит, что Вася не помнит идентификатор <span class="tex-span"><i>j</i></span>-го актера. Гарантируется, что в перечне актеров для одного фильма не встречается двух одинаковых. </li></p><p>Названия всех фильмов различны. Числа в строках разделяются одиночными пробелами.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В выходной файл выведите <span class="tex-span"><i>n</i></span> строк. В <span class="tex-span"><i>i</i></span>-ой строке выведите: </p><p><ul> <li> 0, если <span class="tex-span"><i>i</i></span>-ый фильм точно будет любимым, </li><li> 1, если <span class="tex-span"><i>i</i></span>-ый фильм точно будет нелюбимым, </li><li> 2, если <span class="tex-span"><i>i</i></span>-ый фильм может быть как любимым, так и нелюбимым. </li></ul></p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5 3<br />1 2 3<br />6<br />firstfilm<br />3<br />0 0 0<br />secondfilm<br />4<br />0 0 4 5<br />thirdfilm<br />1<br />2<br />fourthfilm<br />1<br />5<br />fifthfilm<br />1<br />4<br />sixthfilm<br />2<br />1 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />2<br />1<br />1<br />1<br />2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5 3<br />1 3 5<br />4<br />jumanji<br />3<br />0 0 0<br />theeagle<br />5<br />1 2 3 4 0<br />matrix<br />3<br />2 4 0<br />sourcecode<br />2<br />2 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />0<br />1<br />1<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Пояснение ко второму примеру: <ul> <li> В фильме <span class="tex-font-style-tt">jumanji</span> теоретически может играть от 1 до 3 любимых Васей актеров. </li><li> В фильме <span class="tex-font-style-tt">theeagle</span> играют все три любимых актера, поскольку актер, которого Вася не запомнил, может иметь только идентификатор 5. </li><li> В фильме <span class="tex-font-style-tt">matrix</span> может играть только один любимый актер. </li><li> В фильме <span class="tex-font-style-tt">sourcecode</span> не играет никто из любимых актеров. </li></ul></p><p>Таким образом, фильм <span class="tex-font-style-tt">theeagle</span> — точно любимый, фильмы <span class="tex-font-style-tt">matrix</span> и <span class="tex-font-style-tt">sourcecode</span> — точно нелюбимые, а фильм <span class="tex-font-style-tt">jumanji</span> может являться как любимым (если в нем играют все три любимых актера), так и нелюбимым.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Забор</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>Васе необходимо покрасить забор перед частным домом, в котором он живет. Забор представляет собой последовательность из <span class="tex-span"><i>n</i></span> деревянных досок, выстроенных в один ряд. Каждая доска является прямоугольником шириной <span class="tex-span">1</span> сантиметр. Пронумеруем доски забора числами <span class="tex-span">1, 2, ..., <i>n</i></span> слева направо. Высота <span class="tex-span"><i>i</i></span>-ой доски составляет <span class="tex-span"><i>h</i><sub class="lower-index"><i>i</i></sub></span> сантиметров.</p><p>В распоряжении Васи есть кисть шириной <span class="tex-span">1</span> сантиметр и краски двух цветов — красного и зеленого. Разумеется, запасы красок ограничены. Вася посчитал, какую площадь он сможет покрасить в каждый из цветов. Оказалось, что он сможет покрасить не более <span class="tex-span"><i>a</i></span> квадратных сантиметров забора в красный цвет и не более <span class="tex-span"><i>b</i></span> квадратных сантиметров в зеленый. Каждую доску забора нужно покрасить ровно в один из двух цветов. Возможно один из цветов Васе не потребуется.</p><p>Кроме того, Вася хочет, чтобы его забор выглядел красиво. Для этого нужно покрасить забор так, чтобы минимизировать величину, которую Вася назвал величиной <span class="tex-font-style-it">непривлекательности</span> забора. Вася считает, что две подряд идущие доски забора, покрашенные в различные цвета, выглядят непривлекательно. Величиной <span class="tex-font-style-it">непривлекательности</span> забора он назвал суммарную длину соприкосновения соседних досок различного цвета. Чтобы забор выглядел красиво, нужно, чтобы эта величина была как можно меньше. Вашей задачей является посчитать, какое минимальное значение непривлекательности может получить Вася, полностью покрасив свой забор.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/55b04e89af3f539e87ae0e668b3d1f5f0b532b84.png" /> </center></p><p>На рисунке изображен забор, в котором высоты досок (слева направо) равны 2,3,2,4,3,1. Первая и пятая доска покрашены в красный цвет, остальные — в зеленый. Первая и вторая доска имеют длину соприкосновения 2, четвертая и пятая — 3, пятая и шестая — 1. Поэтому для приведенной покраски <span class="tex-font-style-it">непривлекательность</span> равна 2+3+1=6.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке задано единственное целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 200</span>) — количество досок в заборе Васи.</p><p>Во второй строке заданы два целых числа <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> (<span class="tex-span">0 ≤ <i>a</i>, <i>b</i> ≤ 4·10<sup class="upper-index">4</sup></span>) — площадь, которую можно покрасить в красный цвет, и площадь, которую можно покрасить в зеленый цвет, соответственно.</p><p>В третьей строке задана последовательность из <span class="tex-span"><i>n</i></span> целых чисел <span class="tex-span"><i>h</i><sub class="lower-index">1</sub>, <i>h</i><sub class="lower-index">2</sub>, ..., <i>h</i><sub class="lower-index"><i>n</i></sub></span> <span class="tex-span">(1 ≤ <i>h</i><sub class="lower-index"><i>i</i></sub> ≤ 200)</span> — высоты досок забора.</p><p>Все числа в строках разделены одиночными пробелами.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное число — минимальное значение <span class="tex-font-style-it">непривлекательности</span>, которое может получить Вася, полностью покрасив свой забор. Если забор покрасить невозможно выведите <span class="tex-span"> - 1</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>4<br />5 7<br />3 3 4 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>3<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br />2 3<br />1 3 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br />3 3<br />2 2 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Тренировки</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>До ежегодного чемпионата Берляндии по футболу осталось совсем немного времени. Поэтому тренер «Мясгазочки» решил возобновить тренировки, прерванные по неопределенным причинам на неопределенный срок. Всего в «Мясгазочке» играет <span class="tex-span"><i>n</i></span> футболистов. У каждого футболиста в команде есть номер — уникальное целое число от 1 до <span class="tex-span"><i>n</i></span>. Для подготовки к чемпионату тренер Калич Евгеньевич решил провести некоторое количество тренировок. </p><p>Над тем, как нужно проводить тренировки, Калич Евгеньевич думал долгими ночами своего отпуска. Он пришел к очень сложной схеме тренировок. Каждая тренировка состоит из одной игры, в которой участвуют все <span class="tex-span"><i>n</i></span> игроков команды. Игроки некоторым образом разбиваются на две команды. При этом в командах может быть разное количество игроков, но в каждой из команд должно оказаться хотя бы по одному игроку.</p><p>Тренер стремится к тому, чтобы после серии тренировок для каждой пары игроков существовала хотя бы одна тренировка, во время которой они играли в разных командах. Поскольку силы игроков ограничены, тренер хочет достигнуть цели за наименьшее число тренировок.</p><p>Помогите ему составить расписание тренировок.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке входного файла находится целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 1000</span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите <span class="tex-span"><i>m</i></span> — наименьшее количество тренировок, которое придется провести тренеру. Затем выведите описания тренировок в <span class="tex-span"><i>m</i></span> строках.</p><p>В <span class="tex-span"><i>i</i></span>-ой из этих строк выведите <span class="tex-span"><i>f</i><sub class="lower-index"><i>i</i></sub></span> — количество игроков в первой команде во время <span class="tex-span"><i>i</i></span>-й тренировки (<span class="tex-span">1 ≤ <i>f</i><sub class="lower-index"><i>i</i></sub> &lt; <i>n</i></span>), и <span class="tex-span"><i>f</i><sub class="lower-index"><i>i</i></sub></span> чисел от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span> — номера игроков в первой команде. Все остальные игроки во время этой тренировки будут играть во второй команде. Числа в строке разделяйте пробелами. Номера игроков выводите в любом порядке. Если оптимальных решений несколько, выведите любое из них.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br />1 1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br />2 1 2<br />1 1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Слияние двух колод</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>У вас на столе лежат две колоды карт, причем некоторые карты в этих колодах лежат рубашкой вверх, а некоторые — рубашкой вниз. Вы хотите получить из них одну колоду, в которой каждая карта лежит рубашкой вверх. Вы собираетесь сделать это в два этапа.</p><p>Первый этап заключается в слиянии обеих колод в одну так, что относительный порядок карт из одной и той же колоды не изменяется. То есть для любых двух различных карт <span class="tex-span"><i>i</i></span> и <span class="tex-span"><i>j</i></span> из одной колоды, если карта <span class="tex-span"><i>i</i></span> лежала выше карты <span class="tex-span"><i>j</i></span>, то после слияния карта <span class="tex-span"><i>i</i></span> так же должна лежать выше карты <span class="tex-span"><i>j</i></span>. </p><p>Второй этап заключается в выполнении над полученной после первого этапа колодой операций переворота. За одну операцию переворота вы можете взять несколько верхних карт, целиком перевернуть и положить обратно. Таким образом, переворачивается каждая из взятых карт, а порядок этих карт меняется на противоположный. То есть, самая нижняя карта из тех, что вы взяли, окажется сверху.</p><p>Ваша цель — добиться того, чтобы все карты стали лежать рубашкой вверх. Найдите такой такой порядок слияния карт на первом этапе и последовательность операций переворота на втором этапе, чтобы все карты лежали рубашкой вверх, а количество операций переворота было минимальным.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных находится единственное целое число <span class="tex-span"><i>n</i></span> — количество карт в первой колоде <span class="tex-span">(1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup>)</span>.</p><p>Во второй строке входных данных находится <span class="tex-span"><i>n</i></span> целых чисел, разделенных одиночными пробелами <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> <span class="tex-span">(0 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub> ≤ 1)</span>. Значение <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> равно 0, если <span class="tex-span"><i>i</i></span>-я карта лежит рубашкой вверх, и 1, если карта лежит рубашкой вниз. Карты заданы в порядке от самой верхней к самой нижней.</p><p>В третьей строке входных данных находится целое число <span class="tex-span"><i>m</i></span> — количество карт во второй колоде <span class="tex-span">(1 ≤ <i>m</i> ≤ 10<sup class="upper-index">5</sup>)</span>.</p><p>В четвертой строке входных данных находится <span class="tex-span"><i>m</i></span> целых чисел, разделенных одиночными пробелами <span class="tex-span"><i>b</i><sub class="lower-index">1</sub>, <i>b</i><sub class="lower-index">2</sub>, ..., <i>b</i><sub class="lower-index"><i>m</i></sub></span> <span class="tex-span">(0 ≤ <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ 1)</span>. Значение <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span> равно 0, если <span class="tex-span"><i>i</i></span>-я карта лежит рубашкой вверх, и 1, если карта лежит рубашкой вниз. Карты заданы в порядке от самой верхней к самой нижней.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первую строку выведите <span class="tex-span"><i>n</i> + <i>m</i></span> целых чисел, разделенных пробелом — номера карт в том порядке, в котором они будут находиться после первого этапа. Перечисляйте карты от самой верхней к самой нижней. Картам первой колоды должны соответствовать их номера от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span> в порядке от самой верхней карты к самой нижней, а картам второй колоды должны соответствовать их номера, увеличенные на <span class="tex-span"><i>n</i></span>, то есть числа от <span class="tex-span"><i>n</i> + 1</span> до <span class="tex-span"><i>n</i> + <i>m</i></span> в порядке от самой верхней карты во второй колоде к самой нижней.</p><p>Во второй строке выведите одно целое число <span class="tex-span"><i>x</i></span> — минимальное количество операций переворота, которое необходимо выполнить, чтобы все карты в колоде лежали рубашкой вверх. В третьей строке выведите <span class="tex-span"><i>x</i></span> целых чисел: <span class="tex-span"><i>c</i><sub class="lower-index">1</sub>, <i>c</i><sub class="lower-index">2</sub>, ..., <i>c</i><sub class="lower-index"><i>x</i></sub></span> <span class="tex-span">(1 ≤ <i>c</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i> + <i>m</i>)</span>, каждое из которых означает, сколько карт следует взять сверху колоды для выполнения очередной операции переворота. Операции выводите в том порядке, в котором их надо выполнять. </p><p>Если оптимальных решений несколько, выведите любой из них. Гарантируется, что минимальное количество операций не превышает <span class="tex-span">6·10<sup class="upper-index">5</sup></span>. </p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />1 0 1<br />4<br />1 1 1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1 4 5 6 7 2 3<br />3<br />5 6 7<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5<br />1 1 1 1 1<br />5<br />0 1 0 1 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6 1 2 3 4 5 7 8 9 10<br />4<br />1 7 8 9<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Ремонт дорог</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>В стране Берляндии <span class="tex-span"><i>n</i></span> городов. Они пронумерованы целыми числами от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>. Город номер <span class="tex-span">1</span> является столицей государства. Между некоторыми парами городов проложены дороги с односторонним движением, однако не все из них находятся в хорошем состоянии. Про каждую дорогу известно, нуждается ли она в ремонте. Если дорога нуждается в ремонте, то проезд по ней запрещен. Однако правительство Берляндии может отремонтировать дорогу и возобновить проезд по ней.</p><p>Сейчас над Берляндией нависла угроза войны с соседним государством, поэтому в столице было принято решение отправить в каждый город по одному военному отряду. Отряды могут передвигаться только по существующим дорогам, потому что на создание новых нет ни времени, ни средств. Однако для того, чтобы добраться до некоторых городов, возможно, придется отремонтировать какие-то дороги.</p><p>Конечно же, чтобы победить противника нужно много сил, поэтому силы надо экономить. С этой целью правительство Берляндии хочет отремонтировать минимальное число дорог, чтобы после этого военные отряды смогли добраться из столицы в любой другой город по отремонтированным дорогам или дорогам, уже находящимся в хорошем состоянии. Вам необходимо помочь правительству Берляндии и найти, какие дороги следует отремонтировать.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке через пробел заданы два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> <span class="tex-span">(1 ≤ <i>n</i>, <i>m</i> ≤ 10<sup class="upper-index">5</sup>)</span> — количество городов и количество дорог в Берляндии.</p><p>В следующих <span class="tex-span"><i>m</i></span> строках через пробел заданы три целых числа <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub>, <i>c</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>, <i>a</i><sub class="lower-index"><i>i</i></sub> ≠ <i>b</i><sub class="lower-index"><i>i</i></sub>, 0 ≤ <i>c</i><sub class="lower-index"><i>i</i></sub> ≤ 1)</span>, обозначающие дорогу из города <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> в город <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub></span>. Если <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> равно <span class="tex-span">0</span>, то данная дорога находится в хорошем состоянии, если <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> равно <span class="tex-span">1</span>, то она нуждается в ремонте.</p><p>Гарантируется, что между городами существует не более одной дороги в каждом из направлений.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если даже после ремонта всех дорог из столицы нельзя добраться до какого-нибудь из городов, то выведите -1. В противном случае в первую строку выведите минимальное количество дорог, которые нужно отремонтировать, а во вторую строку выведите номера этих дорог через одиночные пробелы.</p><p>Дороги нумеруются, начиная с <span class="tex-span">1</span>, в том порядке, в котором они заданы во входном файле.</p><p>Если существует несколько наборов, состоящих из минимального числа дорог, после ремонта которых все города станут достижимы из столицы, выведите любой из них.</p><p>Если в любой из городов можно добраться по дорогам, уже находящимся в хорошем состоянии, выведите <span class="tex-span">0</span> в единственную строку выходного файла.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 2<br />1 3 0<br />3 2 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br />2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 4<br />2 3 0<br />3 4 0<br />4 1 0<br />4 2 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 3<br />1 2 0<br />1 3 0<br />1 4 0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br /><br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F. TorCoder</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 секунд</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>input.txt</div><div class="output-file"><div class="property-title">вывод</div>output.txt</div></div><div><p>Мальчик Лео не пропускает ни одного раунда соревнований TorCoder. На последнем TorCoder раунде под номером 100666 Лео столкнулся со следующей задачей. Задана строка <span class="tex-span"><i>s</i></span>, состоящая из <span class="tex-span"><i>n</i></span> строчных букв латинского алфавита, а также <span class="tex-span"><i>m</i></span> запросов. Каждый запрос характеризуется парой целых чисел <span class="tex-span"><i>l</i><sub class="lower-index"><i>i</i></sub>, <i>r</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>l</i><sub class="lower-index"><i>i</i></sub> ≤ <i>r</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>)</span>. </p><p>Будем считать, что буквы строки пронумерованы от 1 до <span class="tex-span"><i>n</i></span> слева направо, то есть <span class="tex-span"><i>s</i> = <i>s</i><sub class="lower-index">1</sub><i>s</i><sub class="lower-index">2</sub>... <i>s</i><sub class="lower-index"><i>n</i></sub></span>. </p><p>После каждого запроса необходимо поменять местами буквы строки <span class="tex-span"><i>s</i></span>, с номерами от <span class="tex-span"><i>l</i><sub class="lower-index"><i>i</i></sub></span> до <span class="tex-span"><i>r</i><sub class="lower-index"><i>i</i></sub></span> включительно так, чтобы подстрока <span class="tex-span">(<i>l</i><sub class="lower-index"><i>i</i></sub>, <i>r</i><sub class="lower-index"><i>i</i></sub>)</span> стала палиндромом. Если существует несколько таких перестановок букв, нужно выбрать ту, в которой подстрока <span class="tex-span">(<i>l</i><sub class="lower-index"><i>i</i></sub>, <i>r</i><sub class="lower-index"><i>i</i></sub>)</span> будет лексикографически наименьшей. Если не существует ни одной такой перестановки — запрос нужно проигнорировать (то есть никак не менять строку <span class="tex-span"><i>s</i></span>).</p><p>Всем известно, что на раундах TorCoder ограничения на размер входных строк и массивов никогда не превышают <span class="tex-span">60</span>, поэтому Лео с легкостью решил эту задачу. Вам же нужно решить эту задачу на несколько больших ограничениях. По заданной строке <span class="tex-span"><i>s</i></span> и <span class="tex-span"><i>m</i></span> запросам, выведите строку, которая получится в результате применения всех <span class="tex-span"><i>m</i></span> запросов к строке <span class="tex-span"><i>s</i></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных находится два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> <span class="tex-span">(1 ≤ <i>n</i>, <i>m</i> ≤ 10<sup class="upper-index">5</sup>)</span> — длина строки и количество запросов.</p><p>Во второй строке находится строка <span class="tex-span"><i>s</i></span>, состоящая из <span class="tex-span"><i>n</i></span> строчных латинских букв.</p><p>В каждой из следующих <span class="tex-span"><i>m</i></span> строк находится пара чисел <span class="tex-span"><i>l</i><sub class="lower-index"><i>i</i></sub>, <i>r</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>l</i><sub class="lower-index"><i>i</i></sub> ≤ <i>r</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>) — очередной запрос, который нужно применить к строке. </p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственной строке выведите результат применения <span class="tex-span"><i>m</i></span> запросов к строке <span class="tex-span"><i>s</i></span>. Выполняйте запросы, в том порядке, в котором они заданы во входных данных.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>7 2<br />aabcbaa<br />1 3<br />5 7<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>abacaba<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 2<br />abc<br />1 2<br />2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>abc<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p><span class="tex-font-style-it">Подстрокой</span> <span class="tex-span">(<i>l</i><sub class="lower-index"><i>i</i></sub>, <i>r</i><sub class="lower-index"><i>i</i></sub>)</span> <span class="tex-span">1 ≤ <i>l</i><sub class="lower-index"><i>i</i></sub> ≤ <i>r</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>)</span> строки <span class="tex-span"><i>s</i> = <i>s</i><sub class="lower-index">1</sub><i>s</i><sub class="lower-index">2</sub>... <i>s</i><sub class="lower-index"><i>n</i></sub></span> длины <span class="tex-span"><i>n</i></span> называется последовательность символов <span class="tex-span"><i>s</i><sub class="lower-index"><i>l</i><sub class="lower-index"><i>i</i></sub></sub><i>s</i><sub class="lower-index"><i>l</i><sub class="lower-index"><i>i</i> + 1</sub></sub>...<i>s</i><sub class="lower-index"><i>r</i><sub class="lower-index"><i>i</i></sub></sub></span>.</p><p>Строка называется <span class="tex-font-style-it">палиндромом</span>, если она читается одинаково слева направо и справа налево.</p><p>Строка <span class="tex-span"><i>x</i><sub class="lower-index">1</sub><i>x</i><sub class="lower-index">2</sub>... <i>x</i><sub class="lower-index"><i>p</i></sub></span> <span class="tex-font-style-it">лексикографически меньше</span> строки <span class="tex-span"><i>y</i><sub class="lower-index">1</sub><i>y</i><sub class="lower-index">2</sub>... <i>y</i><sub class="lower-index"><i>q</i></sub></span>, если либо <span class="tex-span"><i>p</i> &lt; <i>q</i></span> и <span class="tex-span"><i>x</i><sub class="lower-index">1</sub> = <i>y</i><sub class="lower-index">1</sub>, <i>x</i><sub class="lower-index">2</sub> = <i>y</i><sub class="lower-index">2</sub>, ... , <i>x</i><sub class="lower-index"><i>p</i></sub> = <i>y</i><sub class="lower-index"><i>p</i></sub></span>, либо существует такое число <span class="tex-span"><i>r</i></span> <span class="tex-span">(<i>r</i> &lt; <i>p</i>, <i>r</i> &lt; <i>q</i>)</span>, что <span class="tex-span"><i>x</i><sub class="lower-index">1</sub> = <i>y</i><sub class="lower-index">1</sub>, <i>x</i><sub class="lower-index">2</sub> = <i>y</i><sub class="lower-index">2</sub>, ... , <i>x</i><sub class="lower-index"><i>r</i></sub> = <i>y</i><sub class="lower-index"><i>r</i></sub></span> и <span class="tex-span"><i>x</i><sub class="lower-index"><i>r</i> + 1</sub> &lt; <i>y</i><sub class="lower-index"><i>r</i> + 1</sub></span>.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
