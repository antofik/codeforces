
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="h2ce895a8ebabh40eac966fh099683fe"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="6ydjh0y2vcy9"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='h2ce895a8ebabh40eac966fh099683fe'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
            <div style="padding:1em 0 0 2px;color:#00a651;">
<a href="/croc2013"><img src="/images/custom/croc-ru.png"/></a>
<span style="padding:1.5em;">Всероссийский Чемпионат по программированию КРОК-2013</span>
</div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">&#1063;&#1077;&#1084;&#1087;&#1080;&#1086;&#1085;&#1072;&#1090; &#1050;&#1056;&#1054;&#1050; 2013 - &#1050;&#1074;&#1072;&#1083;&#1080;&#1092;&#1080;&#1082;&#1072;&#1094;&#1080;&#1086;&#1085;&#1085;&#1099;&#1081; &#1088;&#1072;&#1091;&#1085;&#1076;</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Разговоры в Spyke</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Поликарп — директор большой корпорации. В этой корпорации работает <span class="tex-span"><i>n</i></span> секретарей, каждый из которых пользуется известной VoIP-системой Spyke для ведения переговоров в течение рабочего дня. Известно, что, когда два человека устанавливают телефонное соединение Spyke, сеть Spyke присваивает этому разговору уникальный идентификационный номер (целое положительное число) — номер сессии.</p><p>Как-то раз Поликарп захотел узнать, кто из секретарей разговаривает по Spyke, а кто — нет. Он выписал для каждого секретаря номер сессии его разговора, или 0, если этот секретарь сейчас не разговаривает по Spyke.</p><p>Помогите Поликарпу по этим данным определить, сколько пар секретарей сейчас ведут разговор между собой. Если в данные Поликарпа закралась ошибка, и описанная ситуация никак не могла произойти, требуется сообщить об этом.</p><p>Обратите внимание, секретари могут разговаривать по Spyke не только друг с другом — возможны разговоры с внешними собеседниками. Также не разрешены конференции Spyke — то есть в каждом разговоре должны участвовать ровно два собеседника.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано целое число <span class="tex-span"><i>n</i></span> <span class="tex-span">(1 ≤ <i>n</i> ≤ 10<sup class="upper-index">3</sup>)</span> — количество секретарей в корпорации Поликарпа. В следующей строке записаны <span class="tex-span"><i>n</i></span> целых чисел через пробел: <span class="tex-span"><i>id</i><sub class="lower-index">1</sub>, <i>id</i><sub class="lower-index">2</sub>, ..., <i>id</i><sub class="lower-index"><i>n</i></sub></span> <span class="tex-span">(0 ≤ <i>id</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup>)</span>. Число <span class="tex-span"><i>id</i><sub class="lower-index"><i>i</i></sub></span> равно номеру сессии разговора секретаря номер <span class="tex-span"><i>i</i></span>, если он разговаривает в данный момент по Spyke, или равно нулю, в противном случае.</p><p>Считайте, что секретари пронумерованы от 1 до <span class="tex-span"><i>n</i></span> некоторым образом.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — количество пар секретарей, которые ведут разговор между собой, или <span class="tex-font-style-tt">-1</span>, если в данные Поликарпа закралась ошибка, и описанная ситуация никак не могла произойти.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>6<br />0 1 7 1 7 10<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br />1 1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1<br />0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>0<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом тестовом примере есть два телефонных разговора между секретарями: секретарь номер 2 и секретарь номер 4, секретарь номер 3 и секретарь номер 5.</p><p>Во втором тестовом примере описанная ситуация невозможна, так как не разрешены конференции.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Аргументы командной строки</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p><span class="tex-font-style-it">В данной задаче используется описание свойств командной строки, близкое к тому, что вы привыкли видеть в настоящих операционных системах. Однако, в деталях существуют отличия в поведении. Внимательно прочтите условие, используйте его как формальный документ при разработке решения.</span></p><p>В операционной системе Pindows лексемами командной строки являются строки — первая из них трактуется как имя запускаемой программы, а последующие как ее аргументы. Например, выполняя команду «<span class="tex-font-style-tt"> run.exe one, two . </span>», мы передаем командной строке Pindows четыре лексемы: «<span class="tex-font-style-tt">run.exe</span>», «<span class="tex-font-style-tt">one,</span>», «<span class="tex-font-style-tt">two</span>», «<span class="tex-font-style-tt">.</span>». Более формально, если мы выполняем команду, которая представима строкой <span class="tex-span"><i>s</i></span> (и не содержит кавычек), то лексемами командной строки являются максимальные по включению подстроки строки <span class="tex-span"><i>s</i></span>, которые не содержат пробелов.</p><p>Для того, чтобы передать в качестве лексемы командной строки строку с пробелами или пустую строку, используются двойные кавычки. Блок символов, который должен рассматриваться как одна лексема, берется в кавычки. При этом вложенные кавычки запрещаются — то есть про каждое вхождение символа «<span class="tex-font-style-tt">&quot;</span>» можно однозначно сказать — что это, открывающие кавычки или закрывающие. Например, выполняя команду «<span class="tex-font-style-tt">&quot;run.exe o&quot; &quot;&quot; &quot; ne, &quot; two . &quot; &quot; </span>», мы передаем командной строке Pindows шесть лексем: «<span class="tex-font-style-tt">run.exe o</span>», «<span class="tex-font-style-tt"></span>» (пустая строка), «<span class="tex-font-style-tt"> ne, </span>», «<span class="tex-font-style-tt">two</span>», «<span class="tex-font-style-tt">.</span>», «<span class="tex-font-style-tt"> </span>» (единичный пробел).</p><p>Гарантируется, что каждая из лексем командной строки окружена с обеих сторон пробелами или упирается в соответствующий край командной строки. Из этого, например, следует, что открывающие кавычки либо являются первым символом строки, либо слева от них находится пробел.</p><p>Вам задана строка, состоящая из прописных, строчных букв латинского алфавита, цифр, символов «<span class="tex-font-style-tt">.,?!&quot;</span>» и пробелов. Гарантируется, что эта строка — корректная командная строка OS Pindows. Выведите все лексемы этой командной строки. Считайте, что символ «<span class="tex-font-style-tt">&quot;</span>» используется в команде только для выделения единого блока символов в одну лексему командной строки, в частности, из этого следует, что таких символов в заданной строке четное количество. </p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке задана непустая строка <span class="tex-span"><i>s</i></span>. Строка <span class="tex-span"><i>s</i></span> состоит из не более чем <span class="tex-span">10<sup class="upper-index">5</sup></span> символов. Каждый символ — это либо прописная, либо строчная буква латинского алфавита, либо цифра, либо один из символов «<span class="tex-font-style-tt">.,?!&quot;</span>», либо пробел.</p><p>Гарантируется, что заданная строка — некоторая корректная командная строка OS Pindows. Гарантируется, что в заданной командной строке есть хотя бы одна лексема.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите первую лексему, во второй строке — вторую, и так далее. Для наглядности слева от каждой лексемы выведите символ «<span class="tex-font-style-tt">&lt;</span>» (меньше), а справа — символ «<span class="tex-font-style-tt">&gt;</span>» (больше). Выводите лексемы в том порядке, в котором они встречаются в команде.</p><p>Строго следуйте описанному формату вывода. Для лучшего понимания формата вывода посмотрите тестовые примеры.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>&quot;RUn.exe O&quot; &quot;&quot; &quot;   2ne, &quot; two! . &quot; &quot;<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>&lt;RUn.exe O&gt;<br />&lt;&gt;<br />&lt;   2ne, &gt;<br />&lt;two!&gt;<br />&lt;.&gt;<br />&lt; &gt;<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>   firstarg   second   &quot;&quot;    <br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>&lt;firstarg&gt;<br />&lt;second&gt;<br />&lt;&gt;<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Маска подсети</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>4 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p><span class="tex-font-style-it">В задаче используется упрощенная модель адресов в TCP/IP, внимательно прочтите условие.</span></p><p>Поликарп устроился на работу системным администратором. Как-то раз к нему в руки попали <span class="tex-span"><i>n</i></span> IP-адресов. Каждый IP-адрес — это 32-битное число, представленное в виде четверки десятичных 8-битных чисел (без лидирующих нулей), записанных через точку. Например, запись <span class="tex-font-style-tt">0.255.1.123</span> обозначает корректный IP-адрес, а записи <span class="tex-font-style-tt">0.256.1.123</span> и <span class="tex-font-style-tt">0.255.1.01</span> — нет. В данной задаче произвольная четверка 8-битных чисел является корректным IP-адресом.</p><p>Поработав администратором, Поликарп узнал, что, зная IP-адрес, можно, используя маску подсети, получить адрес сети, которой принадлежит этот IP-адрес.</p><p><span class="tex-font-style-it">Маска подсети</span> — это IP-адрес, обладающий следующим свойством: если записать этот IP-адрес, как 32-битную строку, то он представим в виде «<span class="tex-font-style-tt">11...11000..000</span>». Другими словами, в маске подсети сначала идет один или более единичный бит, а затем один или более нулевой бит (всего битов 32). Например, IP-адрес <span class="tex-font-style-tt">2.0.0.0</span> не является корректной маской подсети, так как его 32-битная запись имеет вид <span class="tex-font-style-tt">00000010000000000000000000000000</span>.</p><p>Для получения адреса сети IP-адреса нужно выполнить операцию побитового «и» («<span class="tex-font-style-tt">and</span>») IP-адреса и маски подсети. Например, если маска подсети <span class="tex-font-style-tt">255.192.0.0</span>, а IP-адрес <span class="tex-font-style-tt">192.168.1.2</span>, то адрес сети равен <span class="tex-font-style-tt">192.128.0.0</span>. При побитовом «и» в записи результата бит равен 1 тогда и только тогда, когда у обоих операндов соответствующие биты единичные.</p><p>Теперь Поликарп хочет найти все сети, которым принадлежат его IP-адреса. К сожалению, Поликарп потерял маску подсети. К счастью, Поликарп запомнил, что его IP-адреса принадлежали ровно <span class="tex-span"><i>k</i></span> различным сетям. Помогите Поликарпу найти маску подсети, такую, что его IP-адреса будут принадлежать ровно <span class="tex-span"><i>k</i></span> различным сетям. Если таких масок несколько, найдите ту, в битовой записи которой наименьшее количество единиц. Если таких масок не существует, сообщите об этом.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>k</i></span> <span class="tex-span">(1 ≤ <i>k</i> ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup>)</span> — количество IP-адресов и сетей. В следующих <span class="tex-span"><i>n</i></span> строках записаны сами IP-адреса. Гарантируется, что все IP-адреса различны.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственной строке выведите IP-адрес маски подсети, в формате описанном в условии, если требуемая маска подсети существует. Иначе выведите <span class="tex-font-style-tt">-1</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5 3<br />0.0.0.1<br />0.1.1.2<br />0.0.2.1<br />0.1.1.0<br />0.0.2.3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>255.255.254.0</pre></div><div class="input"><div class="title">Входные данные</div><pre>5 2<br />0.0.0.1<br />0.1.1.2<br />0.0.2.1<br />0.1.1.0<br />0.0.2.3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>255.255.0.0</pre></div><div class="input"><div class="title">Входные данные</div><pre>2 1<br />255.0.0.1<br />0.0.0.2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Параллельное программирование</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>У Поликарпа есть компьютер с <span class="tex-span"><i>n</i></span> процессорами. Также в его компьютере есть <span class="tex-span"><i>n</i></span> ячеек памяти. Будем считать, что процессоры пронумерованы целыми числами от 1 до <span class="tex-span"><i>n</i></span> и что ячейки памяти последовательно пронумерованы целыми числами от 1 до <span class="tex-span"><i>n</i></span>.</p><p>Поликарпу нужно разработать модель параллельной программы, которая для каждой ячейки памяти с номером <span class="tex-span"><i>i</i></span> записывает в эту ячейку значение <span class="tex-span"><i>n</i> - <i>i</i></span>. Другими словами, для каждой ячейки требуется найти расстояние до ячейки <span class="tex-span"><i>n</i></span>.</p><p>Обозначим, записанное в <span class="tex-span"><i>i</i></span>-той ячейке значение как <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>. Изначально, <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub> = 1</span> <span class="tex-span">(1 ≤ <i>i</i> &lt; <i>n</i>)</span> и <span class="tex-span"><i>a</i><sub class="lower-index"><i>n</i></sub> = 0</span>. Будем считать, что в ячейку памяти номер <span class="tex-span"><i>i</i></span> может записывать значения только лишь процессор <span class="tex-span"><i>i</i></span>. Читать значение ячейки может любой процессор (несколько разных процессоров могут читать значение из ячейки одновременно).</p><p>Исполнение параллельной программы происходит в несколько шагов. На каждом шаге происходит выполнение <span class="tex-font-style-it">параллельной версии операции инкремента</span>. Выполнение параллельной операции инкремента происходит следующим образом:</p><p><ol> <li> Каждый процессор независимо от других выбирает некоторую ячейку памяти. Пусть процессор <span class="tex-span"><i>i</i></span> выбрал ячейку с номером <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> <span class="tex-span">(1 ≤ <i>c</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>)</span>. </li><li> Все процессоры <span class="tex-font-style-it">одновременно</span> выполняют операцию, <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub> = <i>a</i><sub class="lower-index"><i>i</i></sub> + <i>a</i><sub class="lower-index"><i>c</i><sub class="lower-index"><i>i</i></sub></sub></span>. </li></ol></p><p>Помогите Поликарпу разработать модель параллельной программы, которая выполняется ровно в <span class="tex-span"><i>k</i></span> шагов. Вычислите, какие операции нужно выполнить, чтобы после ровно <span class="tex-span"><i>k</i></span> шагов для всех <span class="tex-span"><i>i</i></span> значение <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> было равно <span class="tex-span"><i>n</i> - <i>i</i></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записаны через пробел два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>k</i></span> <span class="tex-span">(1 ≤ <i>n</i> ≤ 10<sup class="upper-index">4</sup>, 1 ≤ <i>k</i> ≤ 20)</span>.</p><p>Гарантируется, что при заданных <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>k</i></span> требуемая последовательность операций существует.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите ровно <span class="tex-span"><i>n</i>·<i>k</i></span> целых чисел в <span class="tex-span"><i>k</i></span> строках. В первой строке выведите номера <span class="tex-span"><i>c</i><sub class="lower-index">1</sub>, <i>c</i><sub class="lower-index">2</sub>, ..., <i>c</i><sub class="lower-index"><i>n</i></sub></span> <span class="tex-span">(1 ≤ <i>c</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i>)</span> для первой операции инкремента. Во второй — выведите номера для второй операции инкремента. В <span class="tex-span"><i>k</i></span>-ой — выведите номера для <span class="tex-span"><i>k</i></span>-ой операции инкремента.</p><p>В результате выведенных операций для любого <span class="tex-span"><i>i</i></span> значение <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> должно быть равно <span class="tex-span"><i>n</i> - <i>i</i></span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>1 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2 3 3<br />3 3 3<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Древесно-строковая задача</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p><span class="tex-font-style-it">Корневым деревом</span> называется неориентированный связный граф без циклов с выделенной вершиной, которая называется корнем дерева. Будем считать, что вершины корневого дерева из <span class="tex-span"><i>n</i></span> вершин пронумерованы от 1 до <span class="tex-span"><i>n</i></span>. В этой задаче корнем дерева будет вершина с номером 1.</p><p>Обозначим через <span class="tex-span"><i>d</i>(<i>v</i>, <i>u</i>)</span> длину кратчайшего по количеству ребер пути в дереве между вершинами <span class="tex-span"><i>v</i></span> и <span class="tex-span"><i>u</i></span>.</p><p><span class="tex-font-style-it">Родителем</span> вершины <span class="tex-span"><i>v</i></span> в корневом дереве с корнем в вершине <span class="tex-span"><i>r</i></span> <span class="tex-span">(<i>v</i> ≠ <i>r</i>)</span> называется вершина <span class="tex-span"><i>p</i><sub class="lower-index"><i>v</i></sub></span>, такая, что <span class="tex-span"><i>d</i>(<i>r</i>, <i>p</i><sub class="lower-index"><i>v</i></sub>) + 1 = <i>d</i>(<i>r</i>, <i>v</i>)</span> и <span class="tex-font-style-bf"><span class="tex-span"><i>d</i>(<i>p</i><sub class="lower-index"><i>v</i></sub>, <i>v</i>) = 1</span></span>. Например, на рисунке родителем вершины <span class="tex-span"><i>v</i> = 5</span> является вершина <span class="tex-span"><i>p</i><sub class="lower-index">5</sub> = 2</span>.</p><p>Как-то раз Поликарп раздобыл корневое дерево из <span class="tex-span"><i>n</i></span> вершин. Дерево было не совсем обычное — на его ребрах были написаны строки. Поликарп расположил дерево на плоскости так, что все ребра ведут сверху вниз при прохождении от родителя вершины к вершине (см. рисунок). Для каждого ребра, ведущего из вершины <span class="tex-span"><i>p</i><sub class="lower-index"><i>v</i></sub></span> в вершину <span class="tex-span"><i>v</i></span> <span class="tex-span">(1 &lt; <i>v</i> ≤ <i>n</i>)</span>, известна строка <span class="tex-span"><i>s</i><sub class="lower-index"><i>v</i></sub></span>, которая на нем написана. Все строки записаны на ребрах сверху вниз. Например, на рисунке <span class="tex-span"><i>s</i><sub class="lower-index">7</sub></span>=«<span class="tex-font-style-tt">ba</span>». Символы в строках пронумерованы от 0.</p><p><center> <img class="tex-graphics" src="http://codeforces.ru/renderer/7616b737453054ffe9fceead26e6535b509ef43e.png" />   <span class="tex-font-size-script">Пример дерева Поликарпа (соответствует примеру из условия)</span> </center></p><p><span class="tex-font-style-it">Позицией</span> в этом дереве Поликарп называет конкретную букву конкретной строки. Позиция записывается как пара целых чисел <span class="tex-span">(<i>v</i>, <i>x</i>)</span>, которая обозначает, что позицией является <span class="tex-span"><i>x</i></span>-ая буква строки <span class="tex-span"><i>s</i><sub class="lower-index"><i>v</i></sub></span> (<span class="tex-span">1 &lt; <i>v</i> ≤ <i>n</i></span>, <span class="tex-span">0 ≤ <i>x</i> &lt; |<i>s</i><sub class="lower-index"><i>v</i></sub>|</span>), где <span class="tex-span">|<i>s</i><sub class="lower-index"><i>v</i></sub>|</span> — длина строки <span class="tex-span"><i>s</i><sub class="lower-index"><i>v</i></sub></span>. Например, выделенные буквы — это позиции (<span class="tex-span">2, 1</span>) и (<span class="tex-span">3, 1</span>).</p><p>Рассмотрим пару позиций <span class="tex-span">(<i>v</i>, <i>x</i>)</span> и <span class="tex-span">(<i>u</i>, <i>y</i>)</span> в дереве Поликарпа, такую, что путь от первой позиции ко второй идет сверху вниз в дереве Поликарпа, нарисованном на плоскости. Будем считать, что пара этих позиций определяет строку <span class="tex-span"><i>z</i></span>. Строка <span class="tex-span"><i>z</i></span> состоит из всех букв на пути от <span class="tex-span">(<i>v</i>, <i>x</i>)</span> к <span class="tex-span">(<i>u</i>, <i>y</i>)</span>, записанных в порядке прохождения этого пути. Например, на рисунке выделенные позиции определяют строку «<span class="tex-font-style-tt">bacaba</span>».</p><p>У Поликарпа есть строка <span class="tex-span"><i>t</i></span>, он хочет узнать, сколько существует пар позиций, которые определяют строку <span class="tex-span"><i>t</i></span>. Обратите внимание, что путь от первой позиции ко второй в паре должен всюду вести вниз. Помогите ему с этой нелегкой древесно-строковой задачей!</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке задано целое число <span class="tex-span"><i>n</i></span> <span class="tex-span">(2 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup>)</span> — количество вершин дерева Поликарпа. В следующих <span class="tex-span"><i>n</i> - 1</span> строках заданы ребра дерева. В <span class="tex-span"><i>i</i></span>-ой из них записаны число <span class="tex-span"><i>p</i><sub class="lower-index"><i>i</i> + 1</sub></span> и строка <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i> + 1</sub></span> <span class="tex-span">(1 ≤ <i>p</i><sub class="lower-index"><i>i</i> + 1</sub> ≤ <i>n</i>; <i>p</i><sub class="lower-index"><i>i</i> + 1</sub> ≠ (<i>i</i> + 1))</span>. Строка <span class="tex-span"><i>s</i><sub class="lower-index"><i>i</i> + 1</sub></span> — непустая и состоит из строчных букв латинского алфавита. В последней строке записана строка <span class="tex-span"><i>t</i></span>. Строка <span class="tex-span"><i>t</i></span> состоит из строчных букв латинского алфавита, ее длина не менее 2.</p><p>Гарантируется, что входные данные содержат не более <span class="tex-span">3·10<sup class="upper-index">5</sup></span> букв латинского алфавита.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите единственное целое число — искомое количество.</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для чтения или записи 64-х битовых чисел на С++. Рекомендуется использовать потоки <span class="tex-font-style-tt">cin</span>, <span class="tex-font-style-tt">cout</span> или спецификатор <span class="tex-font-style-tt">%I64d</span></p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>7<br />1 ab<br />5 bacaba<br />1 abacaba<br />2 aca<br />5 ba<br />2 ba<br />aba<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>6<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>7<br />1 ab<br />5 bacaba<br />1 abacaba<br />2 aca<br />5 ba<br />2 ba<br />bacaba<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>4<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В первом тестовом примере строку «<span class="tex-font-style-tt">aba</span>» определяют пары позиций: (2, 0) и (5, 0); (5, 2) и (6, 1); (5, 2) и (3, 1); (4, 0) и (4, 2); (4, 4) и (4, 6); (3, 3) и (3, 5). </p><p>Обратите внимание, что эту строку не определяет пара позиций (7, 1) и (5, 0), потому как путь между ними не всегда идет вниз.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
