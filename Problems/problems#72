
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="1dcc0c8g586geh97cf8468d8g83aeab2"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="m9u6v2q1sosz"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='1dcc0c8g586geh97cf8468d8g83aeab2'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Unknown Language Round #2</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Гоштасп, Виштасп и Эйди</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Гоштасп хорошо программирует, и все в его школе это знают. Однажды его друг Виштасп попросил решить задачу:</p><p><span class="tex-font-style-it">Дано натуральное число <span class="tex-span"><i>n</i></span>, определите, является ли оно хорошим.</span></p><p>Натуральное число <span class="tex-span"><i>x</i></span> называется хорошим, если существует набор различных чисел <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, <i>a</i><sub class="lower-index">2</sub>, ..., <i>a</i><sub class="lower-index"><i>m</i></sub></span> такой, что <img align="middle" class="tex-formula" src="http://codeforces.ru/renderer/e87f6ed8dbb5ba5a37fce497d51dab80d56e0fc2.png" />. При этом каждое число из набора <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span> либо должно быть простым, либо должно равняться единице.</p><p>Виштасп предлагает Гоштаспу разделить с ним свое Эйди поровну, если он сможет решить задачу. Эйди — это деньги, которые дарят детям на Новруз их родители и другие родственники.</p><p>Помогите Гоштаспу решить задачу!</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано одно натуральное число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10000</span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если число не является хорошим, выведите <span class="tex-span">0</span>. Иначе выведите числа <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, ..., <i>a</i><sub class="lower-index"><i>m</i></sub></span>. Если существует несколько решений, выведите лексикографически <span class="tex-font-style-it">наибольшее</span> из них. Решения сравниваются как последовательности чисел, а не как строки.</p><p>Чтобы сравнить последовательности <span class="tex-span"><i>a</i><sub class="lower-index">1</sub>, ..., <i>a</i><sub class="lower-index"><i>m</i></sub></span> и <span class="tex-span"><i>b</i><sub class="lower-index">1</sub>, ..., <i>b</i><sub class="lower-index"><i>n</i></sub></span> найдите первый индекс <span class="tex-span"><i>i</i></span> такой, что <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub> ≠ <i>b</i><sub class="lower-index"><i>i</i></sub></span>. Если <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub> &lt; <i>b</i><sub class="lower-index"><i>i</i></sub></span>, то <span class="tex-span"><i>a</i></span> лексикографически меньше, а если <span class="tex-span"><i>b</i><sub class="lower-index"><i>i</i></sub> &lt; <i>a</i><sub class="lower-index"><i>i</i></sub></span>, то <span class="tex-span"><i>b</i></span> лексикографически меньше. Если <span class="tex-span"><i>m</i> ≠ <i>n</i></span>, добавьте (только для сравнения) нули в конец меньшей последовательности и выполните сравнение.</p><p>Количество элементов в последовательности (<span class="tex-span"><i>m</i></span>) минимизировать не требуется.</p><p>При выводе последовательности следуйте формату примеров.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>11<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>11=11<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>545<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>541+3+1=545<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Ini-файл</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>С помощью ini-файлов в Windows записываются настройки приложений. Каждая строка ini-файла либо определяет некоторое значение, либо начинает секцию. </p><p>Строка, определяющая значение, имеет вид &quot;<span class="tex-font-style-tt">key=value</span>&quot;, где <span class="tex-font-style-tt">key</span> — это название некоторого свойства, а <span class="tex-font-style-tt">value</span> — его значение. По обе стороны <span class="tex-font-style-tt">key</span> и <span class="tex-font-style-tt">value</span> могут быть пробелы, которые стоит игнорировать. </p><p>Строка, начинающая секцию, имеет вид &quot;<span class="tex-font-style-tt">[section]</span>&quot;. Эта строка обозначает, что все последующие строки вида &quot;<span class="tex-font-style-tt">key=value</span>&quot; определяют свойства для секции <span class="tex-font-style-tt">section</span>. Разумеется, следующая строка начала секции меняет текущую секцию. В строках этого вида тоже могут встречаться незначащие пробелы (до и после любой квадратной скобки).</p><p>Cтроки, у которых первый непробел является символом &quot;<span class="tex-font-style-tt">;</span>&quot;, следует игнорировать.</p><p>Ваша задача, написать программу, которая обработает заданный корректный ini-файл и выведет его в специальном виде: <ul> <li> сначала следует разместить строки вида &quot;<span class="tex-font-style-tt">key=value</span>&quot;, для которых секция не определена; </li><li> затем следует разместить все секции в лексикографическом (алфавитном) порядке их названий; </li><li> внутри каждого блока, описанного в двух предыдущих пуктах, строки вида &quot;<span class="tex-font-style-tt">key=value</span>&quot; следует упорядочить лексикографически по &quot;<span class="tex-font-style-tt">key</span>&quot;; </li><li> если существует более одной пары &quot;<span class="tex-font-style-tt">key=value</span>&quot; с одинаковым &quot;<span class="tex-font-style-tt">key</span>&quot; для одной секции (или с неопределенной секцией), то следует выводить только последнее вхождение (для порядка определенного входными данными); </li><li> все незначащие пробелы и переводы строк следует удалить. </li></ul></p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка содержит одно целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 510</span>) — количество строк в данном ini-файле.</p><p>Далее в <span class="tex-span"><i>n</i></span> строках описан корректный ini-файл. Значения <span class="tex-font-style-tt">section</span>, <span class="tex-font-style-tt">key</span> и <span class="tex-font-style-tt">value</span> состоят только из латинских букв, цифр и символов &quot;<span class="tex-font-style-tt">.</span>&quot; и &quot;<span class="tex-font-style-tt">-</span>&quot;.</p><p>Длины всех строк не превышают 255 символов и не меньше 1 символа, суммарная длина всех строк не превосходит 10000.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите заданный ini-файл в требуемом виде.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>11<br />a= 1<br />b=a<br />a = 2<br /> ; comment<br />[z]<br />1=2<br />[y]<br />2=3<br />[z]<br />2=1<br />[w]<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>a=2<br />b=a<br />[w]<br />[y]<br />2=3<br />[z]<br />1=2<br />2=1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Замечательные числа</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Натуральное число <span class="tex-span"><i>a</i></span> является делителем натурального числа <span class="tex-span"><i>b</i></span> тогда и только тогда, когда существует натуральное число <span class="tex-span"><i>c</i></span>, такое что <span class="tex-span"><i>a</i> × <i>c</i> = <i>b</i></span>. </p><p>Царь Астиаг называет натуральное число <span class="tex-font-style-it">замечательным</span>, если количество его четных делителей совпадает с количеством его нечетных делителей.</p><p>Например, у числа <span class="tex-span">3</span> всего два делителя <span class="tex-span">3</span> и <span class="tex-span">1</span>, оба — нечетные. Значит <span class="tex-span">3</span> — не замечательное число. Но, например, число <span class="tex-span">2</span> делится на <span class="tex-span">2</span> и на <span class="tex-span">1</span>. Один делитель четный, другой — нечетный, значит <span class="tex-span">2</span> — замечательное число.</p><p>Определите, является ли заданное натуральное число <span class="tex-span"><i>x</i></span> замечательным.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано одно натуральное число <span class="tex-span"><i>x</i></span> (<span class="tex-span">1 ≤ <i>x</i> ≤ 10<sup class="upper-index">3</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-font-style-tt">yes</span>, если число <span class="tex-span"><i>x</i></span> — замечательное. Иначе выведите <span class="tex-font-style-tt">no</span>. Регистр значения не имеет.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>yes<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>no<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Perse-script</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>7 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Два друга решили создать язык программирования, назвали они его Perse-script.</p><p>Важная часть языка — <span class="tex-font-style-it">строки</span>. Строки в Perse-script записываются в кавычках (<span class="tex-font-style-tt">&quot;</span>)</p><p>Например, <span class="tex-font-style-tt">&quot;Hello&quot;</span> — константная строка. Но <span class="tex-font-style-tt">Hello</span> — имя переменной или зарезервированное слово, которые мы не рассматриваем в этой задаче.</p><p>Perse-script — функциональный язык, в нем нет операторов. Например, чтобы сложить два числа нужно написать <span class="tex-font-style-tt">sum(a,b)</span>, а не <span class="tex-font-style-tt">a+b</span>.</p><p>В языке есть несколько команд для работы со строками: <ul> <li> <span class="tex-font-style-tt">concat(x,y)</span> возвращает конкатенацию («склейку») двух строк <span class="tex-span"><i>x</i></span> и <span class="tex-span"><i>y</i></span>. Например, <span class="tex-font-style-tt">concat(&quot;Hello&quot;,&quot;World&quot;)</span> возвращает <span class="tex-font-style-tt">&quot;HelloWorld&quot;</span>. </li><li> <span class="tex-font-style-tt">reverse(x)</span> возвращает перевернутую строку <span class="tex-span"><i>x</i></span>. Например, <span class="tex-font-style-tt">reverse(&quot;Hello&quot;)</span> возвращает <span class="tex-font-style-tt">&quot;olleH&quot;</span>. </li><li> <span class="tex-font-style-tt">substr(x,a,b)</span> принимает строку <span class="tex-span"><i>x</i></span> и два целых числа <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> (<span class="tex-span">1 ≤ <i>a</i> ≤ <i>b</i> ≤ <i>n</i></span>, где <span class="tex-span"><i>n</i></span> — длина строки <span class="tex-span"><i>x</i></span>). Возвращает подстроку <span class="tex-span"><i>x</i></span> с индекса <span class="tex-span"><i>a</i></span> по индекс <span class="tex-span"><i>b</i></span>, включительно. Например, <span class="tex-font-style-tt">substr(&quot;Hello&quot;,2,4)</span> возвращает <span class="tex-font-style-tt">&quot;ell&quot;</span>. </li><li> <span class="tex-font-style-tt">substr(x,a,b,c)</span> — другая версия substr, которая получает подстроку с шагом <span class="tex-span"><i>c</i></span>. <span class="tex-span"><i>c</i></span> всегда <span class="tex-font-style-it">положительно</span>. Например, <span class="tex-font-style-tt">substr(&quot;HelloWorld&quot;,1,10,2)</span> возвращает <span class="tex-font-style-tt">&quot;Hlool&quot;</span>. Более точно: изначально ответ пуст. Эта функция добавляет в ответ <span class="tex-span"><i>a</i></span>-ый символ, а затем каждый <span class="tex-span"><i>c</i></span>-ый считая от него, и так до <span class="tex-span"><i>b</i></span>.</li></ul></p><p>Вы собираетесь реализовать работу со строками в Perse-script. Дано выражение, выведите его результат. Гарантируется, что все функции в качестве аргументов содержат только константные строки, записанные в кавычках, и перечисленные выше строковые функции.</p><p>Названия функций Perse-script регистронезависимы. Так, чтобы вызвать <span class="tex-font-style-tt">substr</span> можно написать <span class="tex-font-style-tt">SUBsTr()</span>. Но нельзя писать <span class="tex-font-style-tt">&quot;hElLo&quot;</span> вместо <span class="tex-font-style-tt">&quot;Hello&quot;</span>.</p><p>Для дальнейшего разъяснения смотрите примеры.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка содержит корректное выражение. Гарантируется, что его длина не превосходит <span class="tex-span">10<sup class="upper-index">3</sup></span>, и все целые числа не превосходят 100 по модулю. Заданная строка не пуста.</p><p>Все константные строки состоят только из больших и маленьких латинских букв.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В единственной строке выведите результат. Гарантируется, что ответ существует, и его длина не превосходит <span class="tex-span">10<sup class="upper-index">4</sup></span>. Гарантируется, что ответ не является пустой строкой.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>&quot;HelloWorld&quot;<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>&quot;HelloWorld&quot;<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>REVerse(substr(&quot;helloworld&quot;,1,5))<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>&quot;olleh&quot;<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>conCAT(rEveRSE(&quot;olleh&quot;),&quot;world&quot;)<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>&quot;helloworld&quot;<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>reversE(concAT(substr(&quot;hello&quot;,1,2),sUbstr(&quot;world&quot;,1,5,1)))<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>&quot;dlroweh&quot;<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>suBstr(&quot;Noruz&quot;,1,4,2)<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>&quot;Nr&quot;<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Али идет за покупками</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>5 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Али Кучулу собирается пойти за подарками к Наврузу, древнему персидскому празднику, иранскому новому году.</p><p>Когда Али вошел в магазин, он сразу понял, что когда-то хозяин магазина тоже был программистом. Но программистом много денег не заработаешь, и ему пришлось сменить работу. Хозяин сказал Али, что тот может взять бесплатно что угодно, если ответит на простой вопрос за 10 секунд. Правда, чтобы увидеть вопрос, нужно было заплатить 3 томана.</p><p>Али сразу же согласился, и хозяин магазина дал ему листок бумаги, на котором было задание. Оно было очень простым:</p><p><span class="tex-font-style-it">Пусть строка <span class="tex-span"><i>A</i></span> — <span class="tex-font-style-tt">ababababababab</span>. Какая непустая подстрока <span class="tex-span"><i>A</i></span> встречается в ней чаще всего?</span></p><p>Али тут же ответил: <span class="tex-font-style-tt">a</span>. Но хозяин сказал, что это неправильно, и попросил его дочитать условие до конца:</p><p><span class="tex-font-style-it">Если есть несколько таких подстрок, выберите самую длинную из них. Если их все равно несколько, выберите ту из них, что идет позже других в алфавитном порядке.</span></p><p>Правильный ответ был <span class="tex-font-style-tt">ab</span>.</p><p>Сейчас Али просит вас решить эту задачу для других строк. А у вас есть для этого компьютер и странный язык.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данных записана строка <span class="tex-span"><i>A</i></span>. Эта строка непуста, состоит из маленьких латинских букв и содержит не более <span class="tex-span">30</span> символов.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первую строку выведите ответ.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>abab<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>ab<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>abcd<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>abcd<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F. Нефть</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Доктор Мосаддык хочет выкопать несколько нефтяных скважин в Персидском заливе. Залив представляет собой прямоугольное поле размера <span class="tex-span"><i>n</i> × <i>m</i></span>. Каждая клетка либо содержит нефть, либо пуста.</p><p>Две клетки считаются соседними, если у них есть общая сторона. Путь — это такая последовательность клеток <span class="tex-span"><i>c</i><sub class="lower-index">1</sub>, <i>c</i><sub class="lower-index">2</sub>, ..., <i>c</i><sub class="lower-index"><i>x</i></sub></span>, что каждая из них содержит нефть, и для каждого <span class="tex-span"><i>i</i></span>: клетка <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i></sub></span> имеет общую сторону с <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i> - 1</sub></span> и <span class="tex-span"><i>c</i><sub class="lower-index"><i>i</i> + 1</sub></span> (если они существуют). Две клетки называются <span class="tex-font-style-it">соединенными</span>, если между ними существует путь. Если выкопать скважину в определенной клетке, то можно добывать нефть из всех клеток, <span class="tex-font-style-it">соединенных</span> с данной. Выкапывать скважины в пустых клетках не разрешается.</p><p>Доктор Мосаддык также знает, что в Персидском заливе пустые клетки образуют целые ряды и строки. То есть если какая-то клетка пуста, то столбец и/или строка, содержащие ее, тоже пусты.</p><p>Помогите доктору Мосаддыку выяснить, сколько скважин нужно выкопать, чтобы выкачать всю нефть в заливе.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке через пробел записаны два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 100</span>).</p><p>Во второй строке записано целое число <span class="tex-span"><i>t</i></span> (<span class="tex-span">0 ≤ <i>t</i> ≤ <i>n</i></span>) — количество пустых строк. Далее следует <span class="tex-span"><i>t</i></span> различных целых чисел из диапазона <span class="tex-span">[1, <i>n</i>]</span> — номера пустых строк.</p><p>В третьей строке записано целое число <span class="tex-span"><i>s</i></span> (<span class="tex-span">0 ≤ <i>s</i> ≤ <i>m</i></span>) — количество пустых столбцов. Далее следует <span class="tex-span"><i>s</i></span> различных целых чисел из диапазона <span class="tex-span">[1, <i>m</i>]</span> — номера пустых столбцов.</p><p>Строки нумеруются от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span> (сверху вниз), а столбцы нумеруются от <span class="tex-span">1</span> до <span class="tex-span"><i>m</i></span> (слева направо).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число, минимальной количество скважин, которое должен выкопать доктор Мосаддык, чтобы выкачать всю нефть.</p><p>Это количество совпадает с количеством областей, на которые распадается прямоугольник после удаления всех пустых строк и столбцов.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2 3<br />1 2<br />1 2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>4 4<br />2 2 3<br />3 2 3 1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 3<br />1 1<br />0<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">G. Проверка Фибоначчи</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Царь Камбис любит числа Фибоначчи. Напомним, что числа Фибоначчи определяются следующим образом: <span class="tex-span"><i>f</i><sub class="lower-index">0</sub> = <i>f</i><sub class="lower-index">1</sub> = 1</span>, а для любого <span class="tex-span"><i>i</i> ≥ 2</span>: <span class="tex-span"><i>f</i><sub class="lower-index"><i>i</i></sub> = <i>f</i><sub class="lower-index"><i>i</i> - 1</sub> + <i>f</i><sub class="lower-index"><i>i</i> - 2</sub></span>.</p><p>Сегодня царь решил собрать новую армию, с количеством солдат, равным <span class="tex-span"><i>n</i></span>-ому числу Фибоначчи. Помогите ему вычислить это число.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке записано одно целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 20</span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число — <span class="tex-span"><i>n</i></span>-ое число Фибоначчи.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>1<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>1<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">H. Переворот</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>4 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>14ое марта — день числа <span class="tex-span">π = 3.1415926..</span>.</p><p>В честь этого дня организация Goofy Nephews Unity (GNU) хочет выпустить самую быструю математическую программу в 1:59:26 утра.</p><p>Сейчас 1:11:11 утра, а команда еще даже не запускала свою программу. Из-за нехватки времени они хотят проверить свою программу с помощью нескольких запросов. Они наняли Ормизда, одного из лучших программистов в мире, и поручили ему написать проверяющую программу. Но у Ормизда есть дела поважнее, поэтому он просит вас написать небольшую часть проверочной программы. Ваша задача — написать программу, которая переворачивает числа.</p><p>Переворачивать числа просто. Например, после переворота <span class="tex-span">1234</span> получается <span class="tex-span">4321</span>.</p><p>Учтите, что если число отрицательное, после переворота оно остается отрицательным. Например, после переворота <span class="tex-span"> - 123</span> превращается в <span class="tex-span"> - 321</span>.</p><p>Также вы должны удалять все лидирующие нули до и после переворота.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано целое число <span class="tex-span"><i>n</i></span>. Оно строго меньше <span class="tex-span">10<sup class="upper-index">1000</sup></span> по модулю. Это число может содержать лидирующие нули — в этом случае их требуется опускать. Гарантируется, что во входных данных меньше 10001 символа.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите одно число — результат переворота заданного числа. Не выводите лидирующие нули.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>23<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>32<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>-032<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-23<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>01234560<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>654321<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">I. Бесполезные числа</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Неотрицательное целое число <span class="tex-span"><i>a</i></span> является делителем неотрицательного целого числа <span class="tex-span"><i>b</i></span> тогда и только тогда, когда существует <span class="tex-font-style-bf">положительное</span> целое число <span class="tex-span"><i>c</i></span>, такое что <span class="tex-span"><i>a</i> × <i>c</i> = <i>b</i></span>.</p><p>Генерал Сурен разделяет неотрицательные целые числа на 3 группы:</p><p><ul> <li> Число <span class="tex-font-style-it">счастливое</span> (<span class="tex-font-style-tt">happy</span>), если оно делится хотя бы на одну из своих цифр, но не на любую. </li><li> Число <span class="tex-font-style-it">еще счастливее</span> (<span class="tex-font-style-tt">happier</span>), если оно делится на любую свою цифру. </li><li> Число <span class="tex-font-style-it">грустное</span> (<span class="tex-font-style-tt">upset</span>), если оно не делится ни на одну свою цифру. </li></ul></p><p>Генерал Сурен просит вас определить тип заданного числа.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано одно неотрицательное число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">8</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите маленькими буквами тип числа: <span class="tex-font-style-tt">happy</span>, <span class="tex-font-style-tt">happier</span> или <span class="tex-font-style-tt">upset</span>.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>99<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>happier<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>29994<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>happy<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>23<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>upset<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Во втором тесте: <span class="tex-span">29994</span> делится только на <span class="tex-span">2</span>.</p><p>В третьем тесте: <span class="tex-span">23</span> — простое число.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
