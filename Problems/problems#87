
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="87h0b8fb4bd0e051c6648cga0bafa9gd"/>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90"/>
    <meta property="fb:admins" content="100001352546622" />
    <meta property="og:image" content="http://worker.codeforces.ru/static/images/codeforces-vk-square-ru.png"/>
    <meta property="og:title" content="Задачи - Codeforces"/>
    <meta property="og:site_name" content="Codeforces"/>
    
    <meta name="cc" content="1l0yez8nc4qkb"/>
    
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2" />
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов" />
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup" />
    <meta name="robots" content="index, follow" />

    <link href="http://worker.codeforces.ru/static/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Cuprum&subset=latin,cyrillic' rel='stylesheet' type='text/css'>

    <HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<!--CombineResourcesFilter-->
    
<LINK href="http://worker.codeforces.ru/static/favicon.png" rel="shortcut icon" type="image/png">
    
<LINK href="http://worker.codeforces.ru/static/css/prettify.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/clear.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/style.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/ttypography.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/problem-statement.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/second-level-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/roundbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/datatable.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/topic.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/table-form.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.jgrowl.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/facebox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.wysiwyg.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.autocomplete.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/codeforces.datepick.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/colorbox.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/jquery.drafts.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/skins/markitup/style.css" rel="stylesheet" type="text/css">
    
<LINK href="http://worker.codeforces.ru/static/markitup/sets/markdown/style.css" rel="stylesheet" type="text/css">

    
<SCRIPT charset="utf-8" src="//yandex.st/share/share.js" type="text/javascript"></SCRIPT>
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/sidebar-menu.css" rel="stylesheet" type="text/css">
    
<LINK charset="utf-8" href="http://worker.codeforces.ru/static/css/community.css" rel="stylesheet" type="text/css">

    <!--[if IE]>
        <style>
            #sidebar {
                padding-left: 1em;
                margin: 1em 1em 1em 0;
            }
        </style>
    <![endif]-->
    
    
<SCRIPT src="http://worker.codeforces.ru/static/js/prettify/prettify.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery-1.8.3.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/sockjs-0.2.1.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/vertxbus-1.2.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.easing.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.lavalamp.min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.jgrowl.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/facebox.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.wysiwyg.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.colorpicker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.table.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.image.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/controls/wysiwyg.link.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.autocomplete.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.datepick.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ie6blocker.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.colorbox-min.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.ba-bbq.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/jquery.drafts.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/js/codeforces.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/jquery.markitup.js" type="text/javascript"></SCRIPT>
    <SCRIPT src="http://worker.codeforces.ru/static/markitup/sets/markdown/set.js" type="text/javascript"></SCRIPT>
    <!--/CombineResourcesFilter-->
</HEAD>
</HTML>

        <script type="text/javascript" src="http://worker.codeforces.ru/static/js/jquery.datepick-ru.js"></script>
        <script src="http://vk.com/js/api/openapi.js" type="text/javascript"></script>
</head>
<body><span style='display:none;' class='csrf-token' data-csrf='87h0b8fb4bd0e051c6648cga0bafa9gd'>&nbsp;</span>
<!-- Codeforces javascripts. -->
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>

<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>

    <script type="text/javascript">
        $(document).ready(function() {
    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    $(".second-level-menu-list").lavaLamp({
        fx: "backout",
        speed: 1000
    });


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();


        });
    </script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<div id="body">
<div style="width: 950px; margin: 0 auto;">
    <div id="header" style="position:relative;">
        <div style="float:left;">
                <a href="/"><img src="http://worker.codeforces.ru/static/images/codeforces-logo-with-upper-beta.png"/></a>
                        <div style="position:absolute;left:97px;top:40px;">
                            <a href="http://vk.com" class="logo-href">При поддержке <img
                                    style="position:relative;top:5px;" src="http://worker.codeforces.ru/static/images/vkontakte-tiny-ru.png"/></a>
                        </div>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="?locale=en"><img src="http://worker.codeforces.ru/static/images/flags/24/gb.png" title="In English" alt="In English"/></a>
                <a href="?locale=ru"><img src="http://worker.codeforces.ru/static/images/flags/24/ru.png" title="По-русски" alt="По-русски"/></a>
            </div>
        </div>
        <br style="clear: both;"/>
    </div>

    <div style="text-align: center;font-size: 18px;margin-bottom: 0.5em;"
         class="caption">Codeforces Beta Round #73 (Div. 1 Only)</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Поезда</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вася живет посередине Программистской ветки метро. У него есть две девушки: Даша и Маша, живущие на разных концах ветки, каждая не ведающая о существовании другой.</p><p>Когда у Васи появляется свободное время, он едет к одной из своих девушек. Он спускается в метро в некоторый момент времени, ждет первый поезд и едет на нем до конца ветки к соответствующей девушке. Однако поезда ходят с разной частотой: в Дашином направлении станцию проезжает один поезд в <span class="tex-span"><i>a</i></span> минут, а в Машином — один поезд в <span class="tex-span"><i>b</i></span> минут. В случае, если поезда подошли одновременно, Вася едет в направлении с меньшей частотой хождения поездов, то есть к той девушке, в чью сторону поезда ходят реже (см. пояснение к третьему примеру).</p><p>Известно, что поезда начинают свое хождение одновременно до появления Васи. То есть расписание поездов таково, что существует момент времени, когда два поезда приезжают одновременно.</p><p>Помогите Васе посчитать, к какой девушке он будет попадать чаще.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано два целых числа <span class="tex-span"><i>a</i></span> и <span class="tex-span"><i>b</i></span> (<span class="tex-span"><i>a</i> ≠ <i>b</i>, 1 ≤ <i>a</i>, <i>b</i> ≤ 10<sup class="upper-index">6</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите «<span class="tex-font-style-tt">Dasha</span>», если Вася будет чаще попадать к Даше, «<span class="tex-font-style-tt">Masha</span>», если к Маше, и «<span class="tex-font-style-tt">Equal</span>», если одинаково часто к обеим девушкам.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3 7<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>Dasha<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>5 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>Masha<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>2 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>Equal<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Разберем третий пример.</p><p>Пусть поезда начали свое хождение в нулевой момент времени. Понятно, что моменты прибытия поездов будут периодичны с периодом 6. Поэтому достаточно показать, что спускаясь в метро в момент времени внутри полуинтервала <span class="tex-span">(0, 6]</span>, он будет попадать к обеим девушкам одинаково часто.</p><p>Если он спустился в момент от 0 до 2, он уезжает к Даше на поезде, прибывающем ко второй минуте.</p><p>Если он спустился в момент от 2 до 3, он уезжает к Маше на поезде, прибывающем к третьей минуте.</p><p>Если он спустился в момент от 3 до 4, он уезжает к Даше на поезде, прибываюшем к четвертой минуте.</p><p>Если он спустился в момент от 4 до 6, то он дожидается прибытия обоих поездов к шестой минуте и уезжает к Маше, потому что в ее направлении поезда ходят реже.</p><p>Суммарно на Дашу и Машу приходится поровну — по три минуты, значит к обеим девушкам он будет попадать одинаково часто.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Вася и Типы</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Программист Вася изучает новый язык программирования &amp;K*. Язык &amp;K* по своему синтаксису напоминает языки семейства C, однако он гораздо более мощный, и поэтому правила реальных C-подобных языков к нему не применимы. Для полного понимания условия внимательно прочитайте описание языка ниже, и следуйте ему, а не аналогичным правилам в реальных языках программирования. </p><p>В &amp;K* есть очень мощная технология указателей — к имеющемуся типу <span class="tex-span"><i>X</i></span> можно приписать звездочку после него и получить тип <span class="tex-span"><i>X</i> * </span>. Это называется операцией взятия указателя. А есть противоположная операция — к любому типу <span class="tex-span"><i>X</i></span>, являющемуся указателем, можно приписать слева амперсанд и получить тип <span class="tex-span">&amp;<i>X</i></span>, на который ссылается <span class="tex-span"><i>X</i></span>. Это называется операцией разыменовывания.</p><p>В языке &amp;K* есть только два базовых типа данных — <span class="tex-font-style-tt">void</span> и <span class="tex-font-style-tt">errtype</span>. Также в этом языке есть операторы <span class="tex-font-style-tt">typedef</span> и <span class="tex-font-style-tt">typeof</span>.</p><p><ul></ul></p><p><li> Оператор &quot;<span class="tex-font-style-tt">typedef <span class="tex-span"><i>A</i></span> <span class="tex-span"><i>B</i></span></span>&quot; определяет новый тип данных <span class="tex-span"><i>B</i></span>, эквивалентный типу <span class="tex-span"><i>A</i></span>. В <span class="tex-span"><i>A</i></span> могут быть звездочки и амперсанды, а в <span class="tex-span"><i>B</i></span> — не могут. Например, оператор <span class="tex-font-style-tt">typedef void** ptptvoid</span> создаст новый тип <span class="tex-font-style-tt">ptptvoid</span>, который может использоваться в качестве <span class="tex-font-style-tt">void**</span>.</li></p><p><li> Оператор &quot;<span class="tex-font-style-tt">typeof <span class="tex-span"><i>A</i></span></span>&quot; возвращает тип <span class="tex-span"><i>A</i></span>, приведённый к <span class="tex-font-style-tt">void</span>, т. е. возвращает эквивалентный ему тип <span class="tex-font-style-tt">void**...*</span> с необходимым количеством звёздочек (возможно и нулевым). То есть после определения типа <span class="tex-font-style-tt">ptptvoid</span>, как показано выше, оператор <span class="tex-font-style-tt">typeof ptptvoid</span> вернёт <span class="tex-font-style-tt">void**</span>.</li></p><p>Попытка разыменовать тип <span class="tex-font-style-tt">void</span> приводит к ошибке: особому типу данных <span class="tex-font-style-tt">errtype</span>. Для <span class="tex-font-style-tt">errtype</span> верно следующее соотношение: <span class="tex-font-style-tt">errtype*</span><span class="tex-span"> = </span><span class="tex-font-style-tt">&amp;errtype</span><span class="tex-span"> = </span><span class="tex-font-style-tt">errtype</span>. Попытка использовать не объявленный ранее тип данных так же приведет к типу <span class="tex-font-style-tt">errtype</span>.</p><p>С помощью <span class="tex-font-style-tt">typedef</span> можно определить один тип несколько раз. Из всех определений силу имеет только последнее. Однако все типы, которые были определены с его использованием ранее, не меняются.</p><p>Заметим также, что операция разыменовывания имеет меньший приоритет, чем операция взятия указателя, иными словами <span class="tex-span">&amp;<i>T</i> * </span> всегда равно <span class="tex-span"><i>T</i></span>.</p><p>Учтите, что операторы выполняются последовательно, один за другим. Пусть у нас есть два оператора &quot;<span class="tex-font-style-tt">typedef &amp;void a</span>&quot; и &quot;<span class="tex-font-style-tt">typedef a* b</span>&quot;. Сначала <span class="tex-font-style-tt">a</span> принимает значение <span class="tex-font-style-tt">errtype</span>, а затем <span class="tex-font-style-tt">b</span> принимает значение <span class="tex-font-style-tt">errtype* = errtype</span>, <span class="tex-font-style-bf">но не</span> <span class="tex-font-style-tt">&amp;void* = void</span> (см. пример 2).</p><p>Вася еще не до конца понимает эту мощную технологию, поэтому он попросил вас помочь в ней разобраться. Напишите программу, которая обрабатывает эти операторы и операции.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке находится целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 100</span>) — количество операторов. Далее идет <span class="tex-span"><i>n</i></span> строк с операторами. Каждый оператор имеет один из двух видов: либо &quot;<span class="tex-font-style-tt">typedef <span class="tex-span"><i>A</i></span> <span class="tex-span"><i>B</i></span></span>&quot;, либо &quot;<span class="tex-font-style-tt">typeof <span class="tex-span"><i>A</i></span></span>&quot;. В первом случае тип <span class="tex-span"><i>B</i></span> отличается от типов <span class="tex-font-style-tt">void</span> и <span class="tex-font-style-tt">errtype</span>, а так же не содержит звездочек и амперсандов.</p><p>Все названия типов данных — непустые строки из не более чем 20 строчных латинских букв. Количество звездочек и амперсандов по отдельности при одном типе в любом операторе не превышает 10, однако при приведении некоторых типов к <span class="tex-font-style-tt">void</span> c несколькими звездочками, их количество может превысить 10.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>На каждый оператор <span class="tex-font-style-tt">typeof</span> выведите в отдельной строке ответ на этот оператор — тип, который вернул данный оператор.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>5<br />typedef void* ptv<br />typeof ptv<br />typedef &amp;&amp;ptv node<br />typeof node<br />typeof &amp;ptv<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>void*<br />errtype<br />void<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>17<br />typedef void* b<br />typedef b* c<br />typeof b<br />typeof c<br />typedef &amp;b b<br />typeof b<br />typeof c<br />typedef &amp;&amp;b* c<br />typeof c<br />typedef &amp;b* c<br />typeof c<br />typedef &amp;void b<br />typeof b<br />typedef b******* c<br />typeof c<br />typedef &amp;&amp;b* c<br />typeof c<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>void*<br />void**<br />void<br />void**<br />errtype<br />void<br />errtype<br />errtype<br />errtype<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Разберем второй пример.</p><p>После первых двух запросов <span class="tex-font-style-tt">typedef</span> тип <span class="tex-font-style-tt">b</span> эквивалентен <span class="tex-font-style-tt">void*</span>, а <span class="tex-font-style-tt">с</span> — <span class="tex-font-style-tt">void**</span>.</p><p>Следующий запрос <span class="tex-font-style-tt">typedef</span> переопределяет <span class="tex-font-style-tt">b</span> — теперь он равен <span class="tex-font-style-tt">&amp;b = &amp;void* = void</span>. Тип <span class="tex-font-style-tt">с</span> при этом не меняется.</p><p>После чего тип <span class="tex-font-style-tt">с</span> определяется как <span class="tex-font-style-tt">&amp;&amp;b* = &amp;&amp;void* = &amp;void = errtype</span>. На тип <span class="tex-font-style-tt">b</span> это никак не влияет, поэтому следующий <span class="tex-font-style-tt">typedef</span> определяет <span class="tex-font-style-tt">c</span>, как <span class="tex-font-style-tt">&amp;void* = void</span>.</p><p>Далее тип <span class="tex-font-style-tt">b</span> снова переопределяется как <span class="tex-font-style-tt">&amp;void = errtype</span>. </p><p>Отметим, что тип <span class="tex-font-style-tt">c</span> в следующем запросе определяется именно как <span class="tex-font-style-tt">errtype******* = errtype</span>, а не <span class="tex-font-style-tt">&amp;void******* = void******</span>. Тоже самое происходит и в последнем <span class="tex-font-style-tt">typedef</span>.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Интересная игра</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Два лучших друга Сережа и Гена играют в игру.</p><p>Изначально на столе находится одна кучка из <span class="tex-span"><i>n</i></span> камней. За один ход нужно взять одну кучку и разбить ее на произвольное число кучек размерами <span class="tex-span"><i>a</i><sub class="lower-index">1</sub> &gt; <i>a</i><sub class="lower-index">2</sub> &gt; ... &gt; <i>a</i><sub class="lower-index"><i>k</i></sub> &gt; 0</span> камней так, что <span class="tex-span"><i>a</i><sub class="lower-index">1</sub> - <i>a</i><sub class="lower-index">2</sub> = <i>a</i><sub class="lower-index">2</sub> - <i>a</i><sub class="lower-index">3</sub> = ... = <i>a</i><sub class="lower-index"><i>k</i> - 1</sub> - <i>a</i><sub class="lower-index"><i>k</i></sub> = 1</span>. Естественно, количество кучек <span class="tex-span"><i>k</i></span> должно быть не меньше двух. </p><p>Друзья делают ходы по очереди. Проигрывает тот, кто не может сделать ход. Начинает Сережа. Кто выиграет при оптимальной игре обоих?</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке записано одно целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если выигрывает Сережа, выведите <span class="tex-span"><i>k</i></span> — минимальное число кучек, на которое он может разбить исходную первым ходом при выигрышной стратегии. </p><p>Если выигрывает Гена, выведите «-1» (без кавычек).</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>6<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>-1<br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>100<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>8<br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 4em;page-break-after: always;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Красивая дорога</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Давным давно где-то в Азии в одной стране шли междоусобные войны.</p><p>Каждый из <span class="tex-span"><i>n</i></span> городов хотел захватить власть, поэтому иногда один город собирал армию и отправлял ее в поход против другого города.</p><p>Прокладывание дорог было делом трудным, поэтому их в стране было мало, а именно <span class="tex-span"><i>n</i> - 1</span>. Также из любого города до любого другого можно было добраться по этим дорогам.</p><p>Даже во время войны жители Востока остаются людьми духовно богатыми и ценящими красоту природы. И, дабы оставить на века память о своем великом походе, на дороге, на которой в пути армия провела больше всего времени, сажали одно красивое дерево. Жители Востока любят природу, поэтому если таких дорог было несколько, то по одному дереву сажалось на каждой.</p><p>Недавно, когда были обнаружены летописи той войны, выяснилось, что каждый город напал на каждый ровно по одному разу. Всего было ровно <span class="tex-span"><i>n</i>(<i>n</i> - 1)</span> походов. Всем стало интересно, какая дорога после тех войн стала самой красивой, то есть на какой дороге посадили больше всего красивых деревьев.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">2 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество городов. Следующие <span class="tex-span"><i>n</i> - 1</span> строк содержат по три целых числа: номера городов <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub></span> (<span class="tex-span">1 ≤ <i>a</i><sub class="lower-index"><i>i</i></sub>, <i>b</i><sub class="lower-index"><i>i</i></sub> ≤ <i>n</i></span>), соединяемых <span class="tex-span"><i>i</i></span>-ой дорогой и количество дней <span class="tex-span"><i>d</i><sub class="lower-index"><i>i</i></sub></span>, затрачиваемое армией на переход по ней (<span class="tex-span">1 ≤ <i>d</i><sub class="lower-index"><i>i</i></sub> ≤ 10<sup class="upper-index">9</sup></span>). Длины некоторых дорог могут совпадать.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В первой строке выведите два числа — количество красивых деревьев на самой красивой дороге и количество самых красивых дорог. Во второй строке выведите список самых красивых дорог, в порядке возрастания номеров. Дороги пронумерованы от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i> - 1</span> в том порядке, в котором они даны во входных данных.</p><p>Пожалуйста, не используйте спецификатор <span class="tex-font-style-tt">%lld</span> для записи 64-х битовых чисел на С++. Рекомендуется использовать поток <span class="tex-font-style-tt">cout</span> (также вы можете использовать спецификатор <span class="tex-font-style-tt">%I64d</span>).</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>2<br />2 1 5<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>2 1<br />1 <br /></pre></div><div class="input"><div class="title">Входные данные</div><pre>6<br />1 2 1<br />1 3 5<br />3 4 2<br />3 5 3<br />3 6 4<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>16 1<br />2 <br /></pre></div></div></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>
        <div
                    style="margin-bottom: 2em;"
        >

<div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Идол Могоху-Ри</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>3 seconds</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 megabytes</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Давным давно где-то в глубине Америки существовало могущественное племя с великим вождем Пиннивухом. Однажды это племя захватило три города Майя. Пиннивух задумался: необходимо как-то контролировать покоренные территории. Для этого он обратился к жрецам верховного бога Могоху-Ри за помощью. </p><p>Жрецы донесли до него волю бога: для контроля этих трех городов необходимо поставить идол Могоху-Ри, создающий религиозное поле над городами. Однако этот идол настолько могущественный, что будучи неуравновешенным тремя жертвенными алтарями, расположенными по одному в каждом городе, он может запросто свести всех людей в округе с ума. Для уравновешивания идола алтари нужно поставить таким образом, чтобы центр масс системы из этих трех точек совпадал с идолом. При подсчете центра масс считается что все алтари имеют одинаковую массу.</p><p>Теперь Пиннивух размышляет: куда же поставить идол. У него есть список возвышенностей, пригодных для установки идола. Помогите ему определить, на какие из них можно поставить идол без риска выжечь мозги населению городов религиозным полем.</p><p>Каждый город имеет форму выпуклого многоугольника, никакие три вершины которого не лежат на одной прямой. Города могут пересекаться. Каждый алтарь должен прикрепляться к своему городу особым обрядом, причем он обязан находиться на его территории (возможно на границе). Таким образом, на территории города может быть несколько алтарей, но к нему будет относиться ровно один из них. Алтари, идол и возвышенности являются точками на плоскости, некоторые из которых могут совпадать.</p><p>Возвышенности рассматриваются независимо друг от друга, расположение алтарей для разных возвышенностей может быть разным.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Сначала идут разделенные пустыми строками описания трех городов в следующем формате:</p><p>В первой строке идет целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">3 ≤ <i>n</i> ≤ 5·10<sup class="upper-index">4</sup></span>) — количество вершин многоугольника. Следующие <span class="tex-span"><i>n</i></span> строк содержат по два целых числа <span class="tex-span"><i>x</i><sub class="lower-index"><i>i</i></sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index"><i>i</i></sub></span> — координаты <span class="tex-span"><i>i</i></span>-ой вершины многоугольника в порядке обхода против часовой стрелки.</p><p>После описания городов идет целое число <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>m</i> ≤ 10<sup class="upper-index">5</sup></span>) — количество возвышенностей. Следующие <span class="tex-span"><i>m</i></span> строк содержат по два целых числа <span class="tex-span"><i>x</i><sub class="lower-index"><i>j</i></sub></span>, <span class="tex-span"><i>y</i><sub class="lower-index"><i>j</i></sub></span> — координаты <span class="tex-span"><i>j</i></span>-ого холма. </p><p>Все координаты во входных данных не превосходят <span class="tex-span">5·10<sup class="upper-index">8</sup></span> по модулю.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите для каждой возвышенности на отдельной строке «<span class="tex-font-style-tt">YES</span>» (без кавычек) или «<span class="tex-font-style-tt">NO</span>» (без кавычек), в зависимости от того, можно ли поставить три жертвенных алтаря для уравновешивания идола или нет.</p></div><div class="sample-tests"><div class="section-title">Примеры тестов</div><div class="sample-test"><div class="input"><div class="title">Входные данные</div><pre>3<br />0 0<br />1 0<br />1 1<br /><br />4<br />8 8<br />5 5<br />6 4<br />8 4<br /><br />3<br />-1 -1<br />-3 -1<br />-2 -2<br /><br />5<br />0 0<br />2 1<br />7 1<br />1 1<br />5 3<br /></pre></div><div class="output"><div class="title">Выходные данные</div><pre>NO<br />YES<br />NO<br />YES<br />NO<br /></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>Для возвышенности <span class="tex-span">(2, 1)</span> подойдет расположение алтарей в точках <span class="tex-span">(1, 0), (7, 5), ( - 2,  - 2)</span>, для возвышенности <span class="tex-span">(1, 1)</span> — точки <span class="tex-span">(0, 0), (6, 4), ( - 3,  - 1)</span>. Подойдет и много других троек точек. Для других возвышенностей подходящих троек нет.</p></div></div></div>

<script type="text/javascript">
    $(document).ready(function() {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }
    });
</script>
        </div>

    <br style="clear:both;"/>

    <div id="footer">
        <div><a href="http://codeforces.ru/">Codeforces</a> (c) Copyright 2010-2013 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>
</div>
</div>
</body>
</html>                                       
