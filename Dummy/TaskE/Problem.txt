E. Ярослав и алгоритм
ограничение по времени на тест2 секунды
ограничение по памяти на тест256 мегабайт
вводстандартный ввод
выводстандартный вывод
Ярослав любит алгоритмы. Опишем один из его самых любимых алгоритмов.

В качестве входных данных алгоритму дается строка. Обозначим эту входную строку через a.
Алгоритм состоит из некоторого количества команд. Команда номер i имеет вид либо si >> wi, либо si <> wi, где si и wi, некоторые, возможно, пустые строки, длины не более 7, состоящие из цифр и символов «?».
На каждой итерации алгоритма ищется команда с минимальным номером i, такая, что si содержится в a как подстрока. Если такая команда не найдена алгоритм завершается.
Обозначим номер найденной команды через k. В строке a первое вхождение строки sk заменяется на строку wk. Если при этом найденная команда имела вид sk >> wk, то алгоритм продолжает исполняться и переходит к следующей итерации. Иначе алгоритм завершает работу.
Значение строки a после завершения алгоритма считается выходом алгоритма.
Ярославу задан набор из n целых положительных чисел, ему требуется разработать алгоритм (конечно, алгоритм должен быть его самым любимым алгоритмом), который будет увеличивать каждое из заданных чисел на единицу. Более формально, если рассмотреть каждое число как строку, представляющую собой десятичную запись числа, то будучи запущенным на каждой из этих строк отдельно, алгоритм должен получать на выходе строку, являющуюся записью соответствующего числа, увеличенного на один.

Помогите Ярославу.

Входные данные
В первой строке содержится целое число n (1 ≤ n ≤ 100) — количество чисел в наборе. В следующих n строках содержится по одному целому положительному числу. Все заданные числа меньше 1025.

Выходные данные
Выведите алгоритм, который сможет по отдельности увеличить каждое число из набора. В i-той строке выведите команду номер i без пробелов.

Ваш алгоритм будет запущен для каждого из данных чисел. Ответ будет считаться правильным, если:

Каждая строка будет корректной командой алгоритма (смотри описание в условии задачи).
Количество команд не будет превышать 50.
Алгоритм будет увеличивать каждое из заданных чисел на единицу.
Для получения ответа алгоритм выполнит не более 200 итераций для каждого числа.
Примеры тестов
входные данные
2
10
79
выходные данные
10<>11
79<>80
